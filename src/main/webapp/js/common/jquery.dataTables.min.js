/*
 * File:        jquery.dataTables.min.js
 * Version:     1.9.2
 * Author:      Allan Jardine (www.sprymedia.co.uk)
 * Info:        www.datatables.net
 * 
 * Copyright 2008-2012 Allan Jardine, all rights reserved.
 *
 * This source file is free software, under either the GPL v2 license or a
 * BSD style license, available at:
 *   http://datatables.net/license_gpl2
 *   http://datatables.net/license_bsd
 * 
 * This source file is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 */
(function(i, V, l, n) {
	var j = function(e) {
		function o(a, b) {
			var c = j.defaults.columns,
				d = a.aoColumns.length,
				c = i.extend({}, j.models.oColumn, c, {
					sSortingClass: a.oClasses.sSortable,
					sSortingClassJUI: a.oClasses.sSortJUI,
					nTh: b ? b : l.createElement("th"),
					sTitle: c.sTitle ? c.sTitle : b ? b.innerHTML : "",
					aDataSort: c.aDataSort ? c.aDataSort : [d],
					mDataProp: c.mDataProp ? c.oDefaults : d
				});
			a.aoColumns.push(c);
			if(a.aoPreSearchCols[d] === n || null === a.aoPreSearchCols[d]) a.aoPreSearchCols[d] = i.extend({}, j.models.oSearch);
			else if(c = a.aoPreSearchCols[d],
				c.bRegex === n && (c.bRegex = !0), c.bSmart === n && (c.bSmart = !0), c.bCaseInsensitive === n) c.bCaseInsensitive = !0;
			r(a, d, null)
		}

		function r(a, b, c) {
			b = a.aoColumns[b];
			c !== n && null !== c && (c.sType !== n && (b.sType = c.sType, b._bAutoType = !1), i.extend(b, c), p(b, c, "sWidth", "sWidthOrig"), c.iDataSort !== n && (b.aDataSort = [c.iDataSort]), p(b, c, "aDataSort"));
			b.fnGetData = W(b.mDataProp);
			b.fnSetData = ta(b.mDataProp);
			a.oFeatures.bSort || (b.bSortable = !1);
			!b.bSortable || -1 == i.inArray("asc", b.asSorting) && -1 == i.inArray("desc", b.asSorting) ? (b.sSortingClass =
				a.oClasses.sSortableNone, b.sSortingClassJUI = "") : b.bSortable || -1 == i.inArray("asc", b.asSorting) && -1 == i.inArray("desc", b.asSorting) ? (b.sSortingClass = a.oClasses.sSortable, b.sSortingClassJUI = a.oClasses.sSortJUI) : -1 != i.inArray("asc", b.asSorting) && -1 == i.inArray("desc", b.asSorting) ? (b.sSortingClass = a.oClasses.sSortableAsc, b.sSortingClassJUI = a.oClasses.sSortJUIAscAllowed) : -1 == i.inArray("asc", b.asSorting) && -1 != i.inArray("desc", b.asSorting) && (b.sSortingClass = a.oClasses.sSortableDesc, b.sSortingClassJUI = a.oClasses.sSortJUIDescAllowed)
		}

		function k(a) {
			if(!1 === a.oFeatures.bAutoWidth) return !1;
			ba(a);
			for(var b = 0, c = a.aoColumns.length; b < c; b++) a.aoColumns[b].nTh.style.width = a.aoColumns[b].sWidth
		}

		function G(a, b) {
			for(var c = -1, d = 0; d < a.aoColumns.length; d++)
				if(!0 === a.aoColumns[d].bVisible && c++, c == b) return d;
			return null
		}

		function t(a, b) {
			for(var c = -1, d = 0; d < a.aoColumns.length; d++)
				if(!0 === a.aoColumns[d].bVisible && c++, d == b) return !0 === a.aoColumns[d].bVisible ? c : null;
			return null
		}

		function v(a) {
			for(var b = 0, c = 0; c < a.aoColumns.length; c++) !0 === a.aoColumns[c].bVisible &&
				b++;
			return b
		}

		function z(a) {
			for(var b = j.ext.aTypes, c = b.length, d = 0; d < c; d++) {
				var g = b[d](a);
				if(null !== g) return g
			}
			return "string"
		}

		function D(a, b) {
			for(var c = b.split(","), d = [], g = 0, f = a.aoColumns.length; g < f; g++)
				for(var h = 0; h < f; h++)
					if(a.aoColumns[g].sName == c[h]) {
						d.push(h);
						break
					}
			return d
		}

		function x(a) {
			for(var b = "", c = 0, d = a.aoColumns.length; c < d; c++) b += a.aoColumns[c].sName + ",";
			return b.length == d ? "" : b.slice(0, -1)
		}

		function J(a, b, c, d) {
			var g, f, h, e, s;
			if(b)
				for(g = b.length - 1; 0 <= g; g--) {
					var m = b[g].aTargets;
					i.isArray(m) ||
						E(a, 1, "aTargets must be an array of targets, not a " + typeof m);
					f = 0;
					for(h = m.length; f < h; f++)
						if("number" === typeof m[f] && 0 <= m[f]) {
							for(; a.aoColumns.length <= m[f];) o(a);
							d(m[f], b[g])
						} else if("number" === typeof m[f] && 0 > m[f]) d(a.aoColumns.length + m[f], b[g]);
					else if("string" === typeof m[f]) {
						e = 0;
						for(s = a.aoColumns.length; e < s; e++)("_all" == m[f] || i(a.aoColumns[e].nTh).hasClass(m[f])) && d(e, b[g])
					}
				}
			if(c) {
				g = 0;
				for(a = c.length; g < a; g++) d(g, c[g])
			}
		}

		function H(a, b) {
			var c;
			c = i.isArray(b) ? b.slice() : i.extend(!0, {}, b);
			var d = a.aoData.length,
				g = i.extend(!0, {}, j.models.oRow);
			g._aData = c;
			a.aoData.push(g);
			for(var f, g = 0, h = a.aoColumns.length; g < h; g++) c = a.aoColumns[g], "function" === typeof c.fnRender && c.bUseRendered && null !== c.mDataProp ? I(a, d, g, R(a, d, g)) : I(a, d, g, w(a, d, g)), c._bAutoType && "string" != c.sType && (f = w(a, d, g, "type"), null !== f && "" !== f && (f = z(f), null === c.sType ? c.sType = f : c.sType != f && "html" != c.sType && (c.sType = "string")));
			a.aiDisplayMaster.push(d);
			a.oFeatures.bDeferRender || ca(a, d);
			return d
		}

		function ua(a) {
			var b, c, d, g, f, h, e, s, m;
			if(a.bDeferLoading ||
				null === a.sAjaxSource) {
				e = a.nTBody.childNodes;
				b = 0;
				for(c = e.length; b < c; b++)
					if("TR" == e[b].nodeName.toUpperCase()) {
						s = a.aoData.length;
						e[b]._DT_RowIndex = s;
						a.aoData.push(i.extend(!0, {}, j.models.oRow, {
							nTr: e[b]
						}));
						a.aiDisplayMaster.push(s);
						h = e[b].childNodes;
						d = f = 0;
						for(g = h.length; d < g; d++)
							if(m = h[d].nodeName.toUpperCase(), "TD" == m || "TH" == m) I(a, s, f, i.trim(h[d].innerHTML)), f++
					}
			}
			e = S(a);
			h = [];
			b = 0;
			for(c = e.length; b < c; b++) {
				d = 0;
				for(g = e[b].childNodes.length; d < g; d++) f = e[b].childNodes[d], m = f.nodeName.toUpperCase(), ("TD" == m ||
					"TH" == m) && h.push(f)
			}
			g = 0;
			for(e = a.aoColumns.length; g < e; g++) {
				m = a.aoColumns[g];
				null === m.sTitle && (m.sTitle = m.nTh.innerHTML);
				f = m._bAutoType;
				s = "function" === typeof m.fnRender;
				var o = null !== m.sClass,
					k = m.bVisible,
					n, r;
				if(f || s || o || !k) {
					b = 0;
					for(c = a.aoData.length; b < c; b++) d = a.aoData[b], n = h[b * e + g], f && "string" != m.sType && (r = w(a, b, g, "type"), "" !== r && (r = z(r), null === m.sType ? m.sType = r : m.sType != r && "html" != m.sType && (m.sType = "string"))), "function" === typeof m.mDataProp && (n.innerHTML = w(a, b, g, "display")), s && (r = R(a, b, g), n.innerHTML =
						r, m.bUseRendered && I(a, b, g, r)), o && (n.className += " " + m.sClass), k ? d._anHidden[g] = null : (d._anHidden[g] = n, n.parentNode.removeChild(n)), m.fnCreatedCell && m.fnCreatedCell.call(a.oInstance, n, w(a, b, g, "display"), d._aData, b, g)
				}
			}
			if(0 !== a.aoRowCreatedCallback.length) {
				b = 0;
				for(c = a.aoData.length; b < c; b++) d = a.aoData[b], C(a, "aoRowCreatedCallback", null, [d.nTr, d._aData, b])
			}
		}

		function K(a, b) {
			return b._DT_RowIndex !== n ? b._DT_RowIndex : null
		}

		function da(a, b, c) {
			for(var b = L(a, b), d = 0, a = a.aoColumns.length; d < a; d++)
				if(b[d] === c) return d;
			return -1
		}

		function X(a, b, c) {
			for(var d = [], g = 0, f = a.aoColumns.length; g < f; g++) d.push(w(a, b, g, c));
			return d
		}

		function w(a, b, c, d) {
			var g = a.aoColumns[c];
			if((c = g.fnGetData(a.aoData[b]._aData, d)) === n) return a.iDrawError != a.iDraw && null === g.sDefaultContent && (E(a, 0, "Requested unknown parameter " + ("function" == typeof g.mDataProp ? "{mDataprop function}" : "'" + g.mDataProp + "'") + " from the data source for row " + b), a.iDrawError = a.iDraw), g.sDefaultContent;
			if(null === c && null !== g.sDefaultContent) c = g.sDefaultContent;
			else if("function" ===
				typeof c) return c();
			return "display" == d && null === c ? "" : c
		}

		function I(a, b, c, d) {
			a.aoColumns[c].fnSetData(a.aoData[b]._aData, d)
		}

		function W(a) {
			if(null === a) return function() {
				return null
			};
			if("function" === typeof a) return function(b, d) {
				return a(b, d)
			};
			if("string" === typeof a && -1 != a.indexOf(".")) {
				var b = a.split(".");
				return function(a) {
					for(var d = 0, g = b.length; d < g; d++)
						if(a = a[b[d]], a === n) return n;
					return a
				}
			}
			return function(b) {
				return b[a]
			}
		}

		function ta(a) {
			if(null === a) return function() {};
			if("function" === typeof a) return function(b,
				d) {
				a(b, "set", d)
			};
			if("string" === typeof a && -1 != a.indexOf(".")) {
				var b = a.split(".");
				return function(a, d) {
					for(var g = 0, f = b.length - 1; g < f; g++) a[b[g]] === n && (a[b[g]] = {}), a = a[b[g]];
					a[b[b.length - 1]] = d
				}
			}
			return function(b, d) {
				b[a] = d
			}
		}

		function Y(a) {
			for(var b = [], c = a.aoData.length, d = 0; d < c; d++) b.push(a.aoData[d]._aData);
			return b
		}

		function ea(a) {
			a.aoData.splice(0, a.aoData.length);
			a.aiDisplayMaster.splice(0, a.aiDisplayMaster.length);
			a.aiDisplay.splice(0, a.aiDisplay.length);
			A(a)
		}

		function fa(a, b) {
			for(var c = -1, d = 0, g = a.length; d <
				g; d++) a[d] == b ? c = d : a[d] > b && a[d]--; - 1 != c && a.splice(c, 1)
		}

		function R(a, b, c) {
			var d = a.aoColumns[c];
			return d.fnRender({
				iDataRow: b,
				iDataColumn: c,
				oSettings: a,
				aData: a.aoData[b]._aData,
				mDataProp: d.mDataProp
			}, w(a, b, c, "display"))
		}

		function ca(a, b) {
			var c = a.aoData[b],
				d;
			if(null === c.nTr) {
				c.nTr = l.createElement("tr");
				c.nTr._DT_RowIndex = b;
				c._aData.DT_RowId && (c.nTr.id = c._aData.DT_RowId);
				c._aData.DT_RowClass && i(c.nTr).addClass(c._aData.DT_RowClass);
				for(var g = 0, f = a.aoColumns.length; g < f; g++) {
					var h = a.aoColumns[g];
					d = l.createElement(h.sCellType);
					d.innerHTML = "function" === typeof h.fnRender && (!h.bUseRendered || null === h.mDataProp) ? R(a, b, g) : w(a, b, g, "display");
					null !== h.sClass && (d.className = h.sClass);
					h.bVisible ? (c.nTr.appendChild(d), c._anHidden[g] = null) : c._anHidden[g] = d;
					h.fnCreatedCell && h.fnCreatedCell.call(a.oInstance, d, w(a, b, g, "display"), c._aData, b, g)
				}
				C(a, "aoRowCreatedCallback", null, [c.nTr, c._aData, b])
			}
		}

		function va(a) {
			var b, c, d;
			if(0 !== a.nTHead.getElementsByTagName("th").length) {
				b = 0;
				for(d = a.aoColumns.length; b < d; b++)
					if(c = a.aoColumns[b].nTh, c.setAttribute("role",
							"columnheader"), a.aoColumns[b].bSortable && (c.setAttribute("tabindex", a.iTabIndex), c.setAttribute("aria-controls", a.sTableId)), null !== a.aoColumns[b].sClass && i(c).addClass(a.aoColumns[b].sClass), a.aoColumns[b].sTitle != c.innerHTML) c.innerHTML = a.aoColumns[b].sTitle
			} else {
				var g = l.createElement("tr");
				b = 0;
				for(d = a.aoColumns.length; b < d; b++) c = a.aoColumns[b].nTh, c.innerHTML = a.aoColumns[b].sTitle, c.setAttribute("tabindex", "0"), null !== a.aoColumns[b].sClass && i(c).addClass(a.aoColumns[b].sClass), g.appendChild(c);
				i(a.nTHead).html("")[0].appendChild(g);
				T(a.aoHeader, a.nTHead)
			}
			i(a.nTHead).children("tr").attr("role", "row");
			if(a.bJUI) {
				b = 0;
				for(d = a.aoColumns.length; b < d; b++) {
					c = a.aoColumns[b].nTh;
					g = l.createElement("div");
					g.className = a.oClasses.sSortJUIWrapper;
					i(c).contents().appendTo(g);
					var f = l.createElement("span");
					f.className = a.oClasses.sSortIcon;
					g.appendChild(f);
					c.appendChild(g)
				}
			}
			if(a.oFeatures.bSort)
				for(b = 0; b < a.aoColumns.length; b++) !1 !== a.aoColumns[b].bSortable ? ga(a, a.aoColumns[b].nTh, b) : i(a.aoColumns[b].nTh).addClass(a.oClasses.sSortableNone);
			"" !== a.oClasses.sFooterTH && i(a.nTFoot).children("tr").children("th").addClass(a.oClasses.sFooterTH);
			if(null !== a.nTFoot) {
				c = O(a, null, a.aoFooter);
				b = 0;
				for(d = a.aoColumns.length; b < d; b++) c[b] && (a.aoColumns[b].nTf = c[b], a.aoColumns[b].sClass && i(c[b]).addClass(a.aoColumns[b].sClass))
			}
		}

		function U(a, b, c) {
			var d, g, f, h = [],
				e = [],
				i = a.aoColumns.length,
				m;
			c === n && (c = !1);
			d = 0;
			for(g = b.length; d < g; d++) {
				h[d] = b[d].slice();
				h[d].nTr = b[d].nTr;
				for(f = i - 1; 0 <= f; f--) !a.aoColumns[f].bVisible && !c && h[d].splice(f, 1);
				e.push([])
			}
			d = 0;
			for(g =
				h.length; d < g; d++) {
				if(a = h[d].nTr)
					for(; f = a.firstChild;) a.removeChild(f);
				f = 0;
				for(b = h[d].length; f < b; f++)
					if(m = i = 1, e[d][f] === n) {
						a.appendChild(h[d][f].cell);
						for(e[d][f] = 1; h[d + i] !== n && h[d][f].cell == h[d + i][f].cell;) e[d + i][f] = 1, i++;
						for(; h[d][f + m] !== n && h[d][f].cell == h[d][f + m].cell;) {
							for(c = 0; c < i; c++) e[d + c][f + m] = 1;
							m++
						}
						h[d][f].cell.rowSpan = i;
						h[d][f].cell.colSpan = m
					}
			}
		}

		function y(a) {
			var b = C(a, "aoPreDrawCallback", "preDraw", [a]);
			if(-1 !== i.inArray(!1, b)) F(a, !1);
			else {
				var c, d, b = [],
					g = 0,
					f = a.asStripeClasses.length;
				c = a.aoOpenRows.length;
				a.bDrawing = !0;
				a.iInitDisplayStart !== n && -1 != a.iInitDisplayStart && (a._iDisplayStart = a.oFeatures.bServerSide ? a.iInitDisplayStart : a.iInitDisplayStart >= a.fnRecordsDisplay() ? 0 : a.iInitDisplayStart, a.iInitDisplayStart = -1, A(a));
				if(a.bDeferLoading) a.bDeferLoading = !1, a.iDraw++;
				else if(a.oFeatures.bServerSide) {
					if(!a.bDestroying && !wa(a)) return
				} else a.iDraw++;
				if(0 !== a.aiDisplay.length) {
					var h = a._iDisplayStart;
					d = a._iDisplayEnd;
					a.oFeatures.bServerSide && (h = 0, d = a.aoData.length);
					for(; h < d; h++) {
						var e = a.aoData[a.aiDisplay[h]];
						null === e.nTr && ca(a, a.aiDisplay[h]);
						var s = e.nTr;
						if(0 !== f) {
							var m = a.asStripeClasses[g % f];
							e._sRowStripe != m && (i(s).removeClass(e._sRowStripe).addClass(m), e._sRowStripe = m)
						}
						C(a, "aoRowCallback", null, [s, a.aoData[a.aiDisplay[h]]._aData, g, h]);
						b.push(s);
						g++;
						if(0 !== c)
							for(e = 0; e < c; e++)
								if(s == a.aoOpenRows[e].nParent) {
									b.push(a.aoOpenRows[e].nTr);
									break
								}
					}
				} else b[0] = l.createElement("tr"), a.asStripeClasses[0] && (b[0].className = a.asStripeClasses[0]), c = a.oLanguage, f = c.sZeroRecords, 1 == a.iDraw && null !== a.sAjaxSource && !a.oFeatures.bServerSide ?
					f = c.sLoadingRecords : c.sEmptyTable && 0 === a.fnRecordsTotal() && (f = c.sEmptyTable), c = l.createElement("td"), c.setAttribute("valign", "top"), c.colSpan = v(a), c.className = a.oClasses.sRowEmpty, c.innerHTML = ha(a, f), b[g].appendChild(c);
				C(a, "aoHeaderCallback", "header", [i(a.nTHead).children("tr")[0], Y(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay]);
				C(a, "aoFooterCallback", "footer", [i(a.nTFoot).children("tr")[0], Y(a), a._iDisplayStart, a.fnDisplayEnd(), a.aiDisplay]);
				g = l.createDocumentFragment();
				c = l.createDocumentFragment();
				if(a.nTBody) {
					f = a.nTBody.parentNode;
					c.appendChild(a.nTBody);
					if(!a.oScroll.bInfinite || !a._bInitComplete || a.bSorted || a.bFiltered)
						for(; c = a.nTBody.firstChild;) a.nTBody.removeChild(c);
					c = 0;
					for(d = b.length; c < d; c++) g.appendChild(b[c]);
					a.nTBody.appendChild(g);
					null !== f && f.appendChild(a.nTBody)
				}
				C(a, "aoDrawCallback", "draw", [a]);
				a.bSorted = !1;
				a.bFiltered = !1;
				a.bDrawing = !1;
				a.oFeatures.bServerSide && (F(a, !1), a._bInitComplete || Z(a))
			}
		}

		function $(a) {
			a.oFeatures.bSort ? P(a, a.oPreviousSearch) : a.oFeatures.bFilter ? M(a, a.oPreviousSearch) :
				(A(a), y(a))
		}

		function xa(a) {
			var b = i("<div></div>")[0];
			a.nTable.parentNode.insertBefore(b, a.nTable);
			a.nTableWrapper = i('<div id="' + a.sTableId + '_wrapper" class="' + a.oClasses.sWrapper + '" role="grid"></div>')[0];
			a.nTableReinsertBefore = a.nTable.nextSibling;
			for(var c = a.nTableWrapper, d = a.sDom.split(""), g, f, h, e, s, m, o, k = 0; k < d.length; k++) {
				f = 0;
				h = d[k];
				if("<" == h) {
					e = i("<div></div>")[0];
					s = d[k + 1];
					if("'" == s || '"' == s) {
						m = "";
						for(o = 2; d[k + o] != s;) m += d[k + o], o++;
						"H" == m ? m = a.oClasses.sJUIHeader : "F" == m && (m = a.oClasses.sJUIFooter); -
						1 != m.indexOf(".") ? (s = m.split("."), e.id = s[0].substr(1, s[0].length - 1), e.className = s[1]) : "#" == m.charAt(0) ? e.id = m.substr(1, m.length - 1) : e.className = m;
						k += o
					}
					c.appendChild(e);
					c = e
				} else if(">" == h) c = c.parentNode;
				else if("l" == h && a.oFeatures.bPaginate && a.oFeatures.bLengthChange) g = ya(a), f = 1;
				else if("f" == h && a.oFeatures.bFilter) g = za(a), f = 1;
				else if("r" == h && a.oFeatures.bProcessing) g = Aa(a), f = 1;
				else if("t" == h) g = Ba(a), f = 1;
				else if("i" == h && a.oFeatures.bInfo) g = Ca(a), f = 1;
				else if("p" == h && a.oFeatures.bPaginate) g = Da(a), f = 1;
				else if(0 !== j.ext.aoFeatures.length) {
					e = j.ext.aoFeatures;
					o = 0;
					for(s = e.length; o < s; o++)
						if(h == e[o].cFeature) {
							(g = e[o].fnInit(a)) && (f = 1);
							break
						}
				}
				1 == f && null !== g && ("object" !== typeof a.aanFeatures[h] && (a.aanFeatures[h] = []), a.aanFeatures[h].push(g), c.appendChild(g))
			}
			b.parentNode.replaceChild(a.nTableWrapper, b)
		}

		function T(a, b) {
			var c = i(b).children("tr"),
				d, g, f, h, e, s, m, j;
			a.splice(0, a.length);
			g = 0;
			for(s = c.length; g < s; g++) a.push([]);
			g = 0;
			for(s = c.length; g < s; g++) {
				f = 0;
				for(m = c[g].childNodes.length; f < m; f++)
					if(d = c[g].childNodes[f],
						"TD" == d.nodeName.toUpperCase() || "TH" == d.nodeName.toUpperCase()) {
						var o = 1 * d.getAttribute("colspan"),
							k = 1 * d.getAttribute("rowspan"),
							o = !o || 0 === o || 1 === o ? 1 : o,
							k = !k || 0 === k || 1 === k ? 1 : k;
						for(h = 0; a[g][h];) h++;
						j = h;
						for(e = 0; e < o; e++)
							for(h = 0; h < k; h++) a[g + h][j + e] = {
								cell: d,
								unique: 1 == o ? !0 : !1
							}, a[g + h].nTr = c[g]
					}
			}
		}

		function O(a, b, c) {
			var d = [];
			c || (c = a.aoHeader, b && (c = [], T(c, b)));
			for(var b = 0, g = c.length; b < g; b++)
				for(var f = 0, h = c[b].length; f < h; f++)
					if(c[b][f].unique && (!d[f] || !a.bSortCellsTop)) d[f] = c[b][f].cell;
			return d
		}

		function wa(a) {
			if(a.bAjaxDataGet) {
				a.iDraw++;
				F(a, !0);
				var b = Ea(a);
				ia(a, b);
				a.fnServerData.call(a.oInstance, a.sAjaxSource, b, function(b) {
					Fa(a, b)
				}, a);
				return !1
			}
			return !0
		}

		function Ea(a) {
			var b = a.aoColumns.length,
				c = [],
				d, g, f, h;
			c.push({
				name: "sEcho",
				value: a.iDraw
			});
			c.push({
				name: "iColumns",
				value: b
			});
			c.push({
				name: "sColumns",
				value: x(a)
			});
			c.push({
				name: "iDisplayStart",
				value: a._iDisplayStart
			});
			c.push({
				name: "iDisplayLength",
				value: !1 !== a.oFeatures.bPaginate ? a._iDisplayLength : -1
			});
			for(f = 0; f < b; f++) d = a.aoColumns[f].mDataProp, c.push({
				name: "mDataProp_" + f,
				value: "function" ===
					typeof d ? "function" : d
			});
			if(!1 !== a.oFeatures.bFilter) {
				c.push({
					name: "sSearch",
					value: a.oPreviousSearch.sSearch
				});
				c.push({
					name: "bRegex",
					value: a.oPreviousSearch.bRegex
				});
				for(f = 0; f < b; f++) c.push({
					name: "sSearch_" + f,
					value: a.aoPreSearchCols[f].sSearch
				}), c.push({
					name: "bRegex_" + f,
					value: a.aoPreSearchCols[f].bRegex
				}), c.push({
					name: "bSearchable_" + f,
					value: a.aoColumns[f].bSearchable
				})
			}
			if(!1 !== a.oFeatures.bSort) {
				var e = 0;
				d = null !== a.aaSortingFixed ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice();
				for(f = 0; f < d.length; f++) {
					g =
						a.aoColumns[d[f][0]].aDataSort;
					for(h = 0; h < g.length; h++) c.push({
						name: "iSortCol_" + e,
						value: g[h]
					}), c.push({
						name: "sSortDir_" + e,
						value: d[f][1]
					}), e++
				}
				c.push({
					name: "iSortingCols",
					value: e
				});
				for(f = 0; f < b; f++) c.push({
					name: "bSortable_" + f,
					value: a.aoColumns[f].bSortable
				})
			}
			return c
		}

		function ia(a, b) {
			C(a, "aoServerParams", "serverParams", [b])
		}

		function Fa(a, b) {
			if(b.sEcho !== n) {
				if(1 * b.sEcho < a.iDraw) return;
				a.iDraw = 1 * b.sEcho
			}(!a.oScroll.bInfinite || a.oScroll.bInfinite && (a.bSorted || a.bFiltered)) && ea(a);
			a._iRecordsTotal = parseInt(b.iTotalRecords,
				10);
			a._iRecordsDisplay = parseInt(b.iTotalDisplayRecords, 10);
			var c = x(a),
				c = b.sColumns !== n && "" !== c && b.sColumns != c,
				d;
			c && (d = D(a, b.sColumns));
			for(var g = W(a.sAjaxDataProp)(b), f = 0, h = g.length; f < h; f++)
				if(c) {
					for(var e = [], i = 0, m = a.aoColumns.length; i < m; i++) e.push(g[f][d[i]]);
					H(a, e)
				} else H(a, g[f]);
			a.aiDisplay = a.aiDisplayMaster.slice();
			a.bAjaxDataGet = !1;
			y(a);
			a.bAjaxDataGet = !0;
			F(a, !1)
		}

		function za(a) {
			var b = a.oPreviousSearch,
				c = a.oLanguage.sSearch,
				c = -1 !== c.indexOf("_INPUT_") ? c.replace("_INPUT_", '<input type="text" />') :
				"" === c ? '<input type="text" />' : c + ' <input type="text" />',
				d = l.createElement("div");
			d.className = a.oClasses.sFilter;
			d.innerHTML = "<label>" + c + "</label>";
			a.aanFeatures.f || (d.id = a.sTableId + "_filter");
			c = i('input[type="text"]', d);
			d._DT_Input = c[0];
			c.val(b.sSearch.replace('"', "&quot;"));
			c.bind("keyup.DT", function() {
				for(var c = a.aanFeatures.f, d = this.value === "" ? "" : this.value, h = 0, e = c.length; h < e; h++) c[h] != i(this).parents("div.dataTables_filter")[0] && i(c[h]._DT_Input).val(d);
				d != b.sSearch && M(a, {
					sSearch: d,
					bRegex: b.bRegex,
					bSmart: b.bSmart,
					bCaseInsensitive: b.bCaseInsensitive
				})
			});
			c.attr("aria-controls", a.sTableId).bind("keypress.DT", function(a) {
				if(a.keyCode == 13) return false
			});
			return d
		}

		function M(a, b, c) {
			var d = a.oPreviousSearch,
				g = a.aoPreSearchCols,
				f = function(a) {
					d.sSearch = a.sSearch;
					d.bRegex = a.bRegex;
					d.bSmart = a.bSmart;
					d.bCaseInsensitive = a.bCaseInsensitive
				};
			if(a.oFeatures.bServerSide) f(b);
			else {
				Ga(a, b.sSearch, c, b.bRegex, b.bSmart, b.bCaseInsensitive);
				f(b);
				for(b = 0; b < a.aoPreSearchCols.length; b++) Ha(a, g[b].sSearch, b, g[b].bRegex,
					g[b].bSmart, g[b].bCaseInsensitive);
				Ia(a)
			}
			a.bFiltered = !0;
			i(a.oInstance).trigger("filter", a);
			a._iDisplayStart = 0;
			A(a);
			y(a);
			ja(a, 0)
		}

		function Ia(a) {
			for(var b = j.ext.afnFiltering, c = 0, d = b.length; c < d; c++)
				for(var g = 0, f = 0, h = a.aiDisplay.length; f < h; f++) {
					var e = a.aiDisplay[f - g];
					b[c](a, X(a, e, "filter"), e) || (a.aiDisplay.splice(f - g, 1), g++)
				}
		}

		function Ha(a, b, c, d, g, f) {
			if("" !== b)
				for(var h = 0, b = ka(b, d, g, f), d = a.aiDisplay.length - 1; 0 <= d; d--) g = la(w(a, a.aiDisplay[d], c, "filter"), a.aoColumns[c].sType), b.test(g) || (a.aiDisplay.splice(d,
					1), h++)
		}

		function Ga(a, b, c, d, g, f) {
			d = ka(b, d, g, f);
			g = a.oPreviousSearch;
			c || (c = 0);
			0 !== j.ext.afnFiltering.length && (c = 1);
			if(0 >= b.length) a.aiDisplay.splice(0, a.aiDisplay.length), a.aiDisplay = a.aiDisplayMaster.slice();
			else if(a.aiDisplay.length == a.aiDisplayMaster.length || g.sSearch.length > b.length || 1 == c || 0 !== b.indexOf(g.sSearch)) {
				a.aiDisplay.splice(0, a.aiDisplay.length);
				ja(a, 1);
				for(b = 0; b < a.aiDisplayMaster.length; b++) d.test(a.asDataSearch[b]) && a.aiDisplay.push(a.aiDisplayMaster[b])
			} else
				for(b = c = 0; b < a.asDataSearch.length; b++) d.test(a.asDataSearch[b]) ||
					(a.aiDisplay.splice(b - c, 1), c++)
		}

		function ja(a, b) {
			if(!a.oFeatures.bServerSide) {
				a.asDataSearch.splice(0, a.asDataSearch.length);
				for(var c = b && 1 === b ? a.aiDisplayMaster : a.aiDisplay, d = 0, g = c.length; d < g; d++) a.asDataSearch[d] = ma(a, X(a, c[d], "filter"))
			}
		}

		function ma(a, b) {
			var c = "";
			a.__nTmpFilter === n && (a.__nTmpFilter = l.createElement("div"));
			for(var d = a.__nTmpFilter, g = 0, f = a.aoColumns.length; g < f; g++) a.aoColumns[g].bSearchable && (c += la(b[g], a.aoColumns[g].sType) + "  "); - 1 !== c.indexOf("&") && (d.innerHTML = c, c = d.textContent ?
				d.textContent : d.innerText, c = c.replace(/\n/g, " ").replace(/\r/g, ""));
			return c
		}

		function ka(a, b, c, d) {
			if(c) return a = b ? a.split(" ") : na(a).split(" "), a = "^(?=.*?" + a.join(")(?=.*?") + ").*$", RegExp(a, d ? "i" : "");
			a = b ? a : na(a);
			return RegExp(a, d ? "i" : "")
		}

		function la(a, b) {
			return "function" === typeof j.ext.ofnSearch[b] ? j.ext.ofnSearch[b](a) : null === a ? "" : "html" == b ? a.replace(/[\r\n]/g, " ").replace(/<.*?>/g, "") : "string" === typeof a ? a.replace(/[\r\n]/g, " ") : a
		}

		function na(a) {
			return a.replace(RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)",
				"g"), "\\$1")
		}

		function Ca(a) {
			var b = l.createElement("div");
			b.className = a.oClasses.sInfo;
			a.aanFeatures.i || (a.aoDrawCallback.push({
				fn: Ja,
				sName: "information"
			}), b.id = a.sTableId + "_info");
			a.nTable.setAttribute("aria-describedby", a.sTableId + "_info");
			return b
		}

		function Ja(a) {
			if(a.oFeatures.bInfo && 0 !== a.aanFeatures.i.length) {
				var b = a.oLanguage,
					c = a._iDisplayStart + 1,
					d = a.fnDisplayEnd(),
					g = a.fnRecordsTotal(),
					f = a.fnRecordsDisplay(),
					h;
				h = 0 === f && f == g ? b.sInfoEmpty : 0 === f ? b.sInfoEmpty + " " + b.sInfoFiltered : f == g ? b.sInfo : b.sInfo +
					" " + b.sInfoFiltered;
				h += b.sInfoPostFix;
				h = ha(a, h);
				null !== b.fnInfoCallback && (h = b.fnInfoCallback.call(a.oInstance, a, c, d, g, f, h));
				a = a.aanFeatures.i;
				b = 0;
				for(c = a.length; b < c; b++) i(a[b]).html(h)
			}
		}

		function ha(a, b) {
			var c = a.fnFormatNumber(a._iDisplayStart + 1),
				d = a.fnDisplayEnd(),
				d = a.fnFormatNumber(d),
				g = a.fnRecordsDisplay(),
				g = a.fnFormatNumber(g),
				f = a.fnRecordsTotal(),
				f = a.fnFormatNumber(f);
			a.oScroll.bInfinite && (c = a.fnFormatNumber(1));
			return b.replace("_START_", c).replace("_END_", d).replace("_TOTAL_", g).replace("_MAX_",
				f)
		}

		function aa(a) {
			var b, c, d = a.iInitDisplayStart;
			if(!1 === a.bInitialised) setTimeout(function() {
				aa(a)
			}, 200);
			else {
				xa(a);
				va(a);
				U(a, a.aoHeader);
				a.nTFoot && U(a, a.aoFooter);
				F(a, !0);
				a.oFeatures.bAutoWidth && ba(a);
				b = 0;
				for(c = a.aoColumns.length; b < c; b++) null !== a.aoColumns[b].sWidth && (a.aoColumns[b].nTh.style.width = q(a.aoColumns[b].sWidth));
				a.oFeatures.bSort ? P(a) : a.oFeatures.bFilter ? M(a, a.oPreviousSearch) : (a.aiDisplay = a.aiDisplayMaster.slice(), A(a), y(a));
				null !== a.sAjaxSource && !a.oFeatures.bServerSide ? (c = [], ia(a,
					c), a.fnServerData.call(a.oInstance, a.sAjaxSource, c, function(c) {
					var f = a.sAjaxDataProp !== "" ? W(a.sAjaxDataProp)(c) : c;
					for(b = 0; b < f.length; b++) H(a, f[b]);
					a.iInitDisplayStart = d;
					if(a.oFeatures.bSort) P(a);
					else {
						a.aiDisplay = a.aiDisplayMaster.slice();
						A(a);
						y(a)
					}
					F(a, false);
					Z(a, c)
				}, a)) : a.oFeatures.bServerSide || (F(a, !1), Z(a))
			}
		}

		function Z(a, b) {
			a._bInitComplete = !0;
			C(a, "aoInitComplete", "init", [a, b])
		}

		function oa(a) {
			var b = j.defaults.oLanguage;
			!a.sEmptyTable && (a.sZeroRecords && "No data available in table" === b.sEmptyTable) &&
				p(a, a, "sZeroRecords", "sEmptyTable");
			!a.sLoadingRecords && (a.sZeroRecords && "Loading..." === b.sLoadingRecords) && p(a, a, "sZeroRecords", "sLoadingRecords")
		}

		function ya(a) {
			if(a.oScroll.bInfinite) return null;
			var b = '<select size="1" ' + ('name="' + a.sTableId + '_length"') + ">",
				c, d, g = a.aLengthMenu;
			if(2 == g.length && "object" === typeof g[0] && "object" === typeof g[1]) {
				c = 0;
				for(d = g[0].length; c < d; c++) b += '<option value="' + g[0][c] + '">' + g[1][c] + "</option>"
			} else {
				c = 0;
				for(d = g.length; c < d; c++) b += '<option value="' + g[c] + '">' + g[c] + "</option>"
			}
			b +=
				"</select>";
			g = l.createElement("div");
			a.aanFeatures.l || (g.id = a.sTableId + "_length");
			g.className = a.oClasses.sLength;
			g.innerHTML = "<label>" + a.oLanguage.sLengthMenu.replace("_MENU_", b) + "</label>";
			i('select option[value="' + a._iDisplayLength + '"]', g).attr("selected", !0);
			i("select", g).bind("change.DT", function() {
				var b = i(this).val(),
					g = a.aanFeatures.l;
				c = 0;
				for(d = g.length; c < d; c++) g[c] != this.parentNode && i("select", g[c]).val(b);
				a._iDisplayLength = parseInt(b, 10);
				A(a);
				if(a.fnDisplayEnd() == a.fnRecordsDisplay()) {
					a._iDisplayStart =
						a.fnDisplayEnd() - a._iDisplayLength;
					if(a._iDisplayStart < 0) a._iDisplayStart = 0
				}
				if(a._iDisplayLength == -1) a._iDisplayStart = 0;
				y(a)
			});
			i("select", g).attr("aria-controls", a.sTableId);
			return g
		}

		function A(a) {
			a._iDisplayEnd = !1 === a.oFeatures.bPaginate ? a.aiDisplay.length : a._iDisplayStart + a._iDisplayLength > a.aiDisplay.length || -1 == a._iDisplayLength ? a.aiDisplay.length : a._iDisplayStart + a._iDisplayLength
		}

		function Da(a) {
			if(a.oScroll.bInfinite) return null;
			var b = l.createElement("div");
			b.className = a.oClasses.sPaging + a.sPaginationType;
			j.ext.oPagination[a.sPaginationType].fnInit(a, b, function(a) {
				A(a);
				y(a)
			});
			a.aanFeatures.p || a.aoDrawCallback.push({
				fn: function(a) {
					j.ext.oPagination[a.sPaginationType].fnUpdate(a, function(a) {
						A(a);
						y(a)
					})
				},
				sName: "pagination"
			});
			return b
		}

		function pa(a, b) {
			var c = a._iDisplayStart;
			if("number" === typeof b) a._iDisplayStart = b * a._iDisplayLength, a._iDisplayStart > a.fnRecordsDisplay() && (a._iDisplayStart = 0);
			else if("first" == b) a._iDisplayStart = 0;
			else if("previous" == b) a._iDisplayStart = 0 <= a._iDisplayLength ? a._iDisplayStart -
				a._iDisplayLength : 0, 0 > a._iDisplayStart && (a._iDisplayStart = 0);
			else if("next" == b) 0 <= a._iDisplayLength ? a._iDisplayStart + a._iDisplayLength < a.fnRecordsDisplay() && (a._iDisplayStart += a._iDisplayLength) : a._iDisplayStart = 0;
			else if("last" == b)
				if(0 <= a._iDisplayLength) {
					var d = parseInt((a.fnRecordsDisplay() - 1) / a._iDisplayLength, 10) + 1;
					a._iDisplayStart = (d - 1) * a._iDisplayLength
				} else a._iDisplayStart = 0;
			else E(a, 0, "Unknown paging action: " + b);
			i(a.oInstance).trigger("page", a);
			return c != a._iDisplayStart
		}

		function Aa(a) {
			var b =
				l.createElement("div");
			a.aanFeatures.r || (b.id = a.sTableId + "_processing");
			b.innerHTML = a.oLanguage.sProcessing;
			b.className = a.oClasses.sProcessing;
			a.nTable.parentNode.insertBefore(b, a.nTable);
			return b
		}

		function F(a, b) {
			if(a.oFeatures.bProcessing)
				for(var c = a.aanFeatures.r, d = 0, g = c.length; d < g; d++) c[d].style.visibility = b ? "visible" : "hidden";
			i(a.oInstance).trigger("processing", [a, b])
		}

		function Ba(a) {
			if("" === a.oScroll.sX && "" === a.oScroll.sY) return a.nTable;
			var b = l.createElement("div"),
				c = l.createElement("div"),
				d =
				l.createElement("div"),
				g = l.createElement("div"),
				f = l.createElement("div"),
				h = l.createElement("div"),
				e = a.nTable.cloneNode(!1),
				j = a.nTable.cloneNode(!1),
				m = a.nTable.getElementsByTagName("thead")[0],
				o = 0 === a.nTable.getElementsByTagName("tfoot").length ? null : a.nTable.getElementsByTagName("tfoot")[0],
				k = a.oClasses;
			c.appendChild(d);
			f.appendChild(h);
			g.appendChild(a.nTable);
			b.appendChild(c);
			b.appendChild(g);
			d.appendChild(e);
			e.appendChild(m);
			null !== o && (b.appendChild(f), h.appendChild(j), j.appendChild(o));
			b.className =
				k.sScrollWrapper;
			c.className = k.sScrollHead;
			d.className = k.sScrollHeadInner;
			g.className = k.sScrollBody;
			f.className = k.sScrollFoot;
			h.className = k.sScrollFootInner;
			a.oScroll.bAutoCss && (c.style.overflow = "hidden", c.style.position = "relative", f.style.overflow = "hidden", g.style.overflow = "auto");
			c.style.border = "0";
			c.style.width = "100%";
			f.style.border = "0";
			d.style.width = "" !== a.oScroll.sXInner ? a.oScroll.sXInner : "100%";
			e.removeAttribute("id");
			e.style.marginLeft = "0";
			a.nTable.style.marginLeft = "0";
			null !== o && (j.removeAttribute("id"),
				j.style.marginLeft = "0");
			d = i(a.nTable).children("caption");
			0 < d.length && (d = d[0], "top" === d._captionSide ? e.appendChild(d) : "bottom" === d._captionSide && o && j.appendChild(d));
			"" !== a.oScroll.sX && (c.style.width = q(a.oScroll.sX), g.style.width = q(a.oScroll.sX), null !== o && (f.style.width = q(a.oScroll.sX)), i(g).scroll(function() {
				c.scrollLeft = this.scrollLeft;
				if(o !== null) f.scrollLeft = this.scrollLeft
			}));
			"" !== a.oScroll.sY && (g.style.height = q(a.oScroll.sY));
			a.aoDrawCallback.push({
				fn: Ka,
				sName: "scrolling"
			});
			a.oScroll.bInfinite &&
				i(g).scroll(function() {
					if(!a.bDrawing && i(this).scrollTop() !== 0 && i(this).scrollTop() + i(this).height() > i(a.nTable).height() - a.oScroll.iLoadGap && a.fnDisplayEnd() < a.fnRecordsDisplay()) {
						pa(a, "next");
						A(a);
						y(a)
					}
				});
			a.nScrollHead = c;
			a.nScrollFoot = f;
			return b
		}

		function Ka(a) {
			var b = a.nScrollHead.getElementsByTagName("div")[0],
				c = b.getElementsByTagName("table")[0],
				d = a.nTable.parentNode,
				g, f, h, e, j, m, o, k, n = [],
				r = null !== a.nTFoot ? a.nScrollFoot.getElementsByTagName("div")[0] : null,
				p = null !== a.nTFoot ? r.getElementsByTagName("table")[0] :
				null,
				l = i.browser.msie && 7 >= i.browser.version;
			i(a.nTable).children("thead, tfoot").remove();
			h = i(a.nTHead).clone()[0];
			a.nTable.insertBefore(h, a.nTable.childNodes[0]);
			null !== a.nTFoot && (j = i(a.nTFoot).clone()[0], a.nTable.insertBefore(j, a.nTable.childNodes[1]));
			"" === a.oScroll.sX && (d.style.width = "100%", b.parentNode.style.width = "100%");
			var t = O(a, h);
			g = 0;
			for(f = t.length; g < f; g++) o = G(a, g), t[g].style.width = a.aoColumns[o].sWidth;
			null !== a.nTFoot && N(function(a) {
				a.style.width = ""
			}, j.getElementsByTagName("tr"));
			a.oScroll.bCollapse &&
				"" !== a.oScroll.sY && (d.style.height = d.offsetHeight + a.nTHead.offsetHeight + "px");
			g = i(a.nTable).outerWidth();
			if("" === a.oScroll.sX) {
				if(a.nTable.style.width = "100%", l && (i("tbody", d).height() > d.offsetHeight || "scroll" == i(d).css("overflow-y"))) a.nTable.style.width = q(i(a.nTable).outerWidth() - a.oScroll.iBarWidth)
			} else "" !== a.oScroll.sXInner ? a.nTable.style.width = q(a.oScroll.sXInner) : g == i(d).width() && i(d).height() < i(a.nTable).height() ? (a.nTable.style.width = q(g - a.oScroll.iBarWidth), i(a.nTable).outerWidth() > g - a.oScroll.iBarWidth &&
				(a.nTable.style.width = q(g))) : a.nTable.style.width = q(g);
			g = i(a.nTable).outerWidth();
			f = a.nTHead.getElementsByTagName("tr");
			h = h.getElementsByTagName("tr");
			N(function(a, b) {
				m = a.style;
				m.paddingTop = "0";
				m.paddingBottom = "0";
				m.borderTopWidth = "0";
				m.borderBottomWidth = "0";
				m.height = 0;
				k = i(a).width();
				b.style.width = q(k);
				n.push(k)
			}, h, f);
			i(h).height(0);
			null !== a.nTFoot && (e = j.getElementsByTagName("tr"), j = a.nTFoot.getElementsByTagName("tr"), N(function(a, b) {
				m = a.style;
				m.paddingTop = "0";
				m.paddingBottom = "0";
				m.borderTopWidth =
					"0";
				m.borderBottomWidth = "0";
				m.height = 0;
				k = i(a).width();
				b.style.width = q(k);
				n.push(k)
			}, e, j), i(e).height(0));
			N(function(a) {
				a.innerHTML = "";
				a.style.width = q(n.shift())
			}, h);
			null !== a.nTFoot && N(function(a) {
				a.innerHTML = "";
				a.style.width = q(n.shift())
			}, e);
			if(i(a.nTable).outerWidth() < g) {
				e = d.scrollHeight > d.offsetHeight || "scroll" == i(d).css("overflow-y") ? g + a.oScroll.iBarWidth : g;
				if(l && (d.scrollHeight > d.offsetHeight || "scroll" == i(d).css("overflow-y"))) a.nTable.style.width = q(e - a.oScroll.iBarWidth);
				d.style.width = q(e);
				b.parentNode.style.width =
					q(e);
				null !== a.nTFoot && (r.parentNode.style.width = q(e));
				"" === a.oScroll.sX ? E(a, 1, "The table cannot fit into the current element which will cause column misalignment. The table has been drawn at its minimum possible width.") : "" !== a.oScroll.sXInner && E(a, 1, "The table cannot fit into the current element which will cause column misalignment. Increase the sScrollXInner value or remove it to allow automatic calculation")
			} else d.style.width = q("100%"), b.parentNode.style.width = q("100%"), null !== a.nTFoot && (r.parentNode.style.width =
				q("100%"));
			"" === a.oScroll.sY && l && (d.style.height = q(a.nTable.offsetHeight + a.oScroll.iBarWidth));
			"" !== a.oScroll.sY && a.oScroll.bCollapse && (d.style.height = q(a.oScroll.sY), l = "" !== a.oScroll.sX && a.nTable.offsetWidth > d.offsetWidth ? a.oScroll.iBarWidth : 0, a.nTable.offsetHeight < d.offsetHeight && (d.style.height = q(a.nTable.offsetHeight + l)));
			l = i(a.nTable).outerWidth();
			c.style.width = q(l);
			b.style.width = q(l);
			c = i(a.nTable).height() > d.clientHeight || "scroll" == i(d).css("overflow-y");
			b.style.paddingRight = c ? a.oScroll.iBarWidth +
				"px" : "0px";
			null !== a.nTFoot && (p.style.width = q(l), r.style.width = q(l), r.style.paddingRight = c ? a.oScroll.iBarWidth + "px" : "0px");
			i(d).scroll();
			if(a.bSorted || a.bFiltered) d.scrollTop = 0
		}

		function N(a, b, c) {
			for(var d = 0, g = b.length; d < g; d++)
				for(var f = 0, h = b[d].childNodes.length; f < h; f++) 1 == b[d].childNodes[f].nodeType && (c ? a(b[d].childNodes[f], c[d].childNodes[f]) : a(b[d].childNodes[f]))
		}

		function La(a, b) {
			if(!a || null === a || "" === a) return 0;
			b || (b = l.getElementsByTagName("body")[0]);
			var c, d = l.createElement("div");
			d.style.width =
				q(a);
			b.appendChild(d);
			c = d.offsetWidth;
			b.removeChild(d);
			return c
		}

		function ba(a) {
			var b = 0,
				c, d = 0,
				g = a.aoColumns.length,
				f, h = i("th", a.nTHead),
				e = a.nTable.getAttribute("width");
			for(f = 0; f < g; f++) a.aoColumns[f].bVisible && (d++, null !== a.aoColumns[f].sWidth && (c = La(a.aoColumns[f].sWidthOrig, a.nTable.parentNode), null !== c && (a.aoColumns[f].sWidth = q(c)), b++));
			if(g == h.length && 0 === b && d == g && "" === a.oScroll.sX && "" === a.oScroll.sY)
				for(f = 0; f < a.aoColumns.length; f++) c = i(h[f]).width(), null !== c && (a.aoColumns[f].sWidth = q(c));
			else {
				b =
					a.nTable.cloneNode(!1);
				f = a.nTHead.cloneNode(!0);
				d = l.createElement("tbody");
				c = l.createElement("tr");
				b.removeAttribute("id");
				b.appendChild(f);
				null !== a.nTFoot && (b.appendChild(a.nTFoot.cloneNode(!0)), N(function(a) {
					a.style.width = ""
				}, b.getElementsByTagName("tr")));
				b.appendChild(d);
				d.appendChild(c);
				d = i("thead th", b);
				0 === d.length && (d = i("tbody tr:eq(0)>td", b));
				h = O(a, f);
				for(f = d = 0; f < g; f++) {
					var j = a.aoColumns[f];
					j.bVisible && null !== j.sWidthOrig && "" !== j.sWidthOrig ? h[f - d].style.width = q(j.sWidthOrig) : j.bVisible ? h[f -
						d].style.width = "" : d++
				}
				for(f = 0; f < g; f++) a.aoColumns[f].bVisible && (d = Ma(a, f), null !== d && (d = d.cloneNode(!0), "" !== a.aoColumns[f].sContentPadding && (d.innerHTML += a.aoColumns[f].sContentPadding), c.appendChild(d)));
				g = a.nTable.parentNode;
				g.appendChild(b);
				"" !== a.oScroll.sX && "" !== a.oScroll.sXInner ? b.style.width = q(a.oScroll.sXInner) : "" !== a.oScroll.sX ? (b.style.width = "", i(b).width() < g.offsetWidth && (b.style.width = q(g.offsetWidth))) : "" !== a.oScroll.sY ? b.style.width = q(g.offsetWidth) : e && (b.style.width = q(e));
				b.style.visibility =
					"hidden";
				Na(a, b);
				g = i("tbody tr:eq(0)", b).children();
				0 === g.length && (g = O(a, i("thead", b)[0]));
				if("" !== a.oScroll.sX) {
					for(f = d = c = 0; f < a.aoColumns.length; f++) a.aoColumns[f].bVisible && (c = null === a.aoColumns[f].sWidthOrig ? c + i(g[d]).outerWidth() : c + (parseInt(a.aoColumns[f].sWidth.replace("px", ""), 10) + (i(g[d]).outerWidth() - i(g[d]).width())), d++);
					b.style.width = q(c);
					a.nTable.style.width = q(c)
				}
				for(f = d = 0; f < a.aoColumns.length; f++) a.aoColumns[f].bVisible && (c = i(g[d]).width(), null !== c && 0 < c && (a.aoColumns[f].sWidth = q(c)),
					d++);
				g = i(b).css("width");
				a.nTable.style.width = -1 !== g.indexOf("%") ? g : q(i(b).outerWidth());
				b.parentNode.removeChild(b)
			}
			e && (a.nTable.style.width = q(e))
		}

		function Na(a, b) {
			"" === a.oScroll.sX && "" !== a.oScroll.sY ? (i(b).width(), b.style.width = q(i(b).outerWidth() - a.oScroll.iBarWidth)) : "" !== a.oScroll.sX && (b.style.width = q(i(b).outerWidth()))
		}

		function Ma(a, b) {
			var c = Oa(a, b);
			if(0 > c) return null;
			if(null === a.aoData[c].nTr) {
				var d = l.createElement("td");
				d.innerHTML = w(a, c, b, "");
				return d
			}
			return L(a, c)[b]
		}

		function Oa(a, b) {
			for(var c = -1, d = -1, g = 0; g < a.aoData.length; g++) {
				var f = w(a, g, b, "display") + "",
					f = f.replace(/<.*?>/g, "");
				f.length > c && (c = f.length, d = g)
			}
			return d
		}

		function q(a) {
			if(null === a) return "0px";
			if("number" == typeof a) return 0 > a ? "0px" : a + "px";
			var b = a.charCodeAt(a.length - 1);
			return 48 > b || 57 < b ? a : a + "px"
		}

		function Pa() {
			var a = l.createElement("p"),
				b = a.style;
			b.width = "100%";
			b.height = "200px";
			b.padding = "0px";
			var c = l.createElement("div"),
				b = c.style;
			b.position = "absolute";
			b.top = "0px";
			b.left = "0px";
			b.visibility = "hidden";
			b.width = "200px";
			b.height = "150px";
			b.padding = "0px";
			b.overflow = "hidden";
			c.appendChild(a);
			l.body.appendChild(c);
			b = a.offsetWidth;
			c.style.overflow = "scroll";
			a = a.offsetWidth;
			b == a && (a = c.clientWidth);
			l.body.removeChild(c);
			return b - a
		}

		function P(a, b) {
			var c, d, g, f, h, e, o = [],
				m = [],
				k = j.ext.oSort,
				r = a.aoData,
				l = a.aoColumns,
				p = a.oLanguage.oAria;
			if(!a.oFeatures.bServerSide && (0 !== a.aaSorting.length || null !== a.aaSortingFixed)) {
				o = null !== a.aaSortingFixed ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice();
				for(c = 0; c < o.length; c++)
					if(d = o[c][0], g = t(a, d), f =
						a.aoColumns[d].sSortDataType, j.ext.afnSortData[f])
						if(h = j.ext.afnSortData[f].call(a.oInstance, a, d, g), h.length === r.length) {
							g = 0;
							for(f = r.length; g < f; g++) I(a, g, d, h[g])
						} else E(a, 0, "Returned data sort array (col " + d + ") is the wrong length");
				c = 0;
				for(d = a.aiDisplayMaster.length; c < d; c++) m[a.aiDisplayMaster[c]] = c;
				var q = o.length,
					G;
				c = 0;
				for(d = r.length; c < d; c++)
					for(g = 0; g < q; g++) {
						G = l[o[g][0]].aDataSort;
						h = 0;
						for(e = G.length; h < e; h++) f = l[G[h]].sType, f = k[(f ? f : "string") + "-pre"], r[c]._aSortData[G[h]] = f ? f(w(a, c, G[h], "sort")) :
							w(a, c, G[h], "sort")
					}
				a.aiDisplayMaster.sort(function(a, b) {
					var c, d, g, f, h;
					for(c = 0; c < q; c++) {
						h = l[o[c][0]].aDataSort;
						d = 0;
						for(g = h.length; d < g; d++)
							if(f = l[h[d]].sType, f = k[(f ? f : "string") + "-" + o[c][1]](r[a]._aSortData[h[d]], r[b]._aSortData[h[d]]), 0 !== f) return f
					}
					return k["numeric-asc"](m[a], m[b])
				})
			}(b === n || b) && !a.oFeatures.bDeferRender && Q(a);
			c = 0;
			for(d = a.aoColumns.length; c < d; c++) f = l[c].sTitle.replace(/<.*?>/g, ""), g = l[c].nTh, g.removeAttribute("aria-sort"), g.removeAttribute("aria-label"), l[c].bSortable ? 0 < o.length &&
				o[0][0] == c ? (g.setAttribute("aria-sort", "asc" == o[0][1] ? "ascending" : "descending"), g.setAttribute("aria-label", f + ("asc" == (l[c].asSorting[o[0][2] + 1] ? l[c].asSorting[o[0][2] + 1] : l[c].asSorting[0]) ? p.sSortAscending : p.sSortDescending))) : g.setAttribute("aria-label", f + ("asc" == l[c].asSorting[0] ? p.sSortAscending : p.sSortDescending)) : g.setAttribute("aria-label", f);
			a.bSorted = !0;
			i(a.oInstance).trigger("sort", a);
			a.oFeatures.bFilter ? M(a, a.oPreviousSearch, 1) : (a.aiDisplay = a.aiDisplayMaster.slice(), a._iDisplayStart = 0,
				A(a), y(a))
		}

		function ga(a, b, c, d) {
			Qa(b, {}, function(b) {
				if(!1 !== a.aoColumns[c].bSortable) {
					var f = function() {
						var d, f;
						if(b.shiftKey) {
							for(var e = !1, i = 0; i < a.aaSorting.length; i++)
								if(a.aaSorting[i][0] == c) {
									e = !0;
									d = a.aaSorting[i][0];
									f = a.aaSorting[i][2] + 1;
									a.aoColumns[d].asSorting[f] ? (a.aaSorting[i][1] = a.aoColumns[d].asSorting[f], a.aaSorting[i][2] = f) : a.aaSorting.splice(i, 1);
									break
								}!1 === e && a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0])
						} else 1 == a.aaSorting.length && a.aaSorting[0][0] == c ? (d = a.aaSorting[0][0], f = a.aaSorting[0][2] +
							1, a.aoColumns[d].asSorting[f] || (f = 0), a.aaSorting[0][1] = a.aoColumns[d].asSorting[f], a.aaSorting[0][2] = f) : (a.aaSorting.splice(0, a.aaSorting.length), a.aaSorting.push([c, a.aoColumns[c].asSorting[0], 0]));
						P(a)
					};
					a.oFeatures.bProcessing ? (F(a, !0), setTimeout(function() {
						f();
						a.oFeatures.bServerSide || F(a, !1)
					}, 0)) : f();
					"function" == typeof d && d(a)
				}
			})
		}

		function Q(a) {
			var b, c, d, g, f, h = a.aoColumns.length,
				e = a.oClasses;
			for(b = 0; b < h; b++) a.aoColumns[b].bSortable && i(a.aoColumns[b].nTh).removeClass(e.sSortAsc + " " + e.sSortDesc +
				" " + a.aoColumns[b].sSortingClass);
			g = null !== a.aaSortingFixed ? a.aaSortingFixed.concat(a.aaSorting) : a.aaSorting.slice();
			for(b = 0; b < a.aoColumns.length; b++)
				if(a.aoColumns[b].bSortable) {
					f = a.aoColumns[b].sSortingClass;
					d = -1;
					for(c = 0; c < g.length; c++)
						if(g[c][0] == b) {
							f = "asc" == g[c][1] ? e.sSortAsc : e.sSortDesc;
							d = c;
							break
						}
					i(a.aoColumns[b].nTh).addClass(f);
					a.bJUI && (c = i("span." + e.sSortIcon, a.aoColumns[b].nTh), c.removeClass(e.sSortJUIAsc + " " + e.sSortJUIDesc + " " + e.sSortJUI + " " + e.sSortJUIAscAllowed + " " + e.sSortJUIDescAllowed),
						c.addClass(-1 == d ? a.aoColumns[b].sSortingClassJUI : "asc" == g[d][1] ? e.sSortJUIAsc : e.sSortJUIDesc))
				} else i(a.aoColumns[b].nTh).addClass(a.aoColumns[b].sSortingClass);
			f = e.sSortColumn;
			if(a.oFeatures.bSort && a.oFeatures.bSortClasses) {
				d = L(a);
				if(a.oFeatures.bDeferRender) i(d).removeClass(f + "1 " + f + "2 " + f + "3");
				else if(d.length >= h)
					for(b = 0; b < h; b++)
						if(-1 != d[b].className.indexOf(f + "1")) {
							c = 0;
							for(a = d.length / h; c < a; c++) d[h * c + b].className = i.trim(d[h * c + b].className.replace(f + "1", ""))
						} else if(-1 != d[b].className.indexOf(f +
						"2")) {
					c = 0;
					for(a = d.length / h; c < a; c++) d[h * c + b].className = i.trim(d[h * c + b].className.replace(f + "2", ""))
				} else if(-1 != d[b].className.indexOf(f + "3")) {
					c = 0;
					for(a = d.length / h; c < a; c++) d[h * c + b].className = i.trim(d[h * c + b].className.replace(" " + f + "3", ""))
				}
				var e = 1,
					j;
				for(b = 0; b < g.length; b++) {
					j = parseInt(g[b][0], 10);
					c = 0;
					for(a = d.length / h; c < a; c++) d[h * c + j].className += " " + f + e;
					3 > e && e++
				}
			}
		}

		function qa(a) {
			if(a.oFeatures.bStateSave && !a.bDestroying) {
				var b, c;
				b = a.oScroll.bInfinite;
				var d = {
					iCreate: (new Date).getTime(),
					iStart: b ? 0 : a._iDisplayStart,
					iEnd: b ? a._iDisplayLength : a._iDisplayEnd,
					iLength: a._iDisplayLength,
					aaSorting: i.extend(!0, [], a.aaSorting),
					oSearch: i.extend(!0, {}, a.oPreviousSearch),
					aoSearchCols: i.extend(!0, [], a.aoPreSearchCols),
					abVisCols: []
				};
				b = 0;
				for(c = a.aoColumns.length; b < c; b++) d.abVisCols.push(a.aoColumns[b].bVisible);
				C(a, "aoStateSaveParams", "stateSaveParams", [a, d]);
				a.fnStateSave.call(a.oInstance, a, d)
			}
		}

		function Ra(a, b) {
			if(a.oFeatures.bStateSave) {
				var c = a.fnStateLoad.call(a.oInstance, a);
				if(c) {
					var d = C(a, "aoStateLoadParams", "stateLoadParams", [a, c]);
					if(-1 === i.inArray(!1, d)) {
						a.oLoadedState = i.extend(!0, {}, c);
						a._iDisplayStart = c.iStart;
						a.iInitDisplayStart = c.iStart;
						a._iDisplayEnd = c.iEnd;
						a._iDisplayLength = c.iLength;
						a.aaSorting = c.aaSorting.slice();
						a.saved_aaSorting = c.aaSorting.slice();
						i.extend(a.oPreviousSearch, c.oSearch);
						i.extend(!0, a.aoPreSearchCols, c.aoSearchCols);
						b.saved_aoColumns = [];
						for(d = 0; d < c.abVisCols.length; d++) b.saved_aoColumns[d] = {}, b.saved_aoColumns[d].bVisible = c.abVisCols[d];
						C(a, "aoStateLoaded", "stateLoaded", [a, c])
					}
				}
			}
		}

		function Sa(a) {
			for(var b =
					V.location.pathname.split("/"), a = a + "_" + b[b.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=", b = l.cookie.split(";"), c = 0; c < b.length; c++) {
				for(var d = b[c];
					" " == d.charAt(0);) d = d.substring(1, d.length);
				if(0 === d.indexOf(a)) return decodeURIComponent(d.substring(a.length, d.length))
			}
			return null
		}

		function u(a) {
			for(var b = 0; b < j.settings.length; b++)
				if(j.settings[b].nTable === a) return j.settings[b];
			return null
		}

		function S(a) {
			for(var b = [], a = a.aoData, c = 0, d = a.length; c < d; c++) null !== a[c].nTr && b.push(a[c].nTr);
			return b
		}

		function L(a,
			b) {
			var c = [],
				d, g, f, e, i, j;
			g = 0;
			var o = a.aoData.length;
			b !== n && (g = b, o = b + 1);
			for(f = g; f < o; f++)
				if(j = a.aoData[f], null !== j.nTr) {
					g = [];
					e = 0;
					for(i = j.nTr.childNodes.length; e < i; e++) d = j.nTr.childNodes[e].nodeName.toLowerCase(), ("td" == d || "th" == d) && g.push(j.nTr.childNodes[e]);
					e = d = 0;
					for(i = a.aoColumns.length; e < i; e++) a.aoColumns[e].bVisible ? c.push(g[e - d]) : (c.push(j._anHidden[e]), d++)
				}
			return c
		}

		function E(a, b, c) {
			a = null === a ? "DataTables warning: " + c : "DataTables warning (table id = '" + a.sTableId + "'): " + c;
			if(0 === b)
				if("alert" ==
					j.ext.sErrMode) alert(a);
				else throw Error(a);
			else V.console && console.log && console.log(a)
		}

		function p(a, b, c, d) {
			d === n && (d = c);
			b[c] !== n && (a[d] = b[c])
		}

		function Ta(a, b) {
			for(var c in b) b.hasOwnProperty(c) && ("object" === typeof e[c] && !1 === i.isArray(b[c]) ? i.extend(!0, a[c], b[c]) : a[c] = b[c]);
			return a
		}

		function Qa(a, b, c) {
			i(a).bind("click.DT", b, function(b) {
				a.blur();
				c(b)
			}).bind("keypress.DT", b, function(a) {
				13 === a.which && c(a)
			}).bind("selectstart.DT", function() {
				return !1
			})
		}

		function B(a, b, c, d) {
			c && a[b].push({
				fn: c,
				sName: d
			})
		}

		function C(a, b, c, d) {
			for(var b = a[b], g = [], f = b.length - 1; 0 <= f; f--) g.push(b[f].fn.apply(a.oInstance, d));
			null !== c && i(a.oInstance).trigger(c, d);
			return g
		}

		function Ua(a) {
			return function() {
				var b = [u(this[j.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
				return j.ext.oApi[a].apply(this, b)
			}
		}
		var Va = V.JSON ? JSON.stringify : function(a) {
			var b = typeof a;
			if("object" !== b || null === a) return "string" === b && (a = '"' + a + '"'), a + "";
			var c, d, g = [],
				f = i.isArray(a);
			for(c in a) d = a[c], b = typeof d, "string" === b ? d = '"' + d + '"' : "object" ===
				b && null !== d && (d = Va(d)), g.push((f ? "" : '"' + c + '":') + d);
			return(f ? "[" : "{") + g + (f ? "]" : "}")
		};
		this.$ = function(a, b) {
			var c, d, g = [],
				f;
			d = u(this[j.ext.iApiIndex]);
			var e = d.aoData,
				o = d.aiDisplay,
				k = d.aiDisplayMaster;
			b || (b = {});
			b = i.extend({}, {
				filter: "none",
				order: "current",
				page: "all"
			}, b);
			if("current" == b.page) {
				c = d._iDisplayStart;
				for(d = d.fnDisplayEnd(); c < d; c++)(f = e[o[c]].nTr) && g.push(f)
			} else if("current" == b.order && "none" == b.filter) {
				c = 0;
				for(d = k.length; c < d; c++)(f = e[k[c]].nTr) && g.push(f)
			} else if("current" == b.order && "applied" ==
				b.filter) {
				c = 0;
				for(d = o.length; c < d; c++)(f = e[o[c]].nTr) && g.push(f)
			} else if("original" == b.order && "none" == b.filter) {
				c = 0;
				for(d = e.length; c < d; c++)(f = e[c].nTr) && g.push(f)
			} else if("original" == b.order && "applied" == b.filter) {
				c = 0;
				for(d = e.length; c < d; c++) f = e[c].nTr, -1 !== i.inArray(c, o) && f && g.push(f)
			} else E(d, 1, "Unknown selection options");
			g = i(g);
			c = g.filter(a);
			g = g.find(a);
			return i([].concat(i.makeArray(c), i.makeArray(g)))
		};
		this._ = function(a, b) {
			var c = [],
				d, g, e = this.$(a, b);
			d = 0;
			for(g = e.length; d < g; d++) c.push(this.fnGetData(e[d]));
			return c
		};
		this.fnAddData = function(a, b) {
			if(0 === a.length) return [];
			var c = [],
				d, g = u(this[j.ext.iApiIndex]);
			if("object" === typeof a[0] && null !== a[0])
				for(var e = 0; e < a.length; e++) {
					d = H(g, a[e]);
					if(-1 == d) return c;
					c.push(d)
				} else {
					d = H(g, a);
					if(-1 == d) return c;
					c.push(d)
				}
			g.aiDisplay = g.aiDisplayMaster.slice();
			(b === n || b) && $(g);
			return c
		};
		this.fnAdjustColumnSizing = function(a) {
			var b = u(this[j.ext.iApiIndex]);
			k(b);
			a === n || a ? this.fnDraw(!1) : ("" !== b.oScroll.sX || "" !== b.oScroll.sY) && this.oApi._fnScrollDraw(b)
		};
		this.fnClearTable =
			function(a) {
				var b = u(this[j.ext.iApiIndex]);
				ea(b);
				(a === n || a) && y(b)
			};
		this.fnClose = function(a) {
			for(var b = u(this[j.ext.iApiIndex]), c = 0; c < b.aoOpenRows.length; c++)
				if(b.aoOpenRows[c].nParent == a) return(a = b.aoOpenRows[c].nTr.parentNode) && a.removeChild(b.aoOpenRows[c].nTr), b.aoOpenRows.splice(c, 1), 0;
			return 1
		};
		this.fnDeleteRow = function(a, b, c) {
			var d = u(this[j.ext.iApiIndex]),
				g, e, a = "object" === typeof a ? K(d, a) : a,
				h = d.aoData.splice(a, 1);
			g = 0;
			for(e = d.aoData.length; g < e; g++) null !== d.aoData[g].nTr && (d.aoData[g].nTr._DT_RowIndex =
				g);
			g = i.inArray(a, d.aiDisplay);
			d.asDataSearch.splice(g, 1);
			fa(d.aiDisplayMaster, a);
			fa(d.aiDisplay, a);
			"function" === typeof b && b.call(this, d, h);
			d._iDisplayStart >= d.fnRecordsDisplay() && (d._iDisplayStart -= d._iDisplayLength, 0 > d._iDisplayStart && (d._iDisplayStart = 0));
			if(c === n || c) A(d), y(d);
			return h
		};
		this.fnDestroy = function(a) {
			var b = u(this[j.ext.iApiIndex]),
				c = b.nTableWrapper.parentNode,
				d = b.nTBody,
				g, e, a = a === n ? !1 : !0;
			b.bDestroying = !0;
			C(b, "aoDestroyCallback", "destroy", [b]);
			g = 0;
			for(e = b.aoColumns.length; g < e; g++) !1 ===
				b.aoColumns[g].bVisible && this.fnSetColumnVis(g, !0);
			i(b.nTableWrapper).find("*").andSelf().unbind(".DT");
			i("tbody>tr>td." + b.oClasses.sRowEmpty, b.nTable).parent().remove();
			b.nTable != b.nTHead.parentNode && (i(b.nTable).children("thead").remove(), b.nTable.appendChild(b.nTHead));
			b.nTFoot && b.nTable != b.nTFoot.parentNode && (i(b.nTable).children("tfoot").remove(), b.nTable.appendChild(b.nTFoot));
			b.nTable.parentNode.removeChild(b.nTable);
			i(b.nTableWrapper).remove();
			b.aaSorting = [];
			b.aaSortingFixed = [];
			Q(b);
			i(S(b)).removeClass(b.asStripeClasses.join(" "));
			i("th, td", b.nTHead).removeClass([b.oClasses.sSortable, b.oClasses.sSortableAsc, b.oClasses.sSortableDesc, b.oClasses.sSortableNone].join(" "));
			b.bJUI && (i("th span." + b.oClasses.sSortIcon + ", td span." + b.oClasses.sSortIcon, b.nTHead).remove(), i("th, td", b.nTHead).each(function() {
				var a = i("div." + b.oClasses.sSortJUIWrapper, this),
					c = a.contents();
				i(this).append(c);
				a.remove()
			}));
			!a && b.nTableReinsertBefore ? c.insertBefore(b.nTable, b.nTableReinsertBefore) : a || c.appendChild(b.nTable);
			g = 0;
			for(e = b.aoData.length; g < e; g++) null !==
				b.aoData[g].nTr && d.appendChild(b.aoData[g].nTr);
			!0 === b.oFeatures.bAutoWidth && (b.nTable.style.width = q(b.sDestroyWidth));
			i(d).children("tr:even").addClass(b.asDestroyStripes[0]);
			i(d).children("tr:odd").addClass(b.asDestroyStripes[1]);
			g = 0;
			for(e = j.settings.length; g < e; g++) j.settings[g] == b && j.settings.splice(g, 1);
			b = null
		};
		this.fnDraw = function(a) {
			var b = u(this[j.ext.iApiIndex]);
			!1 === a ? (A(b), y(b)) : $(b)
		};
		this.fnFilter = function(a, b, c, d, e, f) {
			var h = u(this[j.ext.iApiIndex]);
			if(h.oFeatures.bFilter) {
				if(c === n || null ===
					c) c = !1;
				if(d === n || null === d) d = !0;
				if(e === n || null === e) e = !0;
				if(f === n || null === f) f = !0;
				if(b === n || null === b) {
					if(M(h, {
							sSearch: a + "",
							bRegex: c,
							bSmart: d,
							bCaseInsensitive: f
						}, 1), e && h.aanFeatures.f) {
						b = h.aanFeatures.f;
						c = 0;
						for(d = b.length; c < d; c++) i(b[c]._DT_Input).val(a)
					}
				} else i.extend(h.aoPreSearchCols[b], {
					sSearch: a + "",
					bRegex: c,
					bSmart: d,
					bCaseInsensitive: f
				}), M(h, h.oPreviousSearch, 1)
			}
		};
		this.fnGetData = function(a, b) {
			var c = u(this[j.ext.iApiIndex]);
			if(a !== n) {
				var d = a;
				if("object" === typeof a) {
					var e = a.nodeName.toLowerCase();
					"tr" ===
					e ? d = K(c, a) : "td" === e && (d = K(c, a.parentNode), b = da(c, d, a))
				}
				return b !== n ? w(c, d, b, "") : c.aoData[d] !== n ? c.aoData[d]._aData : null
			}
			return Y(c)
		};
		this.fnGetNodes = function(a) {
			var b = u(this[j.ext.iApiIndex]);
			return a !== n ? b.aoData[a] !== n ? b.aoData[a].nTr : null : S(b)
		};
		this.fnGetPosition = function(a) {
			var b = u(this[j.ext.iApiIndex]),
				c = a.nodeName.toUpperCase();
			return "TR" == c ? K(b, a) : "TD" == c || "TH" == c ? (c = K(b, a.parentNode), a = da(b, c, a), [c, t(b, a), a]) : null
		};
		this.fnIsOpen = function(a) {
			for(var b = u(this[j.ext.iApiIndex]), c = 0; c < b.aoOpenRows.length; c++)
				if(b.aoOpenRows[c].nParent ==
					a) return !0;
			return !1
		};
		this.fnOpen = function(a, b, c) {
			var d = u(this[j.ext.iApiIndex]),
				e = S(d);
			if(-1 !== i.inArray(a, e)) {
				this.fnClose(a);
				var e = l.createElement("tr"),
					f = l.createElement("td");
				e.appendChild(f);
				f.className = c;
				f.colSpan = v(d);
				"string" === typeof b ? f.innerHTML = b : i(f).html(b);
				b = i("tr", d.nTBody); - 1 != i.inArray(a, b) && i(e).insertAfter(a);
				d.aoOpenRows.push({
					nTr: e,
					nParent: a
				});
				return e
			}
		};
		this.fnPageChange = function(a, b) {
			var c = u(this[j.ext.iApiIndex]);
			pa(c, a);
			A(c);
			(b === n || b) && y(c)
		};
		this.fnSetColumnVis = function(a,
			b, c) {
			var d = u(this[j.ext.iApiIndex]),
				e, f, h = d.aoColumns,
				i = d.aoData,
				o, m;
			if(h[a].bVisible != b) {
				if(b) {
					for(e = f = 0; e < a; e++) h[e].bVisible && f++;
					m = f >= v(d);
					if(!m)
						for(e = a; e < h.length; e++)
							if(h[e].bVisible) {
								o = e;
								break
							}
					e = 0;
					for(f = i.length; e < f; e++) null !== i[e].nTr && (m ? i[e].nTr.appendChild(i[e]._anHidden[a]) : i[e].nTr.insertBefore(i[e]._anHidden[a], L(d, e)[o]))
				} else {
					e = 0;
					for(f = i.length; e < f; e++) null !== i[e].nTr && (o = L(d, e)[a], i[e]._anHidden[a] = o, o.parentNode.removeChild(o))
				}
				h[a].bVisible = b;
				U(d, d.aoHeader);
				d.nTFoot && U(d, d.aoFooter);
				e = 0;
				for(f = d.aoOpenRows.length; e < f; e++) d.aoOpenRows[e].nTr.colSpan = v(d);
				if(c === n || c) k(d), y(d);
				qa(d)
			}
		};
		this.fnSettings = function() {
			return u(this[j.ext.iApiIndex])
		};
		this.fnSort = function(a) {
			var b = u(this[j.ext.iApiIndex]);
			b.aaSorting = a;
			P(b)
		};
		this.fnSortListener = function(a, b, c) {
			ga(u(this[j.ext.iApiIndex]), a, b, c)
		};
		this.fnUpdate = function(a, b, c, d, e) {
			var f = u(this[j.ext.iApiIndex]),
				b = "object" === typeof b ? K(f, b) : b;
			if(f.__fnUpdateDeep === n && i.isArray(a) && "object" === typeof a) {
				f.aoData[b]._aData = a.slice();
				f.__fnUpdateDeep = !0;
				for(c = 0; c < f.aoColumns.length; c++) this.fnUpdate(w(f, b, c), b, c, !1, !1);
				f.__fnUpdateDeep = n
			} else if(f.__fnUpdateDeep === n && null !== a && "object" === typeof a) {
				f.aoData[b]._aData = i.extend(!0, {}, a);
				f.__fnUpdateDeep = !0;
				for(c = 0; c < f.aoColumns.length; c++) this.fnUpdate(w(f, b, c), b, c, !1, !1);
				f.__fnUpdateDeep = n
			} else {
				I(f, b, c, a);
				var a = w(f, b, c, "display"),
					h = f.aoColumns[c];
				null !== h.fnRender && (a = R(f, b, c), h.bUseRendered && I(f, b, c, a));
				null !== f.aoData[b].nTr && (L(f, b)[c].innerHTML = a)
			}
			c = i.inArray(b, f.aiDisplay);
			f.asDataSearch[c] =
				ma(f, X(f, b, "filter"));
			(e === n || e) && k(f);
			(d === n || d) && $(f);
			return 0
		};
		this.fnVersionCheck = j.ext.fnVersionCheck;
		this.oApi = {
			_fnExternApiFunc: Ua,
			_fnInitialise: aa,
			_fnInitComplete: Z,
			_fnLanguageCompat: oa,
			_fnAddColumn: o,
			_fnColumnOptions: r,
			_fnAddData: H,
			_fnCreateTr: ca,
			_fnGatherData: ua,
			_fnBuildHead: va,
			_fnDrawHead: U,
			_fnDraw: y,
			_fnReDraw: $,
			_fnAjaxUpdate: wa,
			_fnAjaxParameters: Ea,
			_fnAjaxUpdateDraw: Fa,
			_fnServerParams: ia,
			_fnAddOptionsHtml: xa,
			_fnFeatureHtmlTable: Ba,
			_fnScrollDraw: Ka,
			_fnAdjustColumnSizing: k,
			_fnFeatureHtmlFilter: za,
			_fnFilterComplete: M,
			_fnFilterCustom: Ia,
			_fnFilterColumn: Ha,
			_fnFilter: Ga,
			_fnBuildSearchArray: ja,
			_fnBuildSearchRow: ma,
			_fnFilterCreateSearch: ka,
			_fnDataToSearch: la,
			_fnSort: P,
			_fnSortAttachListener: ga,
			_fnSortingClasses: Q,
			_fnFeatureHtmlPaginate: Da,
			_fnPageChange: pa,
			_fnFeatureHtmlInfo: Ca,
			_fnUpdateInfo: Ja,
			_fnFeatureHtmlLength: ya,
			_fnFeatureHtmlProcessing: Aa,
			_fnProcessingDisplay: F,
			_fnVisibleToColumnIndex: G,
			_fnColumnIndexToVisible: t,
			_fnNodeToDataIndex: K,
			_fnVisbleColumns: v,
			_fnCalculateEnd: A,
			_fnConvertToWidth: La,
			_fnCalculateColumnWidths: ba,
			_fnScrollingWidthAdjust: Na,
			_fnGetWidestNode: Ma,
			_fnGetMaxLenString: Oa,
			_fnStringToCss: q,
			_fnDetectType: z,
			_fnSettingsFromNode: u,
			_fnGetDataMaster: Y,
			_fnGetTrNodes: S,
			_fnGetTdNodes: L,
			_fnEscapeRegex: na,
			_fnDeleteIndex: fa,
			_fnReOrderIndex: D,
			_fnColumnOrdering: x,
			_fnLog: E,
			_fnClearTable: ea,
			_fnSaveState: qa,
			_fnLoadState: Ra,
			_fnCreateCookie: function(a, b, c, d, e) {
				var f = new Date;
				f.setTime(f.getTime() + 1E3 * c);
				var c = V.location.pathname.split("/"),
					a = a + "_" + c.pop().replace(/[\/:]/g, "").toLowerCase(),
					h;
				null !== e ? (h = "function" === typeof i.parseJSON ? i.parseJSON(b) : eval("(" + b + ")"), b = e(a, h, f.toGMTString(), c.join("/") + "/")) : b = a + "=" + encodeURIComponent(b) + "; expires=" + f.toGMTString() + "; path=" + c.join("/") + "/";
				e = "";
				f = 9999999999999;
				if(4096 < (null !== Sa(a) ? l.cookie.length : b.length + l.cookie.length) + 10) {
					for(var a = l.cookie.split(";"), o = 0, j = a.length; o < j; o++)
						if(-1 != a[o].indexOf(d)) {
							var k = a[o].split("=");
							try {
								h = eval("(" + decodeURIComponent(k[1]) + ")")
							} catch(r) {
								continue
							}
							h.iCreate && h.iCreate < f && (e = k[0], f = h.iCreate)
						}
					"" !==
					e && (l.cookie = e + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + c.join("/") + "/")
				}
				l.cookie = b
			},
			_fnReadCookie: Sa,
			_fnDetectHeader: T,
			_fnGetUniqueThs: O,
			_fnScrollBarWidth: Pa,
			_fnApplyToChildren: N,
			_fnMap: p,
			_fnGetRowData: X,
			_fnGetCellData: w,
			_fnSetCellData: I,
			_fnGetObjectDataFn: W,
			_fnSetObjectDataFn: ta,
			_fnApplyColumnDefs: J,
			_fnBindAction: Qa,
			_fnExtend: Ta,
			_fnCallbackReg: B,
			_fnCallbackFire: C,
			_fnJsonString: Va,
			_fnRender: R,
			_fnNodeToColumnIndex: da,
			_fnInfoMacros: ha
		};
		i.extend(j.ext.oApi, this.oApi);
		for(var ra in j.ext.oApi) ra &&
			(this[ra] = Ua(ra));
		var sa = this;
		return this.each(function() {
			var a = 0,
				b, c, d;
			c = this.getAttribute("id");
			var g = !1,
				f = !1;
			if("table" != this.nodeName.toLowerCase()) E(null, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName);
			else {
				a = 0;
				for(b = j.settings.length; a < b; a++) {
					if(j.settings[a].nTable == this) {
						if(e === n || e.bRetrieve) return j.settings[a].oInstance;
						if(e.bDestroy) {
							j.settings[a].oInstance.fnDestroy();
							break
						} else {
							E(j.settings[a], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, pass no arguments or see the docs for bRetrieve and bDestroy");
							return
						}
					}
					if(j.settings[a].sTableId == this.id) {
						j.settings.splice(a, 1);
						break
					}
				}
				if(null === c || "" === c) this.id = c = "DataTables_Table_" + j.ext._oExternConfig.iNextUnique++;
				var h = i.extend(!0, {}, j.models.oSettings, {
					nTable: this,
					oApi: sa.oApi,
					oInit: e,
					sDestroyWidth: i(this).width(),
					sInstance: c,
					sTableId: c
				});
				j.settings.push(h);
				h.oInstance = 1 === sa.length ? sa : i(this).dataTable();
				e || (e = {});
				e.oLanguage && oa(e.oLanguage);
				e = Ta(i.extend(!0, {}, j.defaults), e);
				p(h.oFeatures, e, "bPaginate");
				p(h.oFeatures, e, "bLengthChange");
				p(h.oFeatures,
					e, "bFilter");
				p(h.oFeatures, e, "bSort");
				p(h.oFeatures, e, "bInfo");
				p(h.oFeatures, e, "bProcessing");
				p(h.oFeatures, e, "bAutoWidth");
				p(h.oFeatures, e, "bSortClasses");
				p(h.oFeatures, e, "bServerSide");
				p(h.oFeatures, e, "bDeferRender");
				p(h.oScroll, e, "sScrollX", "sX");
				p(h.oScroll, e, "sScrollXInner", "sXInner");
				p(h.oScroll, e, "sScrollY", "sY");
				p(h.oScroll, e, "bScrollCollapse", "bCollapse");
				p(h.oScroll, e, "bScrollInfinite", "bInfinite");
				p(h.oScroll, e, "iScrollLoadGap", "iLoadGap");
				p(h.oScroll, e, "bScrollAutoCss", "bAutoCss");
				p(h,
					e, "asStripeClasses");
				p(h, e, "asStripClasses", "asStripeClasses");
				p(h, e, "fnServerData");
				p(h, e, "fnFormatNumber");
				p(h, e, "sServerMethod");
				p(h, e, "aaSorting");
				p(h, e, "aaSortingFixed");
				p(h, e, "aLengthMenu");
				p(h, e, "sPaginationType");
				p(h, e, "sAjaxSource");
				p(h, e, "sAjaxDataProp");
				p(h, e, "iCookieDuration");
				p(h, e, "sCookiePrefix");
				p(h, e, "sDom");
				p(h, e, "bSortCellsTop");
				p(h, e, "iTabIndex");
				p(h, e, "oSearch", "oPreviousSearch");
				p(h, e, "aoSearchCols", "aoPreSearchCols");
				p(h, e, "iDisplayLength", "_iDisplayLength");
				p(h, e, "bJQueryUI",
					"bJUI");
				p(h, e, "fnCookieCallback");
				p(h, e, "fnStateLoad");
				p(h, e, "fnStateSave");
				p(h.oLanguage, e, "fnInfoCallback");
				B(h, "aoDrawCallback", e.fnDrawCallback, "user");
				B(h, "aoServerParams", e.fnServerParams, "user");
				B(h, "aoStateSaveParams", e.fnStateSaveParams, "user");
				B(h, "aoStateLoadParams", e.fnStateLoadParams, "user");
				B(h, "aoStateLoaded", e.fnStateLoaded, "user");
				B(h, "aoRowCallback", e.fnRowCallback, "user");
				B(h, "aoRowCreatedCallback", e.fnCreatedRow, "user");
				B(h, "aoHeaderCallback", e.fnHeaderCallback, "user");
				B(h, "aoFooterCallback",
					e.fnFooterCallback, "user");
				B(h, "aoInitComplete", e.fnInitComplete, "user");
				B(h, "aoPreDrawCallback", e.fnPreDrawCallback, "user");
				h.oFeatures.bServerSide && h.oFeatures.bSort && h.oFeatures.bSortClasses ? B(h, "aoDrawCallback", Q, "server_side_sort_classes") : h.oFeatures.bDeferRender && B(h, "aoDrawCallback", Q, "defer_sort_classes");
				e.bJQueryUI ? (i.extend(h.oClasses, j.ext.oJUIClasses), e.sDom === j.defaults.sDom && "lfrtip" === j.defaults.sDom && (h.sDom = '<"H"lfr>t<"F"ip>')) : i.extend(h.oClasses, j.ext.oStdClasses);
				i(this).addClass(h.oClasses.sTable);
				if("" !== h.oScroll.sX || "" !== h.oScroll.sY) h.oScroll.iBarWidth = Pa();
				h.iInitDisplayStart === n && (h.iInitDisplayStart = e.iDisplayStart, h._iDisplayStart = e.iDisplayStart);
				e.bStateSave && (h.oFeatures.bStateSave = !0, Ra(h, e), B(h, "aoDrawCallback", qa, "state_save"));
				null !== e.iDeferLoading && (h.bDeferLoading = !0, a = i.isArray(e.iDeferLoading), h._iRecordsDisplay = a ? e.iDeferLoading[0] : e.iDeferLoading, h._iRecordsTotal = a ? e.iDeferLoading[1] : e.iDeferLoading);
				null !== e.aaData && (f = !0);
				"" !== e.oLanguage.sUrl ? (h.oLanguage.sUrl = e.oLanguage.sUrl,
					i.getJSON(h.oLanguage.sUrl, null, function(a) {
						oa(a);
						i.extend(true, h.oLanguage, e.oLanguage, a);
						aa(h)
					}), g = !0) : i.extend(!0, h.oLanguage, e.oLanguage);
				null === e.asStripeClasses && (h.asStripeClasses = [h.oClasses.sStripeOdd, h.oClasses.sStripeEven]);
				c = !1;
				d = i(this).children("tbody").children("tr");
				a = 0;
				for(b = h.asStripeClasses.length; a < b; a++)
					if(d.filter(":lt(2)").hasClass(h.asStripeClasses[a])) {
						c = !0;
						break
					}
				c && (h.asDestroyStripes = ["", ""], i(d[0]).hasClass(h.oClasses.sStripeOdd) && (h.asDestroyStripes[0] += h.oClasses.sStripeOdd +
					" "), i(d[0]).hasClass(h.oClasses.sStripeEven) && (h.asDestroyStripes[0] += h.oClasses.sStripeEven), i(d[1]).hasClass(h.oClasses.sStripeOdd) && (h.asDestroyStripes[1] += h.oClasses.sStripeOdd + " "), i(d[1]).hasClass(h.oClasses.sStripeEven) && (h.asDestroyStripes[1] += h.oClasses.sStripeEven), d.removeClass(h.asStripeClasses.join(" ")));
				c = [];
				a = this.getElementsByTagName("thead");
				0 !== a.length && (T(h.aoHeader, a[0]), c = O(h));
				if(null === e.aoColumns) {
					d = [];
					a = 0;
					for(b = c.length; a < b; a++) d.push(null)
				} else d = e.aoColumns;
				a = 0;
				for(b =
					d.length; a < b; a++) e.saved_aoColumns !== n && e.saved_aoColumns.length == b && (null === d[a] && (d[a] = {}), d[a].bVisible = e.saved_aoColumns[a].bVisible), o(h, c ? c[a] : null);
				J(h, e.aoColumnDefs, d, function(a, b) {
					r(h, a, b)
				});
				a = 0;
				for(b = h.aaSorting.length; a < b; a++) {
					h.aaSorting[a][0] >= h.aoColumns.length && (h.aaSorting[a][0] = 0);
					var k = h.aoColumns[h.aaSorting[a][0]];
					h.aaSorting[a][2] === n && (h.aaSorting[a][2] = 0);
					e.aaSorting === n && h.saved_aaSorting === n && (h.aaSorting[a][1] = k.asSorting[0]);
					c = 0;
					for(d = k.asSorting.length; c < d; c++)
						if(h.aaSorting[a][1] ==
							k.asSorting[c]) {
							h.aaSorting[a][2] = c;
							break
						}
				}
				Q(h);
				a = i(this).children("caption").each(function() {
					this._captionSide = i(this).css("caption-side")
				});
				b = i(this).children("thead");
				0 === b.length && (b = [l.createElement("thead")], this.appendChild(b[0]));
				h.nTHead = b[0];
				b = i(this).children("tbody");
				0 === b.length && (b = [l.createElement("tbody")], this.appendChild(b[0]));
				h.nTBody = b[0];
				h.nTBody.setAttribute("role", "alert");
				h.nTBody.setAttribute("aria-live", "polite");
				h.nTBody.setAttribute("aria-relevant", "all");
				b = i(this).children("tfoot");
				if(0 === b.length && 0 < a.length && ("" !== h.oScroll.sX || "" !== h.oScroll.sY)) b = [l.createElement("tfoot")], this.appendChild(b[0]);
				0 < b.length && (h.nTFoot = b[0], T(h.aoFooter, h.nTFoot));
				if(f)
					for(a = 0; a < e.aaData.length; a++) H(h, e.aaData[a]);
				else ua(h);
				h.aiDisplay = h.aiDisplayMaster.slice();
				h.bInitialised = !0;
				!1 === g && aa(h)
			}
		})
	};
	j.fnVersionCheck = function(e) {
		for(var i = function(e, i) {
				for(; e.length < i;) e += "0";
				return e
			}, r = j.ext.sVersion.split("."), e = e.split("."), k = "", n = "", l = 0, v = e.length; l < v; l++) k += i(r[l], 3), n += i(e[l], 3);
		return parseInt(k,
			10) >= parseInt(n, 10)
	};
	j.fnIsDataTable = function(e) {
		for(var i = j.settings, r = 0; r < i.length; r++)
			if(i[r].nTable === e || i[r].nScrollHead === e || i[r].nScrollFoot === e) return !0;
		return !1
	};
	j.fnTables = function(e) {
		var o = [];
		jQuery.each(j.settings, function(j, k) {
			(!e || !0 === e && i(k.nTable).is(":visible")) && o.push(k.nTable)
		});
		return o
	};
	j.version = "1.9.2";
	j.settings = [];
	j.models = {};
	j.models.ext = {
		afnFiltering: [],
		afnSortData: [],
		aoFeatures: [],
		aTypes: [],
		fnVersionCheck: j.fnVersionCheck,
		iApiIndex: 0,
		ofnSearch: {},
		oApi: {},
		oStdClasses: {},
		oJUIClasses: {},
		oPagination: {},
		oSort: {},
		sVersion: j.version,
		sErrMode: "alert",
		_oExternConfig: {
			iNextUnique: 0
		}
	};
	j.models.oSearch = {
		bCaseInsensitive: !0,
		sSearch: "",
		bRegex: !1,
		bSmart: !0
	};
	j.models.oRow = {
		nTr: null,
		_aData: [],
		_aSortData: [],
		_anHidden: [],
		_sRowStripe: ""
	};
	j.models.oColumn = {
		aDataSort: null,
		asSorting: null,
		bSearchable: null,
		bSortable: null,
		bUseRendered: null,
		bVisible: null,
		_bAutoType: !0,
		fnCreatedCell: null,
		fnGetData: null,
		fnRender: null,
		fnSetData: null,
		mDataProp: null,
		nTh: null,
		nTf: null,
		sClass: null,
		sContentPadding: null,
		sDefaultContent: null,
		sName: null,
		sSortDataType: "std",
		sSortingClass: null,
		sSortingClassJUI: null,
		sTitle: null,
		sType: null,
		sWidth: null,
		sWidthOrig: null
	};
	j.defaults = {
		aaData: null,
		aaSorting: [
			[0, "asc"]
		],
		aaSortingFixed: null,
		aLengthMenu: [10, 25, 50, 100],
		aoColumns: null,
		aoColumnDefs: null,
		aoSearchCols: [],
		asStripeClasses: null,
		bAutoWidth: !0,
		bDeferRender: !1,
		bDestroy: !1,
		bFilter: !0,
		bInfo: !0,
		bJQueryUI: !1,
		bLengthChange: !0,
		bPaginate: !0,
		bProcessing: !1,
		bRetrieve: !1,
		bScrollAutoCss: !0,
		bScrollCollapse: !1,
		bScrollInfinite: !1,
		bServerSide: !1,
		bSort: !0,
		bSortCellsTop: !1,
		bSortClasses: !0,
		bStateSave: !1,
		fnCookieCallback: null,
		fnCreatedRow: null,
		fnDrawCallback: null,
		fnFooterCallback: null,
		fnFormatNumber: function(e) {
			if(1E3 > e) return e;
			for(var i = e + "", e = i.split(""), j = "", i = i.length, k = 0; k < i; k++) 0 === k % 3 && 0 !== k && (j = this.oLanguage.sInfoThousands + j), j = e[i - k - 1] + j;
			return j
		},
		fnHeaderCallback: null,
		fnInfoCallback: null,
		fnInitComplete: null,
		fnPreDrawCallback: null,
		fnRowCallback: null,
		fnServerData: function(e, j, n, k) {
			k.jqXHR = i.ajax({
				url: e,
				data: j,
				success: function(e) {
					i(k.oInstance).trigger("xhr",
						k);
					n(e)
				},
				dataType: "json",
				cache: !1,
				type: k.sServerMethod,
				error: function(e, i) {
					"parsererror" == i && k.oApi._fnLog(k, 0, "DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.")
				}
			})
		},
		fnServerParams: null,
		fnStateLoad: function(e) {
			var e = this.oApi._fnReadCookie(e.sCookiePrefix + e.sInstance),
				j;
			try {
				j = "function" === typeof i.parseJSON ? i.parseJSON(e) : eval("(" + e + ")")
			} catch(n) {
				j = null
			}
			return j
		},
		fnStateLoadParams: null,
		fnStateLoaded: null,
		fnStateSave: function(e, i) {
			this.oApi._fnCreateCookie(e.sCookiePrefix +
				e.sInstance, this.oApi._fnJsonString(i), e.iCookieDuration, e.sCookiePrefix, e.fnCookieCallback)
		},
		fnStateSaveParams: null,
		iCookieDuration: 7200,
		iDeferLoading: null,
		iDisplayLength: 10,
		iDisplayStart: 0,
		iScrollLoadGap: 100,
		iTabIndex: 0,
		oLanguage: {
			oAria: {
				sSortAscending: ": activate to sort column ascending",
				sSortDescending: ": activate to sort column descending"
			},
			oPaginate: {
				sFirst: "First",
				sLast: "Last",
				sNext: "Next",
				sPrevious: "Previous"
			},
			sEmptyTable: "No data available in table",
			sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
			sInfoEmpty: "Showing 0 to 0 of 0 entries",
			sInfoFiltered: "(filtered from _MAX_ total entries)",
			sInfoPostFix: "",
			sInfoThousands: ",",
			sLengthMenu: "Show _MENU_ entries",
			sLoadingRecords: "Loading...",
			sProcessing: "Processing...",
			sSearch: "Search:",
			sUrl: "",
			sZeroRecords: "No matching records found"
		},
		oSearch: i.extend({}, j.models.oSearch),
		sAjaxDataProp: "aaData",
		sAjaxSource: null,
		sCookiePrefix: "SpryMedia_DataTables_",
		sDom: "lfrtip",
		sPaginationType: "two_button",
		sScrollX: "",
		sScrollXInner: "",
		sScrollY: "",
		sServerMethod: "GET"
	};
	j.defaults.columns = {
		aDataSort: null,
		asSorting: ["asc", "desc"],
		bSearchable: !0,
		bSortable: !0,
		bUseRendered: !0,
		bVisible: !0,
		fnCreatedCell: null,
		fnRender: null,
		iDataSort: -1,
		mDataProp: null,
		sCellType: "td",
		sClass: "",
		sContentPadding: "",
		sDefaultContent: null,
		sName: "",
		sSortDataType: "std",
		sTitle: null,
		sType: null,
		sWidth: null
	};
	j.models.oSettings = {
		oFeatures: {
			bAutoWidth: null,
			bDeferRender: null,
			bFilter: null,
			bInfo: null,
			bLengthChange: null,
			bPaginate: null,
			bProcessing: null,
			bServerSide: null,
			bSort: null,
			bSortClasses: null,
			bStateSave: null
		},
		oScroll: {
			bAutoCss: null,
			bCollapse: null,
			bInfinite: null,
			iBarWidth: 0,
			iLoadGap: null,
			sX: null,
			sXInner: null,
			sY: null
		},
		oLanguage: {
			fnInfoCallback: null
		},
		aanFeatures: [],
		aoData: [],
		aiDisplay: [],
		aiDisplayMaster: [],
		aoColumns: [],
		aoHeader: [],
		aoFooter: [],
		asDataSearch: [],
		oPreviousSearch: {},
		aoPreSearchCols: [],
		aaSorting: null,
		aaSortingFixed: null,
		asStripeClasses: null,
		asDestroyStripes: [],
		sDestroyWidth: 0,
		aoRowCallback: [],
		aoHeaderCallback: [],
		aoFooterCallback: [],
		aoDrawCallback: [],
		aoRowCreatedCallback: [],
		aoPreDrawCallback: [],
		aoInitComplete: [],
		aoStateSaveParams: [],
		aoStateLoadParams: [],
		aoStateLoaded: [],
		sTableId: "",
		nTable: null,
		nTHead: null,
		nTFoot: null,
		nTBody: null,
		nTableWrapper: null,
		bDeferLoading: !1,
		bInitialised: !1,
		aoOpenRows: [],
		sDom: null,
		sPaginationType: "two_button",
		iCookieDuration: 0,
		sCookiePrefix: "",
		fnCookieCallback: null,
		aoStateSave: [],
		aoStateLoad: [],
		oLoadedState: null,
		sAjaxSource: null,
		sAjaxDataProp: null,
		bAjaxDataGet: !0,
		jqXHR: null,
		fnServerData: null,
		aoServerParams: [],
		sServerMethod: null,
		fnFormatNumber: null,
		aLengthMenu: null,
		iDraw: 0,
		bDrawing: !1,
		iDrawError: -1,
		_iDisplayLength: 10,
		_iDisplayStart: 0,
		_iDisplayEnd: 10,
		_iRecordsTotal: 0,
		_iRecordsDisplay: 0,
		bJUI: null,
		oClasses: {},
		bFiltered: !1,
		bSorted: !1,
		bSortCellsTop: null,
		oInit: null,
		aoDestroyCallback: [],
		fnRecordsTotal: function() {
			return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length
		},
		fnRecordsDisplay: function() {
			return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length
		},
		fnDisplayEnd: function() {
			return this.oFeatures.bServerSide ?
				!1 === this.oFeatures.bPaginate || -1 == this._iDisplayLength ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd
		},
		oInstance: null,
		sInstance: null,
		iTabIndex: 0,
		nScrollHead: null,
		nScrollFoot: null
	};
	j.ext = i.extend(!0, {}, j.models.ext);
	i.extend(j.ext.oStdClasses, {
		sTable: "dataTable",
		sPagePrevEnabled: "paginate_enabled_previous",
		sPagePrevDisabled: "paginate_disabled_previous",
		sPageNextEnabled: "paginate_enabled_next",
		sPageNextDisabled: "paginate_disabled_next",
		sPageJUINext: "",
		sPageJUIPrev: "",
		sPageButton: "paginate_button",
		sPageButtonActive: "paginate_active",
		sPageButtonStaticDisabled: "paginate_button paginate_button_disabled",
		sPageFirst: "first",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last",
		sStripeOdd: "odd",
		sStripeEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "sorting_asc",
		sSortDesc: "sorting_desc",
		sSortable: "sorting",
		sSortableAsc: "sorting_asc_disabled",
		sSortableDesc: "sorting_desc_disabled",
		sSortableNone: "sorting_disabled",
		sSortColumn: "sorting_",
		sSortJUIAsc: "",
		sSortJUIDesc: "",
		sSortJUI: "",
		sSortJUIAscAllowed: "",
		sSortJUIDescAllowed: "",
		sSortJUIWrapper: "",
		sSortIcon: "",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: "",
		sJUIHeader: "",
		sJUIFooter: ""
	});
	i.extend(j.ext.oJUIClasses, j.ext.oStdClasses, {
		sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left",
		sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
		sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right",
		sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
		sPageJUINext: "ui-icon ui-icon-circle-arrow-e",
		sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w",
		sPageButton: "fg-button ui-button ui-state-default",
		sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageFirst: "first ui-corner-tl ui-corner-bl",
		sPageLast: "last ui-corner-tr ui-corner-br",
		sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
		sSortAsc: "ui-state-default",
		sSortDesc: "ui-state-default",
		sSortable: "ui-state-default",
		sSortableAsc: "ui-state-default",
		sSortableDesc: "ui-state-default",
		sSortableNone: "ui-state-default",
		sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n",
		sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s",
		sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s",
		sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n",
		sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s",
		sSortJUIWrapper: "DataTables_sort_wrapper",
		sSortIcon: "DataTables_sort_icon",
		sScrollHead: "dataTables_scrollHead ui-state-default",
		sScrollFoot: "dataTables_scrollFoot ui-state-default",
		sFooterTH: "ui-state-default",
		sJUIHeader: "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix",
		sJUIFooter: "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"
	});
	i.extend(j.ext.oPagination, {
		two_button: {
			fnInit: function(e, j, n) {
				var k = e.oLanguage.oPaginate,
					l = function(i) {
						e.oApi._fnPageChange(e, i.data.action) && n(e)
					},
					k = !e.bJUI ? '<a class="' + e.oClasses.sPagePrevDisabled + '" tabindex="' + e.iTabIndex + '" role="button">' + k.sPrevious + '</a><a class="' +
					e.oClasses.sPageNextDisabled + '" tabindex="' + e.iTabIndex + '" role="button">' + k.sNext + "</a>" : '<a class="' + e.oClasses.sPagePrevDisabled + '" tabindex="' + e.iTabIndex + '" role="button"><span class="' + e.oClasses.sPageJUIPrev + '"></span></a><a class="' + e.oClasses.sPageNextDisabled + '" tabindex="' + e.iTabIndex + '" role="button"><span class="' + e.oClasses.sPageJUINext + '"></span></a>';
				i(j).append(k);
				var t = i("a", j),
					k = t[0],
					t = t[1];
				e.oApi._fnBindAction(k, {
					action: "previous"
				}, l);
				e.oApi._fnBindAction(t, {
					action: "next"
				}, l);
				e.aanFeatures.p || (j.id = e.sTableId + "_paginate", k.id = e.sTableId + "_previous", t.id = e.sTableId + "_next", k.setAttribute("aria-controls", e.sTableId), t.setAttribute("aria-controls", e.sTableId))
			},
			fnUpdate: function(e) {
				if(e.aanFeatures.p)
					for(var i = e.oClasses, j = e.aanFeatures.p, k = 0, n = j.length; k < n; k++) 0 !== j[k].childNodes.length && (j[k].childNodes[0].className = 0 === e._iDisplayStart ? i.sPagePrevDisabled : i.sPagePrevEnabled, j[k].childNodes[1].className = e.fnDisplayEnd() == e.fnRecordsDisplay() ? i.sPageNextDisabled : i.sPageNextEnabled)
			}
		},
		iFullNumbersShowPages: 5,
		full_numbers: {
			fnInit: function(e, j, n) {
				var k = e.oLanguage.oPaginate,
					l = e.oClasses,
					t = function(i) {
						e.oApi._fnPageChange(e, i.data.action) && n(e)
					};
				i(j).append('<a  tabindex="' + e.iTabIndex + '" class="' + l.sPageButton + " " + l.sPageFirst + '">' + k.sFirst + '</a><a  tabindex="' + e.iTabIndex + '" class="' + l.sPageButton + " " + l.sPagePrevious + '">' + k.sPrevious + '</a><span></span><a tabindex="' + e.iTabIndex + '" class="' + l.sPageButton + " " + l.sPageNext + '">' + k.sNext + '</a><a tabindex="' + e.iTabIndex + '" class="' + l.sPageButton +
					" " + l.sPageLast + '">' + k.sLast + "</a>");
				var v = i("a", j),
					k = v[0],
					l = v[1],
					z = v[2],
					v = v[3];
				e.oApi._fnBindAction(k, {
					action: "first"
				}, t);
				e.oApi._fnBindAction(l, {
					action: "previous"
				}, t);
				e.oApi._fnBindAction(z, {
					action: "next"
				}, t);
				e.oApi._fnBindAction(v, {
					action: "last"
				}, t);
				e.aanFeatures.p || (j.id = e.sTableId + "_paginate", k.id = e.sTableId + "_first", l.id = e.sTableId + "_previous", z.id = e.sTableId + "_next", v.id = e.sTableId + "_last")
			},
			fnUpdate: function(e, o) {
				if(e.aanFeatures.p) {
					var l = j.ext.oPagination.iFullNumbersShowPages,
						k = Math.floor(l /
							2),
						n = Math.ceil(e.fnRecordsDisplay() / e._iDisplayLength),
						t = Math.ceil(e._iDisplayStart / e._iDisplayLength) + 1,
						v = "",
						z, D = e.oClasses,
						x, J = e.aanFeatures.p,
						H = function(i) {
							e.oApi._fnBindAction(this, {
								page: i + z - 1
							}, function(i) {
								e.oApi._fnPageChange(e, i.data.page);
								o(e);
								i.preventDefault()
							})
						}; - 1 === e._iDisplayLength ? t = k = z = 1 : n < l ? (z = 1, k = n) : t <= k ? (z = 1, k = l) : t >= n - k ? (z = n - l + 1, k = n) : (z = t - Math.ceil(l / 2) + 1, k = z + l - 1);
					for(l = z; l <= k; l++) v += t !== l ? '<a tabindex="' + e.iTabIndex + '" class="' + D.sPageButton + '">' + e.fnFormatNumber(l) + "</a>" : '<a tabindex="' +
						e.iTabIndex + '" class="' + D.sPageButtonActive + '">' + e.fnFormatNumber(l) + "</a>";
					l = 0;
					for(k = J.length; l < k; l++) 0 !== J[l].childNodes.length && (i("span:eq(0)", J[l]).html(v).children("a").each(H), x = J[l].getElementsByTagName("a"), x = [x[0], x[1], x[x.length - 2], x[x.length - 1]], i(x).removeClass(D.sPageButton + " " + D.sPageButtonActive + " " + D.sPageButtonStaticDisabled), i([x[0], x[1]]).addClass(1 == t ? D.sPageButtonStaticDisabled : D.sPageButton), i([x[2], x[3]]).addClass(0 === n || t === n || -1 === e._iDisplayLength ? D.sPageButtonStaticDisabled :
						D.sPageButton))
				}
			}
		}
	});
	i.extend(j.ext.oSort, {
		"string-pre": function(e) {
			"string" != typeof e && (e = null !== e && e.toString ? e.toString() : "");
			return e.toLowerCase()
		},
		"string-asc": function(e, i) {
			return e < i ? -1 : e > i ? 1 : 0
		},
		"string-desc": function(e, i) {
			return e < i ? 1 : e > i ? -1 : 0
		},
		"html-pre": function(e) {
			return e.replace(/<.*?>/g, "").toLowerCase()
		},
		"html-asc": function(e, i) {
			return e < i ? -1 : e > i ? 1 : 0
		},
		"html-desc": function(e, i) {
			return e < i ? 1 : e > i ? -1 : 0
		},
		"date-pre": function(e) {
			e = Date.parse(e);
			if(isNaN(e) || "" === e) e = Date.parse("01/01/1970 00:00:00");
			return e
		},
		"date-asc": function(e, i) {
			return e - i
		},
		"date-desc": function(e, i) {
			return i - e
		},
		"numeric-pre": function(e) {
			return "-" == e || "" === e ? 0 : 1 * e
		},
		"numeric-asc": function(e, i) {
			return e - i
		},
		"numeric-desc": function(e, i) {
			return i - e
		}
	});
	i.extend(j.ext.aTypes, [function(e) {
		if("number" === typeof e) return "numeric";
		if("string" !== typeof e) return null;
		var i, j = !1;
		i = e.charAt(0);
		if(-1 == "0123456789-".indexOf(i)) return null;
		for(var k = 1; k < e.length; k++) {
			i = e.charAt(k);
			if(-1 == "0123456789.".indexOf(i)) return null;
			if("." == i) {
				if(j) return null;
				j = !0
			}
		}
		return "numeric"
	}, function(e) {
		var i = Date.parse(e);
		return null !== i && !isNaN(i) || "string" === typeof e && 0 === e.length ? "date" : null
	}, function(e) {
		return "string" === typeof e && -1 != e.indexOf("<") && -1 != e.indexOf(">") ? "html" : null
	}]);
	i.fn.DataTable = j;
	i.fn.dataTable = j;
	i.fn.dataTableSettings = j.settings;
	i.fn.dataTableExt = j.ext
})(jQuery, window, document, void 0);
/*!
 * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2015
 * @version 1.3.3
 *
 * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.
 * @see http://php.net/manual/en/function.date.php
 *
 * For more JQuery plugins visit http://plugins.krajee.com
 * For more Yii related demos visit http://demos.krajee.com
 */
var DateFormatter;
(function () {
    "use strict";

    var _compare, _lpad, _extend, defaultSettings, DAY, HOUR;
    DAY = 1000 * 60 * 60 * 24;
    HOUR = 3600;

    _compare = function (str1, str2) {
        return typeof(str1) === 'string' && typeof(str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();
    };
    _lpad = function (value, length, char) {
        var chr = char || '0', val = value.toString();
        return val.length < length ? _lpad(chr + val, length) : val;
    };
    _extend = function (out) {
        var i, obj;
        out = out || {};
        for (i = 1; i < arguments.length; i++) {
            obj = arguments[i];
            if (!obj) {
                continue;
            }
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    if (typeof obj[key] === 'object') {
                        _extend(out[key], obj[key]);
                    } else {
                        out[key] = obj[key];
                    }
                }
            }
        }
        return out;
    };
    defaultSettings = {
        dateSettings: {
            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
            daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            months: [
                'January', 'February', 'March', 'April', 'May', 'June', 'July',
                'August', 'September', 'October', 'November', 'December'
            ],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            meridiem: ['AM', 'PM'],
            ordinal: function (number) {
                var n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};
                return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];
            }
        },
        separators: /[ \-+\/\.T:@]/g,
        validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,
        intParts: /[djwNzmnyYhHgGis]/g,
        tzParts: /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
        tzClip: /[^-+\dA-Z]/g
    };

    DateFormatter = function (options) {
        var self = this, config = _extend(defaultSettings, options);
        self.dateSettings = config.dateSettings;
        self.separators = config.separators;
        self.validParts = config.validParts;
        self.intParts = config.intParts;
        self.tzParts = config.tzParts;
        self.tzClip = config.tzClip;
    };

    DateFormatter.prototype = {
        constructor: DateFormatter,
        parseDate: function (vDate, vFormat) {
            var self = this, vFormatParts, vDateParts, i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,
                vSettings = self.dateSettings, vMonth, vMeriIndex, vMeriOffset, len, mer,
                out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0};
            if (!vDate) {
                return undefined;
            }
            if (vDate instanceof Date) {
                return vDate;
            }
            if (typeof vDate === 'number') {
                return new Date(vDate);
            }
            if (vFormat === 'U') {
                i = parseInt(vDate);
                return i ? new Date(i * 1000) : vDate;
            }
            if (typeof vDate !== 'string') {
                return '';
            }
            vFormatParts = vFormat.match(self.validParts);
            if (!vFormatParts || vFormatParts.length === 0) {
                throw new Error("Invalid date format definition.");
            }
            vDateParts = vDate.replace(self.separators, '\0').split('\0');
            for (i = 0; i < vDateParts.length; i++) {
                vDatePart = vDateParts[i];
                iDatePart = parseInt(vDatePart);
                switch (vFormatParts[i]) {
                    case 'y':
                    case 'Y':
                        len = vDatePart.length;
                        if (len === 2) {
                            out.year = parseInt((iDatePart < 70 ? '20' : '19') + vDatePart);
                        } else if (len === 4) {
                            out.year = iDatePart;
                        }
                        vDateFlag = true;
                        break;
                    case 'm':
                    case 'n':
                    case 'M':
                    case 'F':
                        if (isNaN(vDatePart)) {
                            vMonth = vSettings.monthsShort.indexOf(vDatePart);
                            if (vMonth > -1) {
                                out.month = vMonth + 1;
                            }
                            vMonth = vSettings.months.indexOf(vDatePart);
                            if (vMonth > -1) {
                                out.month = vMonth + 1;
                            }
                        } else {
                            if (iDatePart >= 1 && iDatePart <= 12) {
                                out.month = iDatePart;
                            }
                        }
                        vDateFlag = true;
                        break;
                    case 'd':
                    case 'j':
                        if (iDatePart >= 1 && iDatePart <= 31) {
                            out.day = iDatePart;
                        }
                        vDateFlag = true;
                        break;
                    case 'g':
                    case 'h':
                        vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :
                            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;
                        mer = vDateParts[vMeriIndex];
                        if (vMeriIndex > -1) {
                            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :
                                (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);
                            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {
                                out.hour = iDatePart + vMeriOffset - 1;
                            } else if (iDatePart >= 0 && iDatePart <= 23) {
                                out.hour = iDatePart;
                            }
                        } else if (iDatePart >= 0 && iDatePart <= 23) {
                            out.hour = iDatePart;
                        }
                        vTimeFlag = true;
                        break;
                    case 'G':
                    case 'H':
                        if (iDatePart >= 0 && iDatePart <= 23) {
                            out.hour = iDatePart;
                        }
                        vTimeFlag = true;
                        break;
                    case 'i':
                        if (iDatePart >= 0 && iDatePart <= 59) {
                            out.min = iDatePart;
                        }
                        vTimeFlag = true;
                        break;
                    case 's':
                        if (iDatePart >= 0 && iDatePart <= 59) {
                            out.sec = iDatePart;
                        }
                        vTimeFlag = true;
                        break;
                }
            }
            if (vDateFlag === true && out.year && out.month && out.day) {
                out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);
            } else {
                if (vTimeFlag !== true) {
                    return false;
                }
                out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);
            }
            return out.date;
        },
        guessDate: function (vDateStr, vFormat) {
            if (typeof vDateStr !== 'string') {
                return vDateStr;
            }
            var self = this, vParts = vDateStr.replace(self.separators, '\0').split('\0'), vPattern = /^[djmn]/g,
                vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0, vYear, i, iPart, iSec;

            if (!vPattern.test(vFormatParts[0])) {
                return vDateStr;
            }

            for (i = 0; i < vParts.length; i++) {
                vDigit = 2;
                iPart = vParts[i];
                iSec = parseInt(iPart.substr(0, 2));
                switch (i) {
                    case 0:
                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {
                            vDate.setMonth(iSec - 1);
                        } else {
                            vDate.setDate(iSec);
                        }
                        break;
                    case 1:
                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {
                            vDate.setDate(iSec);
                        } else {
                            vDate.setMonth(iSec - 1);
                        }
                        break;
                    case 2:
                        vYear = vDate.getFullYear();
                        if (iPart.length < 4) {
                            vDate.setFullYear(parseInt(vYear.toString().substr(0, 4 - iPart.length) + iPart));
                            vDigit = iPart.length;
                        } else {
                            vDate.setFullYear = parseInt(iPart.substr(0, 4));
                            vDigit = 4;
                        }
                        break;
                    case 3:
                        vDate.setHours(iSec);
                        break;
                    case 4:
                        vDate.setMinutes(iSec);
                        break;
                    case 5:
                        vDate.setSeconds(iSec);
                        break;
                }
                if (iPart.substr(vDigit).length > 0) {
                    vParts.splice(i + 1, 0, iPart.substr(vDigit));
                }
            }
            return vDate;
        },
        parseFormat: function (vChar, vDate) {
            var self = this, vSettings = self.dateSettings, fmt, backspace = /\\?(.?)/gi, doFormat = function (t, s) {
                return fmt[t] ? fmt[t]() : s;
            };
            fmt = {
                /////////
                // DAY //
                /////////
                /**
                 * Day of month with leading 0: `01..31`
                 * @return {string}
                 */
                d: function () {
                    return _lpad(fmt.j(), 2);
                },
                /**
                 * Shorthand day name: `Mon...Sun`
                 * @return {string}
                 */
                D: function () {
                    return vSettings.daysShort[fmt.w()];
                },
                /**
                 * Day of month: `1..31`
                 * @return {number}
                 */
                j: function () {
                    return vDate.getDate();
                },
                /**
                 * Full day name: `Monday...Sunday`
                 * @return {number}
                 */
                l: function () {
                    return vSettings.days[fmt.w()];
                },
                /**
                 * ISO-8601 day of week: `1[Mon]..7[Sun]`
                 * @return {number}
                 */
                N: function () {
                    return fmt.w() || 7;
                },
                /**
                 * Day of week: `0[Sun]..6[Sat]`
                 * @return {number}
                 */
                w: function () {
                    return vDate.getDay();
                },
                /**
                 * Day of year: `0..365`
                 * @return {number}
                 */
                z: function () {
                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);
                    return Math.round((a - b) / DAY);
                },

                //////////
                // WEEK //
                //////////
                /**
                 * ISO-8601 week number
                 * @return {number}
                 */
                W: function () {
                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);
                    return _lpad(1 + Math.round((a - b) / DAY / 7), 2);
                },

                ///////////
                // MONTH //
                ///////////
                /**
                 * Full month name: `January...December`
                 * @return {string}
                 */
                F: function () {
                    return vSettings.months[vDate.getMonth()];
                },
                /**
                 * Month w/leading 0: `01..12`
                 * @return {string}
                 */
                m: function () {
                    return _lpad(fmt.n(), 2);
                },
                /**
                 * Shorthand month name; `Jan...Dec`
                 * @return {string}
                 */
                M: function () {
                    return vSettings.monthsShort[vDate.getMonth()];
                },
                /**
                 * Month: `1...12`
                 * @return {number}
                 */
                n: function () {
                    return vDate.getMonth() + 1;
                },
                /**
                 * Days in month: `28...31`
                 * @return {number}
                 */
                t: function () {
                    return (new Date(fmt.Y(), fmt.n(), 0)).getDate();
                },

                //////////
                // YEAR //
                //////////
                /**
                 * Is leap year? `0 or 1`
                 * @return {number}
                 */
                L: function () {
                    var Y = fmt.Y();
                    return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;
                },
                /**
                 * ISO-8601 year
                 * @return {number}
                 */
                o: function () {
                    var n = fmt.n(), W = fmt.W(), Y = fmt.Y();
                    return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);
                },
                /**
                 * Full year: `e.g. 1980...2010`
                 * @return {number}
                 */
                Y: function () {
                    return vDate.getFullYear();
                },
                /**
                 * Last two digits of year: `00...99`
                 * @return {string}
                 */
                y: function () {
                    return fmt.Y().toString().slice(-2);
                },

                //////////
                // TIME //
                //////////
                /**
                 * Meridian lower: `am or pm`
                 * @return {string}
                 */
                a: function () {
                    return fmt.A().toLowerCase();
                },
                /**
                 * Meridian upper: `AM or PM`
                 * @return {string}
                 */
                A: function () {
                    var n = fmt.G() < 12 ? 0 : 1;
                    return vSettings.meridiem[n];
                },
                /**
                 * Swatch Internet time: `000..999`
                 * @return {string}
                 */
                B: function () {
                    var H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();
                    return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);
                },
                /**
                 * 12-Hours: `1..12`
                 * @return {number}
                 */
                g: function () {
                    return fmt.G() % 12 || 12;
                },
                /**
                 * 24-Hours: `0..23`
                 * @return {number}
                 */
                G: function () {
                    return vDate.getHours();
                },
                /**
                 * 12-Hours with leading 0: `01..12`
                 * @return {string}
                 */
                h: function () {
                    return _lpad(fmt.g(), 2);
                },
                /**
                 * 24-Hours w/leading 0: `00..23`
                 * @return {string}
                 */
                H: function () {
                    return _lpad(fmt.G(), 2);
                },
                /**
                 * Minutes w/leading 0: `00..59`
                 * @return {string}
                 */
                i: function () {
                    return _lpad(vDate.getMinutes(), 2);
                },
                /**
                 * Seconds w/leading 0: `00..59`
                 * @return {string}
                 */
                s: function () {
                    return _lpad(vDate.getSeconds(), 2);
                },
                /**
                 * Microseconds: `000000-999000`
                 * @return {string}
                 */
                u: function () {
                    return _lpad(vDate.getMilliseconds() * 1000, 6);
                },

                //////////////
                // TIMEZONE //
                //////////////
                /**
                 * Timezone identifier: `e.g. Atlantic/Azores, ...`
                 * @return {string}
                 */
                e: function () {
                    var str = /\((.*)\)/.exec(String(vDate))[1];
                    return str || 'Coordinated Universal Time';
                },
                /**
                 * Timezone abbreviation: `e.g. EST, MDT, ...`
                 * @return {string}
                 */
                T: function () {
                    var str = (String(vDate).match(self.tzParts) || [""]).pop().replace(self.tzClip, "");
                    return str || 'UTC';
                },
                /**
                 * DST observed? `0 or 1`
                 * @return {number}
                 */
                I: function () {
                    var a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),
                        b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);
                    return ((a - c) !== (b - d)) ? 1 : 0;
                },
                /**
                 * Difference to GMT in hour format: `e.g. +0200`
                 * @return {string}
                 */
                O: function () {
                    var tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);
                    return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);
                },
                /**
                 * Difference to GMT with colon: `e.g. +02:00`
                 * @return {string}
                 */
                P: function () {
                    var O = fmt.O();
                    return (O.substr(0, 3) + ':' + O.substr(3, 2));
                },
                /**
                 * Timezone offset in seconds: `-43200...50400`
                 * @return {number}
                 */
                Z: function () {
                    return -vDate.getTimezoneOffset() * 60;
                },

                ////////////////////
                // FULL DATE TIME //
                ////////////////////
                /**
                 * ISO-8601 date
                 * @return {string}
                 */
                c: function () {
                    return 'Y-m-d\\TH:i:sP'.replace(backspace, doFormat);
                },
                /**
                 * RFC 2822 date
                 * @return {string}
                 */
                r: function () {
                    return 'D, d M Y H:i:s O'.replace(backspace, doFormat);
                },
                /**
                 * Seconds since UNIX epoch
                 * @return {number}
                 */
                U: function () {
                    return vDate.getTime() / 1000 || 0;
                }
            };
            return doFormat(vChar, vChar);
        },
        formatDate: function (vDate, vFormat) {
            var self = this, i, n, len, str, vChar, vDateStr = '';
            if (typeof vDate === 'string') {
                vDate = self.parseDate(vDate, vFormat);
                if (vDate === false) {
                    return false;
                }
            }
            if (vDate instanceof Date) {
                len = vFormat.length;
                for (i = 0; i < len; i++) {
                    vChar = vFormat.charAt(i);
                    if (vChar === 'S') {
                        continue;
                    }
                    str = self.parseFormat(vChar, vDate);
                    if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {
                        n = parseInt(str);
                        str += self.dateSettings.ordinal(n);
                    }
                    vDateStr += str;
                }
                return vDateStr;
            }
            return '';
        }
    };
})();/**
 * @preserve jQuery DateTimePicker plugin v2.5.3
 * @homepage http://xdsoft.net/jqplugins/datetimepicker/
 * @author Chupurnov Valeriy (<chupurnov@gmail.com>)
 */
/*global DateFormatter, document,window,jQuery,setTimeout,clearTimeout,HighlightedDate,getCurrentValue*/
;(function (factory) {
	if ( typeof define === 'function' && define.amd ) {
		// AMD. Register as an anonymous module.
		define(['jquery', 'jquery-mousewheel'], factory);
	} else if (typeof exports === 'object') {
		// Node/CommonJS style for Browserify
		module.exports = factory;
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function ($) {
	'use strict';
	var default_options  = {
		i18n: {
			ar: { // Arabic
				months: [
					"كانون الثاني", "شباط", "آذار", "نيسان", "مايو", "حزيران", "تموز", "آب", "أيلول", "تشرين الأول", "تشرين الثاني", "كانون الأول"
				],
				dayOfWeekShort: [
					"ن", "ث", "ع", "خ", "ج", "س", "ح"
				],
				dayOfWeek: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت", "الأحد"]
			},
			ro: { // Romanian
				months: [
					"Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"
				],
				dayOfWeekShort: [
					"Du", "Lu", "Ma", "Mi", "Jo", "Vi", "Sâ"
				],
				dayOfWeek: ["Duminică", "Luni", "Marţi", "Miercuri", "Joi", "Vineri", "Sâmbătă"]
			},
			id: { // Indonesian
				months: [
					"Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"
				],
				dayOfWeekShort: [
					"Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"
				],
				dayOfWeek: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
			},
			is: { // Icelandic
				months: [
					"Janúar", "Febrúar", "Mars", "Apríl", "Maí", "Júní", "Júlí", "Ágúst", "September", "Október", "Nóvember", "Desember"
				],
				dayOfWeekShort: [
					"Sun", "Mán", "Þrið", "Mið", "Fim", "Fös", "Lau"
				],
				dayOfWeek: ["Sunnudagur", "Mánudagur", "Þriðjudagur", "Miðvikudagur", "Fimmtudagur", "Föstudagur", "Laugardagur"]
			},
			bg: { // Bulgarian
				months: [
					"Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"
				],
				dayOfWeekShort: [
					"Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"
				],
				dayOfWeek: ["Неделя", "Понеделник", "Вторник", "Сряда", "Четвъртък", "Петък", "Събота"]
			},
			fa: { // Persian/Farsi
				months: [
					'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'
				],
				dayOfWeekShort: [
					'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'
				],
				dayOfWeek: ["یک‌شنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنج‌شنبه", "جمعه", "شنبه", "یک‌شنبه"]
			},
			ru: { // Russian
				months: [
					'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'
				],
				dayOfWeekShort: [
					"Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"
				],
				dayOfWeek: ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"]
			},
			uk: { // Ukrainian
				months: [
					'Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'
				],
				dayOfWeekShort: [
					"Ндл", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Сбт"
				],
				dayOfWeek: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятниця", "Субота"]
			},
			en: { // English
				months: [
					"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
				],
				dayOfWeekShort: [
					"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
				],
				dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
			},
			el: { // Ελληνικά
				months: [
					"Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"
				],
				dayOfWeekShort: [
					"Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"
				],
				dayOfWeek: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"]
			},
			de: { // German
				months: [
					'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'
				],
				dayOfWeekShort: [
					"So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"
				],
				dayOfWeek: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"]
			},
			nl: { // Dutch
				months: [
					"januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"
				],
				dayOfWeekShort: [
					"zo", "ma", "di", "wo", "do", "vr", "za"
				],
				dayOfWeek: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"]
			},
			tr: { // Turkish
				months: [
					"Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"
				],
				dayOfWeekShort: [
					"Paz", "Pts", "Sal", "Çar", "Per", "Cum", "Cts"
				],
				dayOfWeek: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"]
			},
			fr: { //French
				months: [
					"Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"
				],
				dayOfWeekShort: [
					"Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"
				],
				dayOfWeek: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"]
			},
			es: { // Spanish
				months: [
					"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
				],
				dayOfWeekShort: [
					"Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"
				],
				dayOfWeek: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"]
			},
			th: { // Thai
				months: [
					'มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'
				],
				dayOfWeekShort: [
					'อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.'
				],
				dayOfWeek: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัส", "ศุกร์", "เสาร์", "อาทิตย์"]
			},
			pl: { // Polish
				months: [
					"styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"
				],
				dayOfWeekShort: [
					"nd", "pn", "wt", "śr", "cz", "pt", "sb"
				],
				dayOfWeek: ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"]
			},
			pt: { // Portuguese
				months: [
					"Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"
				],
				dayOfWeekShort: [
					"Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"
				],
				dayOfWeek: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"]
			},
			ch: { // Simplified Chinese
				months: [
					"一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"
				],
				dayOfWeekShort: [
					"日", "一", "二", "三", "四", "五", "六"
				]
			},
			se: { // Swedish
				months: [
					"Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September",  "Oktober", "November", "December"
				],
				dayOfWeekShort: [
					"Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"
				]
			},
			kr: { // Korean
				months: [
					"1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"
				],
				dayOfWeekShort: [
					"일", "월", "화", "수", "목", "금", "토"
				],
				dayOfWeek: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"]
			},
			it: { // Italian
				months: [
					"Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"
				],
				dayOfWeekShort: [
					"Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"
				],
				dayOfWeek: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"]
			},
			da: { // Dansk
				months: [
					"January", "Februar", "Marts", "April", "Maj", "Juni", "July", "August", "September", "Oktober", "November", "December"
				],
				dayOfWeekShort: [
					"Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"
				],
				dayOfWeek: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"]
			},
			no: { // Norwegian
				months: [
					"Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"
				],
				dayOfWeekShort: [
					"Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"
				],
				dayOfWeek: ['Søndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lørdag']
			},
			ja: { // Japanese
				months: [
					"1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"
				],
				dayOfWeekShort: [
					"日", "月", "火", "水", "木", "金", "土"
				],
				dayOfWeek: ["日曜", "月曜", "火曜", "水曜", "木曜", "金曜", "土曜"]
			},
			vi: { // Vietnamese
				months: [
					"Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"
				],
				dayOfWeekShort: [
					"CN", "T2", "T3", "T4", "T5", "T6", "T7"
				],
				dayOfWeek: ["Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy"]
			},
			sl: { // Slovenščina
				months: [
					"Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"
				],
				dayOfWeekShort: [
					"Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"
				],
				dayOfWeek: ["Nedelja", "Ponedeljek", "Torek", "Sreda", "Četrtek", "Petek", "Sobota"]
			},
			cs: { // Čeština
				months: [
					"Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"
				],
				dayOfWeekShort: [
					"Ne", "Po", "Út", "St", "Čt", "Pá", "So"
				]
			},
			hu: { // Hungarian
				months: [
					"Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"
				],
				dayOfWeekShort: [
					"Va", "Hé", "Ke", "Sze", "Cs", "Pé", "Szo"
				],
				dayOfWeek: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"]
			},
			az: { //Azerbaijanian (Azeri)
				months: [
					"Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"
				],
				dayOfWeekShort: [
					"B", "Be", "Ça", "Ç", "Ca", "C", "Ş"
				],
				dayOfWeek: ["Bazar", "Bazar ertəsi", "Çərşənbə axşamı", "Çərşənbə", "Cümə axşamı", "Cümə", "Şənbə"]
			},
			bs: { //Bosanski
				months: [
					"Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"
				],
				dayOfWeekShort: [
					"Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"
				],
				dayOfWeek: ["Nedjelja","Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"]
			},
			ca: { //Català
				months: [
					"Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"
				],
				dayOfWeekShort: [
					"Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"
				],
				dayOfWeek: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"]
			},
			'en-GB': { //English (British)
				months: [
					"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
				],
				dayOfWeekShort: [
					"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
				],
				dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
			},
			et: { //"Eesti"
				months: [
					"Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"
				],
				dayOfWeekShort: [
					"P", "E", "T", "K", "N", "R", "L"
				],
				dayOfWeek: ["Pühapäev", "Esmaspäev", "Teisipäev", "Kolmapäev", "Neljapäev", "Reede", "Laupäev"]
			},
			eu: { //Euskara
				months: [
					"Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"
				],
				dayOfWeekShort: [
					"Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."
				],
				dayOfWeek: ['Igandea', 'Astelehena', 'Asteartea', 'Asteazkena', 'Osteguna', 'Ostirala', 'Larunbata']
			},
			fi: { //Finnish (Suomi)
				months: [
					"Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kesäkuu", "Heinäkuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"
				],
				dayOfWeekShort: [
					"Su", "Ma", "Ti", "Ke", "To", "Pe", "La"
				],
				dayOfWeek: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"]
			},
			gl: { //Galego
				months: [
					"Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"
				],
				dayOfWeekShort: [
					"Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"
				],
				dayOfWeek: ["Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado"]
			},
			hr: { //Hrvatski
				months: [
					"Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"
				],
				dayOfWeekShort: [
					"Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"
				],
				dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"]
			},
			ko: { //Korean (한국어)
				months: [
					"1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"
				],
				dayOfWeekShort: [
					"일", "월", "화", "수", "목", "금", "토"
				],
				dayOfWeek: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"]
			},
			lt: { //Lithuanian (lietuvių)
				months: [
					"Sausio", "Vasario", "Kovo", "Balandžio", "Gegužės", "Birželio", "Liepos", "Rugpjūčio", "Rugsėjo", "Spalio", "Lapkričio", "Gruodžio"
				],
				dayOfWeekShort: [
					"Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "Šeš"
				],
				dayOfWeek: ["Sekmadienis", "Pirmadienis", "Antradienis", "Trečiadienis", "Ketvirtadienis", "Penktadienis", "Šeštadienis"]
			},
			lv: { //Latvian (Latviešu)
				months: [
					"Janvāris", "Februāris", "Marts", "Aprīlis ", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"
				],
				dayOfWeekShort: [
					"Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"
				],
				dayOfWeek: ["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"]
			},
			mk: { //Macedonian (Македонски)
				months: [
					"јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"
				],
				dayOfWeekShort: [
					"нед", "пон", "вто", "сре", "чет", "пет", "саб"
				],
				dayOfWeek: ["Недела", "Понеделник", "Вторник", "Среда", "Четврток", "Петок", "Сабота"]
			},
			mn: { //Mongolian (Монгол)
				months: [
					"1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"
				],
				dayOfWeekShort: [
					"Дав", "Мяг", "Лха", "Пүр", "Бсн", "Бям", "Ням"
				],
				dayOfWeek: ["Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба", "Ням"]
			},
			'pt-BR': { //Português(Brasil)
				months: [
					"Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"
				],
				dayOfWeekShort: [
					"Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"
				],
				dayOfWeek: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"]
			},
			sk: { //Slovenčina
				months: [
					"Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"
				],
				dayOfWeekShort: [
					"Ne", "Po", "Ut", "St", "Št", "Pi", "So"
				],
				dayOfWeek: ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"]
			},
			sq: { //Albanian (Shqip)
				months: [
					"Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", "Dhjetor"
				],
				dayOfWeekShort: [
					"Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Shtu"
				],
				dayOfWeek: ["E Diel", "E Hënë", "E Martē", "E Mërkurë", "E Enjte", "E Premte", "E Shtunë"]
			},
			'sr-YU': { //Serbian (Srpski)
				months: [
					"Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"
				],
				dayOfWeekShort: [
					"Ned", "Pon", "Uto", "Sre", "čet", "Pet", "Sub"
				],
				dayOfWeek: ["Nedelja","Ponedeljak", "Utorak", "Sreda", "Četvrtak", "Petak", "Subota"]
			},
			sr: { //Serbian Cyrillic (Српски)
				months: [
					"јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"
				],
				dayOfWeekShort: [
					"нед", "пон", "уто", "сре", "чет", "пет", "суб"
				],
				dayOfWeek: ["Недеља","Понедељак", "Уторак", "Среда", "Четвртак", "Петак", "Субота"]
			},
			sv: { //Svenska
				months: [
					"Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"
				],
				dayOfWeekShort: [
					"Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"
				],
				dayOfWeek: ["Söndag", "Måndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "Lördag"]
			},
			'zh-TW': { //Traditional Chinese (繁體中文)
				months: [
					"一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"
				],
				dayOfWeekShort: [
					"日", "一", "二", "三", "四", "五", "六"
				],
				dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
			},
			zh: { //Simplified Chinese (简体中文)
				months: [
					"一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"
				],
				dayOfWeekShort: [
					"日", "一", "二", "三", "四", "五", "六"
				],
				dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
			},
			he: { //Hebrew (עברית)
				months: [
					'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'
				],
				dayOfWeekShort: [
					'א\'', 'ב\'', 'ג\'', 'ד\'', 'ה\'', 'ו\'', 'שבת'
				],
				dayOfWeek: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת", "ראשון"]
			},
			hy: { // Armenian
				months: [
					"Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"
				],
				dayOfWeekShort: [
					"Կի", "Երկ", "Երք", "Չոր", "Հնգ", "Ուրբ", "Շբթ"
				],
				dayOfWeek: ["Կիրակի", "Երկուշաբթի", "Երեքշաբթի", "Չորեքշաբթի", "Հինգշաբթի", "Ուրբաթ", "Շաբաթ"]
			},
			kg: { // Kyrgyz
				months: [
					'Үчтүн айы', 'Бирдин айы', 'Жалган Куран', 'Чын Куран', 'Бугу', 'Кулжа', 'Теке', 'Баш Оона', 'Аяк Оона', 'Тогуздун айы', 'Жетинин айы', 'Бештин айы'
				],
				dayOfWeekShort: [
					"Жек", "Дүй", "Шей", "Шар", "Бей", "Жум", "Ише"
				],
				dayOfWeek: [
					"Жекшемб", "Дүйшөмб", "Шейшемб", "Шаршемб", "Бейшемби", "Жума", "Ишенб"
				]
			},
			rm: { // Romansh
				months: [
					"Schaner", "Favrer", "Mars", "Avrigl", "Matg", "Zercladur", "Fanadur", "Avust", "Settember", "October", "November", "December"
				],
				dayOfWeekShort: [
					"Du", "Gli", "Ma", "Me", "Gie", "Ve", "So"
				],
				dayOfWeek: [
					"Dumengia", "Glindesdi", "Mardi", "Mesemna", "Gievgia", "Venderdi", "Sonda"
				]
			},
			ka: { // Georgian
				months: [
					'იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი', 'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'
				],
				dayOfWeekShort: [
					"კვ", "ორშ", "სამშ", "ოთხ", "ხუთ", "პარ", "შაბ"
				],
				dayOfWeek: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"]
			},
		},
		value: '',
		rtl: false,

		format:	'Y/m/d H:i',
		formatTime:	'H:i',
		formatDate:	'Y/m/d',

		startDate:	false, // new Date(), '1986/12/08', '-1970/01/05','-1970/01/05',
		step: 60,
		monthChangeSpinner: true,

		closeOnDateSelect: false,
		closeOnTimeSelect: true,
		closeOnWithoutClick: true,
		closeOnInputClick: true,

		timepicker: true,
		datepicker: true,
		weeks: false,

		defaultTime: false,	// use formatTime format (ex. '10:00' for formatTime:	'H:i')
		defaultDate: false,	// use formatDate format (ex new Date() or '1986/12/08' or '-1970/01/05' or '-1970/01/05')

		minDate: false,
		maxDate: false,
		minTime: false,
		maxTime: false,
		disabledMinTime: false,
		disabledMaxTime: false,

		allowTimes: [],
		opened: false,
		initTime: true,
		inline: false,
		theme: '',

		onSelectDate: function () {},
		onSelectTime: function () {},
		onChangeMonth: function () {},
		onGetWeekOfYear: function () {},
		onChangeYear: function () {},
		onChangeDateTime: function () {},
		onShow: function () {},
		onClose: function () {},
		onGenerate: function () {},

		withoutCopyright: true,
		inverseButton: false,
		hours12: false,
		next: 'xdsoft_next',
		prev : 'xdsoft_prev',
		dayOfWeekStart: 0,
		parentID: 'body',
		timeHeightInTimePicker: 25,
		timepickerScrollbar: true,
		todayButton: true,
		prevButton: true,
		nextButton: true,
		defaultSelect: true,

		scrollMonth: true,
		scrollTime: true,
		scrollInput: true,

		lazyInit: false,
		mask: false,
		validateOnBlur: true,
		allowBlank: true,
		yearStart: 1950,
		yearEnd: 2050,
		monthStart: 0,
		monthEnd: 11,
		style: '',
		id: '',
		fixed: false,
		roundTime: 'round', // ceil, floor
		className: '',
		weekends: [],
		highlightedDates: [],
		highlightedPeriods: [],
		allowDates : [],
		allowDateRe : null,
		disabledDates : [],
		disabledWeekDays: [],
		yearOffset: 0,
		beforeShowDay: null,

		enterLikeTab: true,
		showApplyButton: false
	};

	var dateHelper = null,
		globalLocaleDefault = 'en',
		globalLocale = 'en';

	var dateFormatterOptionsDefault = {
		meridiem: ['AM', 'PM']
	};

	var initDateFormatter = function(){
		var locale = default_options.i18n[globalLocale],
			opts = {
				days: locale.dayOfWeek,
				daysShort: locale.dayOfWeekShort,
				months: locale.months,
				monthsShort: $.map(locale.months, function(n){ return n.substring(0, 3) }),
			};

	 	dateHelper = new DateFormatter({
			dateSettings: $.extend({}, dateFormatterOptionsDefault, opts)
		});
	};

	// for locale settings
	$.datetimepicker = {
		setLocale: function(locale){
			var newLocale = default_options.i18n[locale]?locale:globalLocaleDefault;
			if(globalLocale != newLocale){
				globalLocale = newLocale;
				// reinit date formatter
				initDateFormatter();
			}
		},
		setDateFormatter: function(dateFormatter) {
			dateHelper = dateFormatter;
		},
		RFC_2822: 'D, d M Y H:i:s O',
		ATOM: 'Y-m-d\TH:i:sP',
		ISO_8601: 'Y-m-d\TH:i:sO',
		RFC_822: 'D, d M y H:i:s O',
		RFC_850: 'l, d-M-y H:i:s T',
		RFC_1036: 'D, d M y H:i:s O',
		RFC_1123: 'D, d M Y H:i:s O',
		RSS: 'D, d M Y H:i:s O',
		W3C: 'Y-m-d\TH:i:sP'
	};

	// first init date formatter
	initDateFormatter();

	// fix for ie8
	if (!window.getComputedStyle) {
		window.getComputedStyle = function (el, pseudo) {
			this.el = el;
			this.getPropertyValue = function (prop) {
				var re = /(\-([a-z]){1})/g;
				if (prop === 'float') {
					prop = 'styleFloat';
				}
				if (re.test(prop)) {
					prop = prop.replace(re, function (a, b, c) {
						return c.toUpperCase();
					});
				}
				return el.currentStyle[prop] || null;
			};
			return this;
		};
	}
	if (!Array.prototype.indexOf) {
		Array.prototype.indexOf = function (obj, start) {
			var i, j;
			for (i = (start || 0), j = this.length; i < j; i += 1) {
				if (this[i] === obj) { return i; }
			}
			return -1;
		};
	}
	Date.prototype.countDaysInMonth = function () {
		return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate();
	};
	$.fn.xdsoftScroller = function (percent) {
		return this.each(function () {
			var timeboxparent = $(this),
				pointerEventToXY = function (e) {
					var out = {x: 0, y: 0},
						touch;
					if (e.type === 'touchstart' || e.type === 'touchmove' || e.type === 'touchend' || e.type === 'touchcancel') {
						touch  = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];
						out.x = touch.clientX;
						out.y = touch.clientY;
					} else if (e.type === 'mousedown' || e.type === 'mouseup' || e.type === 'mousemove' || e.type === 'mouseover' || e.type === 'mouseout' || e.type === 'mouseenter' || e.type === 'mouseleave') {
						out.x = e.clientX;
						out.y = e.clientY;
					}
					return out;
				},
				timebox,
				parentHeight,
				height,
				scrollbar,
				scroller,
				maximumOffset = 100,
				start = false,
				startY = 0,
				startTop = 0,
				h1 = 0,
				touchStart = false,
				startTopScroll = 0,
				calcOffset = function () {};
			if (percent === 'hide') {
				timeboxparent.find('.xdsoft_scrollbar').hide();
				return;
			}
			if (!$(this).hasClass('xdsoft_scroller_box')) {
				timebox = timeboxparent.children().eq(0);
				parentHeight = timeboxparent[0].clientHeight;
				height = timebox[0].offsetHeight;
				scrollbar = $('<div class="xdsoft_scrollbar"></div>');
				scroller = $('<div class="xdsoft_scroller"></div>');
				scrollbar.append(scroller);

				timeboxparent.addClass('xdsoft_scroller_box').append(scrollbar);
				calcOffset = function calcOffset(event) {
					var offset = pointerEventToXY(event).y - startY + startTopScroll;
					if (offset < 0) {
						offset = 0;
					}
					if (offset + scroller[0].offsetHeight > h1) {
						offset = h1 - scroller[0].offsetHeight;
					}
					timeboxparent.trigger('scroll_element.xdsoft_scroller', [maximumOffset ? offset / maximumOffset : 0]);
				};

				scroller
					.on('touchstart.xdsoft_scroller mousedown.xdsoft_scroller', function (event) {
						if (!parentHeight) {
							timeboxparent.trigger('resize_scroll.xdsoft_scroller', [percent]);
						}

						startY = pointerEventToXY(event).y;
						startTopScroll = parseInt(scroller.css('margin-top'), 10);
						h1 = scrollbar[0].offsetHeight;

						if (event.type === 'mousedown' || event.type === 'touchstart') {
							if (document) {
								$(document.body).addClass('xdsoft_noselect');
							}
							$([document.body, window]).on('touchend mouseup.xdsoft_scroller', function arguments_callee() {
								$([document.body, window]).off('touchend mouseup.xdsoft_scroller', arguments_callee)
									.off('mousemove.xdsoft_scroller', calcOffset)
									.removeClass('xdsoft_noselect');
							});
							$(document.body).on('mousemove.xdsoft_scroller', calcOffset);
						} else {
							touchStart = true;
							event.stopPropagation();
							event.preventDefault();
						}
					})
					.on('touchmove', function (event) {
						if (touchStart) {
							event.preventDefault();
							calcOffset(event);
						}
					})
					.on('touchend touchcancel', function () {
						touchStart =  false;
						startTopScroll = 0;
					});

				timeboxparent
					.on('scroll_element.xdsoft_scroller', function (event, percentage) {
						if (!parentHeight) {
							timeboxparent.trigger('resize_scroll.xdsoft_scroller', [percentage, true]);
						}
						percentage = percentage > 1 ? 1 : (percentage < 0 || isNaN(percentage)) ? 0 : percentage;

						scroller.css('margin-top', maximumOffset * percentage);

						setTimeout(function () {
							timebox.css('marginTop', -parseInt((timebox[0].offsetHeight - parentHeight) * percentage, 10));
						}, 10);
					})
					.on('resize_scroll.xdsoft_scroller', function (event, percentage, noTriggerScroll) {
						var percent, sh;
						parentHeight = timeboxparent[0].clientHeight;
						height = timebox[0].offsetHeight;
						percent = parentHeight / height;
						sh = percent * scrollbar[0].offsetHeight;
						if (percent > 1) {
							scroller.hide();
						} else {
							scroller.show();
							scroller.css('height', parseInt(sh > 10 ? sh : 10, 10));
							maximumOffset = scrollbar[0].offsetHeight - scroller[0].offsetHeight;
							if (noTriggerScroll !== true) {
								timeboxparent.trigger('scroll_element.xdsoft_scroller', [percentage || Math.abs(parseInt(timebox.css('marginTop'), 10)) / (height - parentHeight)]);
							}
						}
					});

				timeboxparent.on('mousewheel', function (event) {
					var top = Math.abs(parseInt(timebox.css('marginTop'), 10));

					top = top - (event.deltaY * 20);
					if (top < 0) {
						top = 0;
					}

					timeboxparent.trigger('scroll_element.xdsoft_scroller', [top / (height - parentHeight)]);
					event.stopPropagation();
					return false;
				});

				timeboxparent.on('touchstart', function (event) {
					start = pointerEventToXY(event);
					startTop = Math.abs(parseInt(timebox.css('marginTop'), 10));
				});

				timeboxparent.on('touchmove', function (event) {
					if (start) {
						event.preventDefault();
						var coord = pointerEventToXY(event);
						timeboxparent.trigger('scroll_element.xdsoft_scroller', [(startTop - (coord.y - start.y)) / (height - parentHeight)]);
					}
				});

				timeboxparent.on('touchend touchcancel', function () {
					start = false;
					startTop = 0;
				});
			}
			timeboxparent.trigger('resize_scroll.xdsoft_scroller', [percent]);
		});
	};

	$.fn.datetimepicker = function (opt, opt2) {
		var result = this,
			KEY0 = 48,
			KEY9 = 57,
			_KEY0 = 96,
			_KEY9 = 105,
			CTRLKEY = 17,
			DEL = 46,
			ENTER = 13,
			ESC = 27,
			BACKSPACE = 8,
			ARROWLEFT = 37,
			ARROWUP = 38,
			ARROWRIGHT = 39,
			ARROWDOWN = 40,
			TAB = 9,
			F5 = 116,
			AKEY = 65,
			CKEY = 67,
			VKEY = 86,
			ZKEY = 90,
			YKEY = 89,
			ctrlDown	=	false,
			options = ($.isPlainObject(opt) || !opt) ? $.extend(true, {}, default_options, opt) : $.extend(true, {}, default_options),

			lazyInitTimer = 0,
			createDateTimePicker,
			destroyDateTimePicker,

			lazyInit = function (input) {
				input
					.on('open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart', function initOnActionCallback() {
						if (input.is(':disabled') || input.data('xdsoft_datetimepicker')) {
							return;
						}
						clearTimeout(lazyInitTimer);
						lazyInitTimer = setTimeout(function () {

							if (!input.data('xdsoft_datetimepicker')) {
								createDateTimePicker(input);
							}
							input
								.off('open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart', initOnActionCallback)
								.trigger('open.xdsoft');
						}, 100);
					});
			};

		createDateTimePicker = function (input) {
			var datetimepicker = $('<div class="xdsoft_datetimepicker xdsoft_noselect"></div>'),
				xdsoft_copyright = $('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'),
				datepicker = $('<div class="xdsoft_datepicker active"></div>'),
				mounth_picker = $('<div class="xdsoft_mounthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button>' +
					'<div class="xdsoft_label xdsoft_month"><span></span><i></i></div>' +
					'<div class="xdsoft_label xdsoft_year"><span></span><i></i></div>' +
					'<button type="button" class="xdsoft_next"></button></div>'),
				calendar = $('<div class="xdsoft_calendar"></div>'),
				timepicker = $('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'),
				timeboxparent = timepicker.find('.xdsoft_time_box').eq(0),
				timebox = $('<div class="xdsoft_time_variant"></div>'),
				applyButton = $('<button type="button" class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'),

				monthselect = $('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'),
				yearselect = $('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'),
				triggerAfterOpen = false,
				XDSoft_datetime,

				xchangeTimer,
				timerclick,
				current_time_index,
				setPos,
				timer = 0,
				_xdsoft_datetime,
				forEachAncestorOf;

			if (options.id) {
				datetimepicker.attr('id', options.id);
			}
			if (options.style) {
				datetimepicker.attr('style', options.style);
			}
			if (options.weeks) {
				datetimepicker.addClass('xdsoft_showweeks');
			}
			if (options.rtl) {
				datetimepicker.addClass('xdsoft_rtl');
			}

			datetimepicker.addClass('xdsoft_' + options.theme);
			datetimepicker.addClass(options.className);

			mounth_picker
				.find('.xdsoft_month span')
					.after(monthselect);
			mounth_picker
				.find('.xdsoft_year span')
					.after(yearselect);

			mounth_picker
				.find('.xdsoft_month,.xdsoft_year')
					.on('touchstart mousedown.xdsoft', function (event) {
					var select = $(this).find('.xdsoft_select').eq(0),
						val = 0,
						top = 0,
						visible = select.is(':visible'),
						items,
						i;

					mounth_picker
						.find('.xdsoft_select')
							.hide();
					if (_xdsoft_datetime.currentTime) {
						val = _xdsoft_datetime.currentTime[$(this).hasClass('xdsoft_month') ? 'getMonth' : 'getFullYear']();
					}

					select[visible ? 'hide' : 'show']();
					for (items = select.find('div.xdsoft_option'), i = 0; i < items.length; i += 1) {
						if (items.eq(i).data('value') === val) {
							break;
						} else {
							top += items[0].offsetHeight;
						}
					}

					select.xdsoftScroller(top / (select.children()[0].offsetHeight - (select[0].clientHeight)));
					event.stopPropagation();
					return false;
				});

			mounth_picker
				.find('.xdsoft_select')
					.xdsoftScroller()
				.on('touchstart mousedown.xdsoft', function (event) {
					event.stopPropagation();
					event.preventDefault();
				})
				.on('touchstart mousedown.xdsoft', '.xdsoft_option', function () {
					if (_xdsoft_datetime.currentTime === undefined || _xdsoft_datetime.currentTime === null) {
						_xdsoft_datetime.currentTime = _xdsoft_datetime.now();
					}

					var year = _xdsoft_datetime.currentTime.getFullYear();
					if (_xdsoft_datetime && _xdsoft_datetime.currentTime) {
						_xdsoft_datetime.currentTime[$(this).parent().parent().hasClass('xdsoft_monthselect') ? 'setMonth' : 'setFullYear']($(this).data('value'));
					}

					$(this).parent().parent().hide();

					datetimepicker.trigger('xchange.xdsoft');
					if (options.onChangeMonth && $.isFunction(options.onChangeMonth)) {
						options.onChangeMonth.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}

					if (year !== _xdsoft_datetime.currentTime.getFullYear() && $.isFunction(options.onChangeYear)) {
						options.onChangeYear.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}
				});

			datetimepicker.getValue = function () {
				return _xdsoft_datetime.getCurrentTime();
			};

			datetimepicker.setOptions = function (_options) {
				var highlightedDates = {};

				options = $.extend(true, {}, options, _options);

				if (_options.allowTimes && $.isArray(_options.allowTimes) && _options.allowTimes.length) {
					options.allowTimes = $.extend(true, [], _options.allowTimes);
				}

				if (_options.weekends && $.isArray(_options.weekends) && _options.weekends.length) {
					options.weekends = $.extend(true, [], _options.weekends);
				}

				if (_options.allowDates && $.isArray(_options.allowDates) && _options.allowDates.length) {
					options.allowDates = $.extend(true, [], _options.allowDates);
				}

				if (_options.allowDateRe && Object.prototype.toString.call(_options.allowDateRe)==="[object String]") {
					options.allowDateRe = new RegExp(_options.allowDateRe);
				}

				if (_options.highlightedDates && $.isArray(_options.highlightedDates) && _options.highlightedDates.length) {
					$.each(_options.highlightedDates, function (index, value) {
						var splitData = $.map(value.split(','), $.trim),
							exDesc,
							hDate = new HighlightedDate(dateHelper.parseDate(splitData[0], options.formatDate), splitData[1], splitData[2]), // date, desc, style
							keyDate = dateHelper.formatDate(hDate.date, options.formatDate);
						if (highlightedDates[keyDate] !== undefined) {
							exDesc = highlightedDates[keyDate].desc;
							if (exDesc && exDesc.length && hDate.desc && hDate.desc.length) {
								highlightedDates[keyDate].desc = exDesc + "\n" + hDate.desc;
							}
						} else {
							highlightedDates[keyDate] = hDate;
						}
					});

					options.highlightedDates = $.extend(true, [], highlightedDates);
				}

				if (_options.highlightedPeriods && $.isArray(_options.highlightedPeriods) && _options.highlightedPeriods.length) {
					highlightedDates = $.extend(true, [], options.highlightedDates);
					$.each(_options.highlightedPeriods, function (index, value) {
						var dateTest, // start date
							dateEnd,
							desc,
							hDate,
							keyDate,
							exDesc,
							style;
						if ($.isArray(value)) {
							dateTest = value[0];
							dateEnd = value[1];
							desc = value[2];
							style = value[3];
						}
						else {
							var splitData = $.map(value.split(','), $.trim);
							dateTest = dateHelper.parseDate(splitData[0], options.formatDate);
							dateEnd = dateHelper.parseDate(splitData[1], options.formatDate);
							desc = splitData[2];
							style = splitData[3];
						}

						while (dateTest <= dateEnd) {
							hDate = new HighlightedDate(dateTest, desc, style);
							keyDate = dateHelper.formatDate(dateTest, options.formatDate);
							dateTest.setDate(dateTest.getDate() + 1);
							if (highlightedDates[keyDate] !== undefined) {
								exDesc = highlightedDates[keyDate].desc;
								if (exDesc && exDesc.length && hDate.desc && hDate.desc.length) {
									highlightedDates[keyDate].desc = exDesc + "\n" + hDate.desc;
								}
							} else {
								highlightedDates[keyDate] = hDate;
							}
						}
					});

					options.highlightedDates = $.extend(true, [], highlightedDates);
				}

				if (_options.disabledDates && $.isArray(_options.disabledDates) && _options.disabledDates.length) {
					options.disabledDates = $.extend(true, [], _options.disabledDates);
				}

				if (_options.disabledWeekDays && $.isArray(_options.disabledWeekDays) && _options.disabledWeekDays.length) {
					options.disabledWeekDays = $.extend(true, [], _options.disabledWeekDays);
				}

				if ((options.open || options.opened) && (!options.inline)) {
					input.trigger('open.xdsoft');
				}

				if (options.inline) {
					triggerAfterOpen = true;
					datetimepicker.addClass('xdsoft_inline');
					input.after(datetimepicker).hide();
				}

				if (options.inverseButton) {
					options.next = 'xdsoft_prev';
					options.prev = 'xdsoft_next';
				}

				if (options.datepicker) {
					datepicker.addClass('active');
				} else {
					datepicker.removeClass('active');
				}

				if (options.timepicker) {
					timepicker.addClass('active');
				} else {
					timepicker.removeClass('active');
				}

				if (options.value) {
					_xdsoft_datetime.setCurrentTime(options.value);
					if (input && input.val) {
						input.val(_xdsoft_datetime.str);
					}
				}

				if (isNaN(options.dayOfWeekStart)) {
					options.dayOfWeekStart = 0;
				} else {
					options.dayOfWeekStart = parseInt(options.dayOfWeekStart, 10) % 7;
				}

				if (!options.timepickerScrollbar) {
					timeboxparent.xdsoftScroller('hide');
				}

				if (options.minDate && /^[\+\-](.*)$/.test(options.minDate)) {
					options.minDate = dateHelper.formatDate(_xdsoft_datetime.strToDateTime(options.minDate), options.formatDate);
				}

				if (options.maxDate &&  /^[\+\-](.*)$/.test(options.maxDate)) {
					options.maxDate = dateHelper.formatDate(_xdsoft_datetime.strToDateTime(options.maxDate), options.formatDate);
				}

				applyButton.toggle(options.showApplyButton);

				mounth_picker
					.find('.xdsoft_today_button')
						.css('visibility', !options.todayButton ? 'hidden' : 'visible');

				mounth_picker
					.find('.' + options.prev)
						.css('visibility', !options.prevButton ? 'hidden' : 'visible');

				mounth_picker
					.find('.' + options.next)
						.css('visibility', !options.nextButton ? 'hidden' : 'visible');

				setMask(options);

				if (options.validateOnBlur) {
					input
						.off('blur.xdsoft')
						.on('blur.xdsoft', function () {
							if (options.allowBlank && (!$.trim($(this).val()).length || (typeof options.mask == "string" && $.trim($(this).val()) === options.mask.replace(/[0-9]/g, '_')))) {
								$(this).val(null);
								datetimepicker.data('xdsoft_datetime').empty();
							} else {
								var d = dateHelper.parseDate($(this).val(), options.format);
								if (d) { // parseDate() may skip some invalid parts like date or time, so make it clear for user: show parsed date/time
									$(this).val(dateHelper.formatDate(d, options.format));
								} else {
									var splittedHours   = +([$(this).val()[0], $(this).val()[1]].join('')),
										splittedMinutes = +([$(this).val()[2], $(this).val()[3]].join(''));
	
									// parse the numbers as 0312 => 03:12
									if (!options.datepicker && options.timepicker && splittedHours >= 0 && splittedHours < 24 && splittedMinutes >= 0 && splittedMinutes < 60) {
										$(this).val([splittedHours, splittedMinutes].map(function (item) {
											return item > 9 ? item : '0' + item;
										}).join(':'));
									} else {
										$(this).val(dateHelper.formatDate(_xdsoft_datetime.now(), options.format));
									}
								}
								datetimepicker.data('xdsoft_datetime').setCurrentTime($(this).val());
							}

							datetimepicker.trigger('changedatetime.xdsoft');
							datetimepicker.trigger('close.xdsoft');
						});
				}
				options.dayOfWeekStartPrev = (options.dayOfWeekStart === 0) ? 6 : options.dayOfWeekStart - 1;

				datetimepicker
					.trigger('xchange.xdsoft')
					.trigger('afterOpen.xdsoft');
			};

			datetimepicker
				.data('options', options)
				.on('touchstart mousedown.xdsoft', function (event) {
					event.stopPropagation();
					event.preventDefault();
					yearselect.hide();
					monthselect.hide();
					return false;
				});

			//scroll_element = timepicker.find('.xdsoft_time_box');
			timeboxparent.append(timebox);
			timeboxparent.xdsoftScroller();

			datetimepicker.on('afterOpen.xdsoft', function () {
				timeboxparent.xdsoftScroller();
			});

			datetimepicker
				.append(datepicker)
				.append(timepicker);

			if (options.withoutCopyright !== true) {
				datetimepicker
					.append(xdsoft_copyright);
			}

			datepicker
				.append(mounth_picker)
				.append(calendar)
				.append(applyButton);

			$(options.parentID)
				.append(datetimepicker);

			XDSoft_datetime = function () {
				var _this = this;
				_this.now = function (norecursion) {
					var d = new Date(),
						date,
						time;

					if (!norecursion && options.defaultDate) {
						date = _this.strToDateTime(options.defaultDate);
						d.setFullYear(date.getFullYear());
						d.setMonth(date.getMonth());
						d.setDate(date.getDate());
					}

					if (options.yearOffset) {
						d.setFullYear(d.getFullYear() + options.yearOffset);
					}

					if (!norecursion && options.defaultTime) {
						time = _this.strtotime(options.defaultTime);
						d.setHours(time.getHours());
						d.setMinutes(time.getMinutes());
					}
					return d;
				};

				_this.isValidDate = function (d) {
					if (Object.prototype.toString.call(d) !== "[object Date]") {
						return false;
					}
					return !isNaN(d.getTime());
				};

				_this.setCurrentTime = function (dTime) {
					_this.currentTime = (typeof dTime === 'string') ? _this.strToDateTime(dTime) : _this.isValidDate(dTime) ? dTime : _this.now();
					datetimepicker.trigger('xchange.xdsoft');
				};

				_this.empty = function () {
					_this.currentTime = null;
				};

				_this.getCurrentTime = function (dTime) {
					return _this.currentTime;
				};

				_this.nextMonth = function () {

					if (_this.currentTime === undefined || _this.currentTime === null) {
						_this.currentTime = _this.now();
					}

					var month = _this.currentTime.getMonth() + 1,
						year;
					if (month === 12) {
						_this.currentTime.setFullYear(_this.currentTime.getFullYear() + 1);
						month = 0;
					}

					year = _this.currentTime.getFullYear();

					_this.currentTime.setDate(
						Math.min(
							new Date(_this.currentTime.getFullYear(), month + 1, 0).getDate(),
							_this.currentTime.getDate()
						)
					);
					_this.currentTime.setMonth(month);

					if (options.onChangeMonth && $.isFunction(options.onChangeMonth)) {
						options.onChangeMonth.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}

					if (year !== _this.currentTime.getFullYear() && $.isFunction(options.onChangeYear)) {
						options.onChangeYear.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}

					datetimepicker.trigger('xchange.xdsoft');
					return month;
				};

				_this.prevMonth = function () {

					if (_this.currentTime === undefined || _this.currentTime === null) {
						_this.currentTime = _this.now();
					}

					var month = _this.currentTime.getMonth() - 1;
					if (month === -1) {
						_this.currentTime.setFullYear(_this.currentTime.getFullYear() - 1);
						month = 11;
					}
					_this.currentTime.setDate(
						Math.min(
							new Date(_this.currentTime.getFullYear(), month + 1, 0).getDate(),
							_this.currentTime.getDate()
						)
					);
					_this.currentTime.setMonth(month);
					if (options.onChangeMonth && $.isFunction(options.onChangeMonth)) {
						options.onChangeMonth.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}
					datetimepicker.trigger('xchange.xdsoft');
					return month;
				};

				_this.getWeekOfYear = function (datetime) {
					if (options.onGetWeekOfYear && $.isFunction(options.onGetWeekOfYear)) {
						var week = options.onGetWeekOfYear.call(datetimepicker, datetime);
						if (typeof week !== 'undefined') {
							return week;
						}
					}
					var onejan = new Date(datetime.getFullYear(), 0, 1);
					//First week of the year is th one with the first Thursday according to ISO8601
					if(onejan.getDay()!=4)
						onejan.setMonth(0, 1 + ((4 - onejan.getDay()+ 7) % 7));
					return Math.ceil((((datetime - onejan) / 86400000) + onejan.getDay() + 1) / 7);
				};

				_this.strToDateTime = function (sDateTime) {
					var tmpDate = [], timeOffset, currentTime;

					if (sDateTime && sDateTime instanceof Date && _this.isValidDate(sDateTime)) {
						return sDateTime;
					}

					tmpDate = /^(\+|\-)(.*)$/.exec(sDateTime);
					if (tmpDate) {
						tmpDate[2] = dateHelper.parseDate(tmpDate[2], options.formatDate);
					}
					if (tmpDate  && tmpDate[2]) {
						timeOffset = tmpDate[2].getTime() - (tmpDate[2].getTimezoneOffset()) * 60000;
						currentTime = new Date((_this.now(true)).getTime() + parseInt(tmpDate[1] + '1', 10) * timeOffset);
					} else {
						currentTime = sDateTime ? dateHelper.parseDate(sDateTime, options.format) : _this.now();
					}

					if (!_this.isValidDate(currentTime)) {
						currentTime = _this.now();
					}

					return currentTime;
				};

				_this.strToDate = function (sDate) {
					if (sDate && sDate instanceof Date && _this.isValidDate(sDate)) {
						return sDate;
					}

					var currentTime = sDate ? dateHelper.parseDate(sDate, options.formatDate) : _this.now(true);
					if (!_this.isValidDate(currentTime)) {
						currentTime = _this.now(true);
					}
					return currentTime;
				};

				_this.strtotime = function (sTime) {
					if (sTime && sTime instanceof Date && _this.isValidDate(sTime)) {
						return sTime;
					}
					var currentTime = sTime ? dateHelper.parseDate(sTime, options.formatTime) : _this.now(true);
					if (!_this.isValidDate(currentTime)) {
						currentTime = _this.now(true);
					}
					return currentTime;
				};

				_this.str = function () {
					return dateHelper.formatDate(_this.currentTime, options.format);
				};
				_this.currentTime = this.now();
			};

			_xdsoft_datetime = new XDSoft_datetime();

			applyButton.on('touchend click', function (e) {//pathbrite
				e.preventDefault();
				datetimepicker.data('changed', true);
				_xdsoft_datetime.setCurrentTime(getCurrentValue());
				input.val(_xdsoft_datetime.str());
				datetimepicker.trigger('close.xdsoft');
			});
			mounth_picker
				.find('.xdsoft_today_button')
				.on('touchend mousedown.xdsoft', function () {
					datetimepicker.data('changed', true);
					_xdsoft_datetime.setCurrentTime(0);
					datetimepicker.trigger('afterOpen.xdsoft');
				}).on('dblclick.xdsoft', function () {
					var currentDate = _xdsoft_datetime.getCurrentTime(), minDate, maxDate;
					currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());
					minDate = _xdsoft_datetime.strToDate(options.minDate);
					minDate = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate());
					if (currentDate < minDate) {
						return;
					}
					maxDate = _xdsoft_datetime.strToDate(options.maxDate);
					maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate());
					if (currentDate > maxDate) {
						return;
					}
					input.val(_xdsoft_datetime.str());
					input.trigger('change');
					datetimepicker.trigger('close.xdsoft');
				});
			mounth_picker
				.find('.xdsoft_prev,.xdsoft_next')
				.on('touchend mousedown.xdsoft', function () {
					var $this = $(this),
						timer = 0,
						stop = false;

					(function arguments_callee1(v) {
						if ($this.hasClass(options.next)) {
							_xdsoft_datetime.nextMonth();
						} else if ($this.hasClass(options.prev)) {
							_xdsoft_datetime.prevMonth();
						}
						if (options.monthChangeSpinner) {
							if (!stop) {
								timer = setTimeout(arguments_callee1, v || 100);
							}
						}
					}(500));

					$([document.body, window]).on('touchend mouseup.xdsoft', function arguments_callee2() {
						clearTimeout(timer);
						stop = true;
						$([document.body, window]).off('touchend mouseup.xdsoft', arguments_callee2);
					});
				});

			timepicker
				.find('.xdsoft_prev,.xdsoft_next')
				.on('touchend mousedown.xdsoft', function () {
					var $this = $(this),
						timer = 0,
						stop = false,
						period = 110;
					(function arguments_callee4(v) {
						var pheight = timeboxparent[0].clientHeight,
							height = timebox[0].offsetHeight,
							top = Math.abs(parseInt(timebox.css('marginTop'), 10));
						if ($this.hasClass(options.next) && (height - pheight) - options.timeHeightInTimePicker >= top) {
							timebox.css('marginTop', '-' + (top + options.timeHeightInTimePicker) + 'px');
						} else if ($this.hasClass(options.prev) && top - options.timeHeightInTimePicker >= 0) {
							timebox.css('marginTop', '-' + (top - options.timeHeightInTimePicker) + 'px');
						}
                        /**
                         * Fixed bug:
                         * When using css3 transition, it will cause a bug that you cannot scroll the timepicker list.
                         * The reason is that the transition-duration time, if you set it to 0, all things fine, otherwise, this
                         * would cause a bug when you use jquery.css method.
                         * Let's say: * { transition: all .5s ease; }
                         * jquery timebox.css('marginTop') will return the original value which is before you clicking the next/prev button,
                         * meanwhile the timebox[0].style.marginTop will return the right value which is after you clicking the
                         * next/prev button.
                         * 
                         * What we should do:
                         * Replace timebox.css('marginTop') with timebox[0].style.marginTop.
                         */
                        timeboxparent.trigger('scroll_element.xdsoft_scroller', [Math.abs(parseInt(timebox[0].style.marginTop, 10) / (height - pheight))]);
						period = (period > 10) ? 10 : period - 10;
						if (!stop) {
							timer = setTimeout(arguments_callee4, v || period);
						}
					}(500));
					$([document.body, window]).on('touchend mouseup.xdsoft', function arguments_callee5() {
						clearTimeout(timer);
						stop = true;
						$([document.body, window])
							.off('touchend mouseup.xdsoft', arguments_callee5);
					});
				});

			xchangeTimer = 0;
			// base handler - generating a calendar and timepicker
			datetimepicker
				.on('xchange.xdsoft', function (event) {
					clearTimeout(xchangeTimer);
					xchangeTimer = setTimeout(function () {

						if (_xdsoft_datetime.currentTime === undefined || _xdsoft_datetime.currentTime === null) {
							_xdsoft_datetime.currentTime = _xdsoft_datetime.now();
						}

						var table =	'',
							start = new Date(_xdsoft_datetime.currentTime.getFullYear(), _xdsoft_datetime.currentTime.getMonth(), 1, 12, 0, 0),
							i = 0,
							j,
							today = _xdsoft_datetime.now(),
							maxDate = false,
							minDate = false,
							hDate,
							day,
							d,
							y,
							m,
							w,
							classes = [],
							customDateSettings,
							newRow = true,
							time = '',
							h = '',
							line_time,
							description;

						while (start.getDay() !== options.dayOfWeekStart) {
							start.setDate(start.getDate() - 1);
						}

						table += '<table><thead><tr>';

						if (options.weeks) {
							table += '<th></th>';
						}

						for (j = 0; j < 7; j += 1) {
							table += '<th>' + options.i18n[globalLocale].dayOfWeekShort[(j + options.dayOfWeekStart) % 7] + '</th>';
						}

						table += '</tr></thead>';
						table += '<tbody>';

						if (options.maxDate !== false) {
							maxDate = _xdsoft_datetime.strToDate(options.maxDate);
							maxDate = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate(), 23, 59, 59, 999);
						}

						if (options.minDate !== false) {
							minDate = _xdsoft_datetime.strToDate(options.minDate);
							minDate = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate());
						}

						while (i < _xdsoft_datetime.currentTime.countDaysInMonth() || start.getDay() !== options.dayOfWeekStart || _xdsoft_datetime.currentTime.getMonth() === start.getMonth()) {
							classes = [];
							i += 1;

							day = start.getDay();
							d = start.getDate();
							y = start.getFullYear();
							m = start.getMonth();
							w = _xdsoft_datetime.getWeekOfYear(start);
							description = '';

							classes.push('xdsoft_date');

							if (options.beforeShowDay && $.isFunction(options.beforeShowDay.call)) {
								customDateSettings = options.beforeShowDay.call(datetimepicker, start);
							} else {
								customDateSettings = null;
							}

							if(options.allowDateRe && Object.prototype.toString.call(options.allowDateRe) === "[object RegExp]"){
								if(!options.allowDateRe.test(dateHelper.formatDate(start, options.formatDate))){
									classes.push('xdsoft_disabled');
								}
							} else if(options.allowDates && options.allowDates.length>0){
								if(options.allowDates.indexOf(dateHelper.formatDate(start, options.formatDate)) === -1){
									classes.push('xdsoft_disabled');
								}
							} else if ((maxDate !== false && start > maxDate) || (minDate !== false && start < minDate) || (customDateSettings && customDateSettings[0] === false)) {
								classes.push('xdsoft_disabled');
							} else if (options.disabledDates.indexOf(dateHelper.formatDate(start, options.formatDate)) !== -1) {
								classes.push('xdsoft_disabled');
							} else if (options.disabledWeekDays.indexOf(day) !== -1) {
								classes.push('xdsoft_disabled');
							}else if (input.is('[readonly]')) {
								classes.push('xdsoft_disabled');
							}

							if (customDateSettings && customDateSettings[1] !== "") {
								classes.push(customDateSettings[1]);
							}

							if (_xdsoft_datetime.currentTime.getMonth() !== m) {
								classes.push('xdsoft_other_month');
							}

							if ((options.defaultSelect || datetimepicker.data('changed')) && dateHelper.formatDate(_xdsoft_datetime.currentTime, options.formatDate) === dateHelper.formatDate(start, options.formatDate)) {
								classes.push('xdsoft_current');
							}

							if (dateHelper.formatDate(today, options.formatDate) === dateHelper.formatDate(start, options.formatDate)) {
								classes.push('xdsoft_today');
							}

							if (start.getDay() === 0 || start.getDay() === 6 || options.weekends.indexOf(dateHelper.formatDate(start, options.formatDate)) !== -1) {
								classes.push('xdsoft_weekend');
							}

							if (options.highlightedDates[dateHelper.formatDate(start, options.formatDate)] !== undefined) {
								hDate = options.highlightedDates[dateHelper.formatDate(start, options.formatDate)];
								classes.push(hDate.style === undefined ? 'xdsoft_highlighted_default' : hDate.style);
								description = hDate.desc === undefined ? '' : hDate.desc;
							}

							if (options.beforeShowDay && $.isFunction(options.beforeShowDay)) {
								classes.push(options.beforeShowDay(start));
							}

							if (newRow) {
								table += '<tr>';
								newRow = false;
								if (options.weeks) {
									table += '<th>' + w + '</th>';
								}
							}

							table += '<td data-date="' + d + '" data-month="' + m + '" data-year="' + y + '"' + ' class="xdsoft_date xdsoft_day_of_week' + start.getDay() + ' ' + classes.join(' ') + '" title="' + description + '">' +
										'<div>' + d + '</div>' +
									'</td>';

							if (start.getDay() === options.dayOfWeekStartPrev) {
								table += '</tr>';
								newRow = true;
							}

							start.setDate(d + 1);
						}
						table += '</tbody></table>';

						calendar.html(table);

						mounth_picker.find('.xdsoft_label span').eq(0).text(options.i18n[globalLocale].months[_xdsoft_datetime.currentTime.getMonth()]);
						mounth_picker.find('.xdsoft_label span').eq(1).text(_xdsoft_datetime.currentTime.getFullYear());

						// generate timebox
						time = '';
						h = '';
						m = '';

						line_time = function line_time(h, m) {
							var now = _xdsoft_datetime.now(), optionDateTime, current_time,
								isALlowTimesInit = options.allowTimes && $.isArray(options.allowTimes) && options.allowTimes.length;
							now.setHours(h);
							h = parseInt(now.getHours(), 10);
							now.setMinutes(m);
							m = parseInt(now.getMinutes(), 10);
							optionDateTime = new Date(_xdsoft_datetime.currentTime);
							optionDateTime.setHours(h);
							optionDateTime.setMinutes(m);
							classes = [];			
							if ((options.minDateTime !== false && options.minDateTime > optionDateTime) || (options.maxTime !== false && _xdsoft_datetime.strtotime(options.maxTime).getTime() < now.getTime()) || (options.minTime !== false && _xdsoft_datetime.strtotime(options.minTime).getTime() > now.getTime())) {
								classes.push('xdsoft_disabled');
							} else if ((options.minDateTime !== false && options.minDateTime > optionDateTime) || ((options.disabledMinTime !== false && now.getTime() > _xdsoft_datetime.strtotime(options.disabledMinTime).getTime()) && (options.disabledMaxTime !== false && now.getTime() < _xdsoft_datetime.strtotime(options.disabledMaxTime).getTime()))) {
								classes.push('xdsoft_disabled');
							} else if (input.is('[readonly]')) {
								classes.push('xdsoft_disabled');
							}

							current_time = new Date(_xdsoft_datetime.currentTime);
							current_time.setHours(parseInt(_xdsoft_datetime.currentTime.getHours(), 10));

							if (!isALlowTimesInit) {
								current_time.setMinutes(Math[options.roundTime](_xdsoft_datetime.currentTime.getMinutes() / options.step) * options.step);
							}

							if ((options.initTime || options.defaultSelect || datetimepicker.data('changed')) && current_time.getHours() === parseInt(h, 10) && ((!isALlowTimesInit && options.step > 59) || current_time.getMinutes() === parseInt(m, 10))) {
								if (options.defaultSelect || datetimepicker.data('changed')) {
									classes.push('xdsoft_current');
								} else if (options.initTime) {
									classes.push('xdsoft_init_time');
								}
							}
							if (parseInt(today.getHours(), 10) === parseInt(h, 10) && parseInt(today.getMinutes(), 10) === parseInt(m, 10)) {
								classes.push('xdsoft_today');
							}
							time += '<div class="xdsoft_time ' + classes.join(' ') + '" data-hour="' + h + '" data-minute="' + m + '">' + dateHelper.formatDate(now, options.formatTime) + '</div>';
						};

						if (!options.allowTimes || !$.isArray(options.allowTimes) || !options.allowTimes.length) {
							for (i = 0, j = 0; i < (options.hours12 ? 12 : 24); i += 1) {
								for (j = 0; j < 60; j += options.step) {
									h = (i < 10 ? '0' : '') + i;
									m = (j < 10 ? '0' : '') + j;
									line_time(h, m);
								}
							}
						} else {
							for (i = 0; i < options.allowTimes.length; i += 1) {
								h = _xdsoft_datetime.strtotime(options.allowTimes[i]).getHours();
								m = _xdsoft_datetime.strtotime(options.allowTimes[i]).getMinutes();
								line_time(h, m);
							}
						}

						timebox.html(time);

						opt = '';
						i = 0;

						for (i = parseInt(options.yearStart, 10) + options.yearOffset; i <= parseInt(options.yearEnd, 10) + options.yearOffset; i += 1) {
							opt += '<div class="xdsoft_option ' + (_xdsoft_datetime.currentTime.getFullYear() === i ? 'xdsoft_current' : '') + '" data-value="' + i + '">' + i + '</div>';
						}
						yearselect.children().eq(0)
												.html(opt);

						for (i = parseInt(options.monthStart, 10), opt = ''; i <= parseInt(options.monthEnd, 10); i += 1) {
							opt += '<div class="xdsoft_option ' + (_xdsoft_datetime.currentTime.getMonth() === i ? 'xdsoft_current' : '') + '" data-value="' + i + '">' + options.i18n[globalLocale].months[i] + '</div>';
						}
						monthselect.children().eq(0).html(opt);
						$(datetimepicker)
							.trigger('generate.xdsoft');
					}, 10);
					event.stopPropagation();
				})
				.on('afterOpen.xdsoft', function () {
					if (options.timepicker) {
						var classType, pheight, height, top;
						if (timebox.find('.xdsoft_current').length) {
							classType = '.xdsoft_current';
						} else if (timebox.find('.xdsoft_init_time').length) {
							classType = '.xdsoft_init_time';
						}
						if (classType) {
							pheight = timeboxparent[0].clientHeight;
							height = timebox[0].offsetHeight;
							top = timebox.find(classType).index() * options.timeHeightInTimePicker + 1;
							if ((height - pheight) < top) {
								top = height - pheight;
							}
							timeboxparent.trigger('scroll_element.xdsoft_scroller', [parseInt(top, 10) / (height - pheight)]);
						} else {
							timeboxparent.trigger('scroll_element.xdsoft_scroller', [0]);
						}
					}
				});

			timerclick = 0;
			calendar
				.on('touchend click.xdsoft', 'td', function (xdevent) {
					xdevent.stopPropagation();  // Prevents closing of Pop-ups, Modals and Flyouts in Bootstrap
					timerclick += 1;
					var $this = $(this),
						currentTime = _xdsoft_datetime.currentTime;

					if (currentTime === undefined || currentTime === null) {
						_xdsoft_datetime.currentTime = _xdsoft_datetime.now();
						currentTime = _xdsoft_datetime.currentTime;
					}

					if ($this.hasClass('xdsoft_disabled')) {
						return false;
					}

					currentTime.setDate(1);
					currentTime.setFullYear($this.data('year'));
					currentTime.setMonth($this.data('month'));
					currentTime.setDate($this.data('date'));

					datetimepicker.trigger('select.xdsoft', [currentTime]);

					input.val(_xdsoft_datetime.str());

					if (options.onSelectDate &&	$.isFunction(options.onSelectDate)) {
						options.onSelectDate.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'), xdevent);
					}

					datetimepicker.data('changed', true);
					datetimepicker.trigger('xchange.xdsoft');
					datetimepicker.trigger('changedatetime.xdsoft');
					if ((timerclick > 1 || (options.closeOnDateSelect === true || (options.closeOnDateSelect === false && !options.timepicker))) && !options.inline) {
						datetimepicker.trigger('close.xdsoft');
					}
					setTimeout(function () {
						timerclick = 0;
					}, 200);
				});

			timebox
				.on('touchend click.xdsoft', 'div', function (xdevent) {
					xdevent.stopPropagation();
					var $this = $(this),
						currentTime = _xdsoft_datetime.currentTime;

					if (currentTime === undefined || currentTime === null) {
						_xdsoft_datetime.currentTime = _xdsoft_datetime.now();
						currentTime = _xdsoft_datetime.currentTime;
					}

					if ($this.hasClass('xdsoft_disabled')) {
						return false;
					}
					currentTime.setHours($this.data('hour'));
					currentTime.setMinutes($this.data('minute'));
					datetimepicker.trigger('select.xdsoft', [currentTime]);

					datetimepicker.data('input').val(_xdsoft_datetime.str());

					if (options.onSelectTime && $.isFunction(options.onSelectTime)) {
						options.onSelectTime.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'), xdevent);
					}
					datetimepicker.data('changed', true);
					datetimepicker.trigger('xchange.xdsoft');
					datetimepicker.trigger('changedatetime.xdsoft');
					if (options.inline !== true && options.closeOnTimeSelect === true) {
						datetimepicker.trigger('close.xdsoft');
					}
				});

			datepicker
				.on('mousewheel.xdsoft', function (event) {
					if (!options.scrollMonth) {
						return true;
					}
					if (event.deltaY < 0) {
						_xdsoft_datetime.nextMonth();
					} else {
						_xdsoft_datetime.prevMonth();
					}
					return false;
				});

			input
				.on('mousewheel.xdsoft', function (event) {
					if (!options.scrollInput) {
						return true;
					}
					if (!options.datepicker && options.timepicker) {
						current_time_index = timebox.find('.xdsoft_current').length ? timebox.find('.xdsoft_current').eq(0).index() : 0;
						if (current_time_index + event.deltaY >= 0 && current_time_index + event.deltaY < timebox.children().length) {
							current_time_index += event.deltaY;
						}
						if (timebox.children().eq(current_time_index).length) {
							timebox.children().eq(current_time_index).trigger('mousedown');
						}
						return false;
					}
					if (options.datepicker && !options.timepicker) {
						datepicker.trigger(event, [event.deltaY, event.deltaX, event.deltaY]);
						if (input.val) {
							input.val(_xdsoft_datetime.str());
						}
						datetimepicker.trigger('changedatetime.xdsoft');
						return false;
					}
				});

			datetimepicker
				.on('changedatetime.xdsoft', function (event) {
					if (options.onChangeDateTime && $.isFunction(options.onChangeDateTime)) {
						var $input = datetimepicker.data('input');
						options.onChangeDateTime.call(datetimepicker, _xdsoft_datetime.currentTime, $input, event);
						delete options.value;
						$input.trigger('change');
					}
				})
				.on('generate.xdsoft', function () {
					if (options.onGenerate && $.isFunction(options.onGenerate)) {
						options.onGenerate.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'));
					}
					if (triggerAfterOpen) {
						datetimepicker.trigger('afterOpen.xdsoft');
						triggerAfterOpen = false;
					}
				})
				.on('click.xdsoft', function (xdevent) {
					xdevent.stopPropagation();
				});

			current_time_index = 0;

			/**
			 * Runs the callback for each of the specified node's ancestors.
			 *
			 * Return FALSE from the callback to stop ascending.
			 *
			 * @param {DOMNode} node
			 * @param {Function} callback
			 * @returns {undefined}
			 */
			forEachAncestorOf = function (node, callback) {
				do {
					node = node.parentNode;

					if (callback(node) === false) {
						break;
					}
				} while (node.nodeName !== 'HTML');
			};

			/**
			 * Sets the position of the picker.
			 *
			 * @returns {undefined}
			 */
			setPos = function () {
				var dateInputOffset,
					dateInputElem,
					verticalPosition,
					left,
					position,
					datetimepickerElem,
					dateInputHasFixedAncestor,
					$dateInput,
					windowWidth,
					verticalAnchorEdge,
					datetimepickerCss,
					windowHeight,
					windowScrollTop;

				$dateInput = datetimepicker.data('input');
				dateInputOffset = $dateInput.offset();
				dateInputElem = $dateInput[0];

				verticalAnchorEdge = 'top';
				verticalPosition = (dateInputOffset.top + dateInputElem.offsetHeight) - 1;
				left = dateInputOffset.left;
				position = "absolute";

				windowWidth = $(window).width();
				windowHeight = $(window).height();
				windowScrollTop = $(window).scrollTop();

				if ((document.documentElement.clientWidth - dateInputOffset.left) < datepicker.parent().outerWidth(true)) {
					var diff = datepicker.parent().outerWidth(true) - dateInputElem.offsetWidth;
					left = left - diff;
				}

				if ($dateInput.parent().css('direction') === 'rtl') {
					left -= (datetimepicker.outerWidth() - $dateInput.outerWidth());
				}

				if (options.fixed) {
					verticalPosition -= windowScrollTop;
					left -= $(window).scrollLeft();
					position = "fixed";
				} else {
					dateInputHasFixedAncestor = false;

					forEachAncestorOf(dateInputElem, function (ancestorNode) {
						if (window.getComputedStyle(ancestorNode).getPropertyValue('position') === 'fixed') {
							dateInputHasFixedAncestor = true;
							return false;
						}
					});

					if (dateInputHasFixedAncestor) {
						position = 'fixed';

						//If the picker won't fit entirely within the viewport then display it above the date input.
						if (verticalPosition + datetimepicker.outerHeight() > windowHeight + windowScrollTop) {
							verticalAnchorEdge = 'bottom';
							verticalPosition = (windowHeight + windowScrollTop) - dateInputOffset.top;
						} else {
							verticalPosition -= windowScrollTop;
						}
					} else {
						if (verticalPosition + dateInputElem.offsetHeight > windowHeight + windowScrollTop) {
							verticalPosition = dateInputOffset.top - dateInputElem.offsetHeight + 1;
						}
					}

					if (verticalPosition < 0) {
						verticalPosition = 0;
					}

					if (left + dateInputElem.offsetWidth > windowWidth) {
						left = windowWidth - dateInputElem.offsetWidth;
					}
				}

				datetimepickerElem = datetimepicker[0];

				forEachAncestorOf(datetimepickerElem, function (ancestorNode) {
					var ancestorNodePosition;

					ancestorNodePosition = window.getComputedStyle(ancestorNode).getPropertyValue('position');

					if (ancestorNodePosition === 'relative' && windowWidth >= ancestorNode.offsetWidth) {
						left = left - ((windowWidth - ancestorNode.offsetWidth) / 2);
						return false;
					}
				});

				datetimepickerCss = {
					position: position,
					left: left,
					top: '',  //Initialize to prevent previous values interfering with new ones.
					bottom: ''  //Initialize to prevent previous values interfering with new ones.
				};

				datetimepickerCss[verticalAnchorEdge] = verticalPosition;

				datetimepicker.css(datetimepickerCss);
			};

			datetimepicker
				.on('open.xdsoft', function (event) {
					var onShow = true;
					if (options.onShow && $.isFunction(options.onShow)) {
						onShow = options.onShow.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'), event);
					}
					if (onShow !== false) {
						datetimepicker.show();
						setPos();
						$(window)
							.off('resize.xdsoft', setPos)
							.on('resize.xdsoft', setPos);

						if (options.closeOnWithoutClick) {
							$([document.body, window]).on('touchstart mousedown.xdsoft', function arguments_callee6() {
								datetimepicker.trigger('close.xdsoft');
								$([document.body, window]).off('touchstart mousedown.xdsoft', arguments_callee6);
							});
						}
					}
				})
				.on('close.xdsoft', function (event) {
					var onClose = true;
					mounth_picker
						.find('.xdsoft_month,.xdsoft_year')
							.find('.xdsoft_select')
								.hide();
					if (options.onClose && $.isFunction(options.onClose)) {
						onClose = options.onClose.call(datetimepicker, _xdsoft_datetime.currentTime, datetimepicker.data('input'), event);
					}
					if (onClose !== false && !options.opened && !options.inline) {
						datetimepicker.hide();
					}
					event.stopPropagation();
				})
				.on('toggle.xdsoft', function () {
					if (datetimepicker.is(':visible')) {
						datetimepicker.trigger('close.xdsoft');
					} else {
						datetimepicker.trigger('open.xdsoft');
					}
				})
				.data('input', input);

			timer = 0;

			datetimepicker.data('xdsoft_datetime', _xdsoft_datetime);
			datetimepicker.setOptions(options);

			function getCurrentValue() {
				var ct = false, time;

				if (options.startDate) {
					ct = _xdsoft_datetime.strToDate(options.startDate);
				} else {
					ct = options.value || ((input && input.val && input.val()) ? input.val() : '');
					if (ct) {
						ct = _xdsoft_datetime.strToDateTime(ct);
					} else if (options.defaultDate) {
						ct = _xdsoft_datetime.strToDateTime(options.defaultDate);
						if (options.defaultTime) {
							time = _xdsoft_datetime.strtotime(options.defaultTime);
							ct.setHours(time.getHours());
							ct.setMinutes(time.getMinutes());
						}
					}
				}

				if (ct && _xdsoft_datetime.isValidDate(ct)) {
					datetimepicker.data('changed', true);
				} else {
					ct = '';
				}

				return ct || 0;
			}

			function setMask(options) {

				var isValidValue = function (mask, value) {
					var reg = mask
						.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, '\\$1')
						.replace(/_/g, '{digit+}')
						.replace(/([0-9]{1})/g, '{digit$1}')
						.replace(/\{digit([0-9]{1})\}/g, '[0-$1_]{1}')
						.replace(/\{digit[\+]\}/g, '[0-9_]{1}');
					return (new RegExp(reg)).test(value);
				},
				getCaretPos = function (input) {
					try {
						if (document.selection && document.selection.createRange) {
							var range = document.selection.createRange();
							return range.getBookmark().charCodeAt(2) - 2;
						}
						if (input.setSelectionRange) {
							return input.selectionStart;
						}
					} catch (e) {
						return 0;
					}
				},
				setCaretPos = function (node, pos) {
					node = (typeof node === "string" || node instanceof String) ? document.getElementById(node) : node;
					if (!node) {
						return false;
					}
					if (node.createTextRange) {
						var textRange = node.createTextRange();
						textRange.collapse(true);
						textRange.moveEnd('character', pos);
						textRange.moveStart('character', pos);
						textRange.select();
						return true;
					}
					if (node.setSelectionRange) {
						node.setSelectionRange(pos, pos);
						return true;
					}
					return false;
				};
				if(options.mask) {
					input.off('keydown.xdsoft');
				}
				if (options.mask === true) {
														if (typeof moment != 'undefined') {
																	options.mask = options.format
																			.replace(/Y{4}/g, '9999')
																			.replace(/Y{2}/g, '99')
																			.replace(/M{2}/g, '19')
																			.replace(/D{2}/g, '39')
																			.replace(/H{2}/g, '29')
																			.replace(/m{2}/g, '59')
																			.replace(/s{2}/g, '59');
														} else {
																	options.mask = options.format
																			.replace(/Y/g, '9999')
																			.replace(/F/g, '9999')
																			.replace(/m/g, '19')
																			.replace(/d/g, '39')
																			.replace(/H/g, '29')
																			.replace(/i/g, '59')
																			.replace(/s/g, '59');
														}
				}

				if ($.type(options.mask) === 'string') {
					if (!isValidValue(options.mask, input.val())) {
						input.val(options.mask.replace(/[0-9]/g, '_'));
						setCaretPos(input[0], 0);
					}

					input.on('keydown.xdsoft', function (event) {
						var val = this.value,
							key = event.which,
							pos,
							digit;

						if (((key >= KEY0 && key <= KEY9) || (key >= _KEY0 && key <= _KEY9)) || (key === BACKSPACE || key === DEL)) {
							pos = getCaretPos(this);
							digit = (key !== BACKSPACE && key !== DEL) ? String.fromCharCode((_KEY0 <= key && key <= _KEY9) ? key - KEY0 : key) : '_';

							if ((key === BACKSPACE || key === DEL) && pos) {
								pos -= 1;
								digit = '_';
							}

							while (/[^0-9_]/.test(options.mask.substr(pos, 1)) && pos < options.mask.length && pos > 0) {
								pos += (key === BACKSPACE || key === DEL) ? -1 : 1;
							}

							val = val.substr(0, pos) + digit + val.substr(pos + 1);
							if ($.trim(val) === '') {
								val = options.mask.replace(/[0-9]/g, '_');
							} else {
								if (pos === options.mask.length) {
									event.preventDefault();
									return false;
								}
							}

							pos += (key === BACKSPACE || key === DEL) ? 0 : 1;
							while (/[^0-9_]/.test(options.mask.substr(pos, 1)) && pos < options.mask.length && pos > 0) {
								pos += (key === BACKSPACE || key === DEL) ? -1 : 1;
							}

							if (isValidValue(options.mask, val)) {
								this.value = val;
								setCaretPos(this, pos);
							} else if ($.trim(val) === '') {
								this.value = options.mask.replace(/[0-9]/g, '_');
							} else {
								input.trigger('error_input.xdsoft');
							}
						} else {
							if (([AKEY, CKEY, VKEY, ZKEY, YKEY].indexOf(key) !== -1 && ctrlDown) || [ESC, ARROWUP, ARROWDOWN, ARROWLEFT, ARROWRIGHT, F5, CTRLKEY, TAB, ENTER].indexOf(key) !== -1) {
								return true;
							}
						}

						event.preventDefault();
						return false;
					});
				}
			}

			_xdsoft_datetime.setCurrentTime(getCurrentValue());

			input
				.data('xdsoft_datetimepicker', datetimepicker)
				.on('open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart', function () {
					if (input.is(':disabled') || (input.data('xdsoft_datetimepicker').is(':visible') && options.closeOnInputClick)) {
						return;
					}
					clearTimeout(timer);
					timer = setTimeout(function () {
						if (input.is(':disabled')) {
							return;
						}

						triggerAfterOpen = true;
						_xdsoft_datetime.setCurrentTime(getCurrentValue());
						if(options.mask) {
							setMask(options);
						}
						datetimepicker.trigger('open.xdsoft');
					}, 100);
				})
				.on('keydown.xdsoft', function (event) {
					var elementSelector,
						key = event.which;
					if ([ENTER].indexOf(key) !== -1 && options.enterLikeTab) {
						elementSelector = $("input:visible,textarea:visible,button:visible,a:visible");
						datetimepicker.trigger('close.xdsoft');
						elementSelector.eq(elementSelector.index(this) + 1).focus();
						return false;
					}
					if ([TAB].indexOf(key) !== -1) {
						datetimepicker.trigger('close.xdsoft');
						return true;
					}
				})
				.on('blur.xdsoft', function () {
					datetimepicker.trigger('close.xdsoft');
				});
		};
		destroyDateTimePicker = function (input) {
			var datetimepicker = input.data('xdsoft_datetimepicker');
			if (datetimepicker) {
				datetimepicker.data('xdsoft_datetime', null);
				datetimepicker.remove();
				input
					.data('xdsoft_datetimepicker', null)
					.off('.xdsoft');
				$(window).off('resize.xdsoft');
				$([window, document.body]).off('mousedown.xdsoft touchstart');
				if (input.unmousewheel) {
					input.unmousewheel();
				}
			}
		};
		$(document)
			.off('keydown.xdsoftctrl keyup.xdsoftctrl')
			.on('keydown.xdsoftctrl', function (e) {
				if (e.keyCode === CTRLKEY) {
					ctrlDown = true;
				}
			})
			.on('keyup.xdsoftctrl', function (e) {
				if (e.keyCode === CTRLKEY) {
					ctrlDown = false;
				}
			});

		this.each(function () {
			var datetimepicker = $(this).data('xdsoft_datetimepicker'), $input;
			if (datetimepicker) {
				if ($.type(opt) === 'string') {
					switch (opt) {
					case 'show':
						$(this).select().focus();
						datetimepicker.trigger('open.xdsoft');
						break;
					case 'hide':
						datetimepicker.trigger('close.xdsoft');
						break;
					case 'toggle':
						datetimepicker.trigger('toggle.xdsoft');
						break;
					case 'destroy':
						destroyDateTimePicker($(this));
						break;
					case 'reset':
						this.value = this.defaultValue;
						if (!this.value || !datetimepicker.data('xdsoft_datetime').isValidDate(dateHelper.parseDate(this.value, options.format))) {
							datetimepicker.data('changed', false);
						}
						datetimepicker.data('xdsoft_datetime').setCurrentTime(this.value);
						break;
					case 'validate':
						$input = datetimepicker.data('input');
						$input.trigger('blur.xdsoft');
						break;
					default:
						if (datetimepicker[opt] && $.isFunction(datetimepicker[opt])) {
							result = datetimepicker[opt](opt2);
						}
					}
				} else {
					datetimepicker
						.setOptions(opt);
				}
				return 0;
			}
			if ($.type(opt) !== 'string') {
				if (!options.lazyInit || options.open || options.inline) {
					createDateTimePicker($(this));
				} else {
					lazyInit($(this));
				}
			}
		});

		return result;
	};

	$.fn.datetimepicker.defaults = default_options;

	function HighlightedDate(date, desc, style) {
		"use strict";
		this.date = date;
		this.desc = desc;
		this.style = style;
	}
}));
/*!
 * jQuery Mousewheel 3.1.13
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 */

(function (factory) {
    if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.12',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
            // Clean up the data we added to the element
            $.removeData(this, 'mousewheel-line-height');
            $.removeData(this, 'mousewheel-page-height');
        },

        getLineHeight: function(elem) {
            var $elem = $(elem),
                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
            if (!$parent.length) {
                $parent = $('body');
            }
            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
            normalizeOffset: true  // calls getBoundingClientRect for each event
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0,
            offsetX    = 0,
            offsetY    = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Normalise offsetX and offsetY properties
        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));
